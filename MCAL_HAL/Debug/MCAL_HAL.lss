
MCAL_HAL.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002eaa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00002eaa  00002f1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002010  00000000  00000000  00003028  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c8e  00000000  00000000  00005038  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00005cc6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  00005e46  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  00006019  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  00008028  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  00009198  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000a19c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  0000a33c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  0000a5fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000aeab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ea       	ldi	r30, 0xAA	; 170
      68:	fe e2       	ldi	r31, 0x2E	; 46
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 1f 16 	call	0x2c3e	; 0x2c3e <main>
      7a:	0c 94 53 17 	jmp	0x2ea6	; 0x2ea6 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 1c 17 	jmp	0x2e38	; 0x2e38 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 38 17 	jmp	0x2e70	; 0x2e70 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 28 17 	jmp	0x2e50	; 0x2e50 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 28 17 	jmp	0x2e50	; 0x2e50 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 1c 17 	jmp	0x2e38	; 0x2e38 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 38 17 	jmp	0x2e70	; 0x2e70 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 28 17 	jmp	0x2e50	; 0x2e50 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 28 17 	jmp	0x2e50	; 0x2e50 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 28 17 	jmp	0x2e50	; 0x2e50 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 44 17 	jmp	0x2e88	; 0x2e88 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 2c 17 	jmp	0x2e58	; 0x2e58 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 48 17 	jmp	0x2e90	; 0x2e90 <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 24 17 	jmp	0x2e48	; 0x2e48 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 40 17 	jmp	0x2e80	; 0x2e80 <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	e8 59       	subi	r30, 0x98	; 152
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <DIO_VidSetPinDirection>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>

void DIO_VidSetPinDirection	( u8 LOC_u8Port, u8 LOC_u8Pin, u8 LOC_u8State)
{
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	27 97       	sbiw	r28, 0x07	; 7
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	6a 83       	std	Y+2, r22	; 0x02
     cde:	4b 83       	std	Y+3, r20	; 0x03
	if ( OUTPUT==LOC_u8State)
     ce0:	8b 81       	ldd	r24, Y+3	; 0x03
     ce2:	81 30       	cpi	r24, 0x01	; 1
     ce4:	09 f0       	breq	.+2      	; 0xce8 <DIO_VidSetPinDirection+0x22>
     ce6:	6f c0       	rjmp	.+222    	; 0xdc6 <DIO_VidSetPinDirection+0x100>
	{
		switch (LOC_u8Port)
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	3f 83       	std	Y+7, r19	; 0x07
     cf0:	2e 83       	std	Y+6, r18	; 0x06
     cf2:	8e 81       	ldd	r24, Y+6	; 0x06
     cf4:	9f 81       	ldd	r25, Y+7	; 0x07
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	49 f1       	breq	.+82     	; 0xd4e <DIO_VidSetPinDirection+0x88>
     cfc:	2e 81       	ldd	r18, Y+6	; 0x06
     cfe:	3f 81       	ldd	r19, Y+7	; 0x07
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	2c f4       	brge	.+10     	; 0xd10 <DIO_VidSetPinDirection+0x4a>
     d06:	8e 81       	ldd	r24, Y+6	; 0x06
     d08:	9f 81       	ldd	r25, Y+7	; 0x07
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	61 f0       	breq	.+24     	; 0xd26 <DIO_VidSetPinDirection+0x60>
     d0e:	d2 c0       	rjmp	.+420    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
     d10:	2e 81       	ldd	r18, Y+6	; 0x06
     d12:	3f 81       	ldd	r19, Y+7	; 0x07
     d14:	22 30       	cpi	r18, 0x02	; 2
     d16:	31 05       	cpc	r19, r1
     d18:	71 f1       	breq	.+92     	; 0xd76 <DIO_VidSetPinDirection+0xb0>
     d1a:	8e 81       	ldd	r24, Y+6	; 0x06
     d1c:	9f 81       	ldd	r25, Y+7	; 0x07
     d1e:	83 30       	cpi	r24, 0x03	; 3
     d20:	91 05       	cpc	r25, r1
     d22:	e9 f1       	breq	.+122    	; 0xd9e <DIO_VidSetPinDirection+0xd8>
     d24:	c7 c0       	rjmp	.+398    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		{
		case 0: SET_BIT(DDRA, LOC_u8Pin); break;
     d26:	aa e3       	ldi	r26, 0x3A	; 58
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	ea e3       	ldi	r30, 0x3A	; 58
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	48 2f       	mov	r20, r24
     d32:	8a 81       	ldd	r24, Y+2	; 0x02
     d34:	28 2f       	mov	r18, r24
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	02 2e       	mov	r0, r18
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <DIO_VidSetPinDirection+0x7e>
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	0a 94       	dec	r0
     d46:	e2 f7       	brpl	.-8      	; 0xd40 <DIO_VidSetPinDirection+0x7a>
     d48:	84 2b       	or	r24, r20
     d4a:	8c 93       	st	X, r24
     d4c:	b3 c0       	rjmp	.+358    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 1: SET_BIT(DDRB, LOC_u8Pin); break;
     d4e:	a7 e3       	ldi	r26, 0x37	; 55
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	e7 e3       	ldi	r30, 0x37	; 55
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	48 2f       	mov	r20, r24
     d5a:	8a 81       	ldd	r24, Y+2	; 0x02
     d5c:	28 2f       	mov	r18, r24
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	02 2e       	mov	r0, r18
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <DIO_VidSetPinDirection+0xa6>
     d68:	88 0f       	add	r24, r24
     d6a:	99 1f       	adc	r25, r25
     d6c:	0a 94       	dec	r0
     d6e:	e2 f7       	brpl	.-8      	; 0xd68 <DIO_VidSetPinDirection+0xa2>
     d70:	84 2b       	or	r24, r20
     d72:	8c 93       	st	X, r24
     d74:	9f c0       	rjmp	.+318    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 2: SET_BIT(DDRC, LOC_u8Pin); break;
     d76:	a4 e3       	ldi	r26, 0x34	; 52
     d78:	b0 e0       	ldi	r27, 0x00	; 0
     d7a:	e4 e3       	ldi	r30, 0x34	; 52
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	48 2f       	mov	r20, r24
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	02 2e       	mov	r0, r18
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <DIO_VidSetPinDirection+0xce>
     d90:	88 0f       	add	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	0a 94       	dec	r0
     d96:	e2 f7       	brpl	.-8      	; 0xd90 <DIO_VidSetPinDirection+0xca>
     d98:	84 2b       	or	r24, r20
     d9a:	8c 93       	st	X, r24
     d9c:	8b c0       	rjmp	.+278    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 3: SET_BIT(DDRD, LOC_u8Pin); break;
     d9e:	a1 e3       	ldi	r26, 0x31	; 49
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e1 e3       	ldi	r30, 0x31	; 49
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	80 81       	ld	r24, Z
     da8:	48 2f       	mov	r20, r24
     daa:	8a 81       	ldd	r24, Y+2	; 0x02
     dac:	28 2f       	mov	r18, r24
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	02 2e       	mov	r0, r18
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <DIO_VidSetPinDirection+0xf6>
     db8:	88 0f       	add	r24, r24
     dba:	99 1f       	adc	r25, r25
     dbc:	0a 94       	dec	r0
     dbe:	e2 f7       	brpl	.-8      	; 0xdb8 <DIO_VidSetPinDirection+0xf2>
     dc0:	84 2b       	or	r24, r20
     dc2:	8c 93       	st	X, r24
     dc4:	77 c0       	rjmp	.+238    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		}
	}
	else if (INPUT==LOC_u8State)
     dc6:	8b 81       	ldd	r24, Y+3	; 0x03
     dc8:	88 23       	and	r24, r24
     dca:	09 f0       	breq	.+2      	; 0xdce <DIO_VidSetPinDirection+0x108>
     dcc:	73 c0       	rjmp	.+230    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
	{
		switch (LOC_u8Port)
     dce:	89 81       	ldd	r24, Y+1	; 0x01
     dd0:	28 2f       	mov	r18, r24
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	3d 83       	std	Y+5, r19	; 0x05
     dd6:	2c 83       	std	Y+4, r18	; 0x04
     dd8:	8c 81       	ldd	r24, Y+4	; 0x04
     dda:	9d 81       	ldd	r25, Y+5	; 0x05
     ddc:	81 30       	cpi	r24, 0x01	; 1
     dde:	91 05       	cpc	r25, r1
     de0:	59 f1       	breq	.+86     	; 0xe38 <DIO_VidSetPinDirection+0x172>
     de2:	2c 81       	ldd	r18, Y+4	; 0x04
     de4:	3d 81       	ldd	r19, Y+5	; 0x05
     de6:	22 30       	cpi	r18, 0x02	; 2
     de8:	31 05       	cpc	r19, r1
     dea:	2c f4       	brge	.+10     	; 0xdf6 <DIO_VidSetPinDirection+0x130>
     dec:	8c 81       	ldd	r24, Y+4	; 0x04
     dee:	9d 81       	ldd	r25, Y+5	; 0x05
     df0:	00 97       	sbiw	r24, 0x00	; 0
     df2:	69 f0       	breq	.+26     	; 0xe0e <DIO_VidSetPinDirection+0x148>
     df4:	5f c0       	rjmp	.+190    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
     df6:	2c 81       	ldd	r18, Y+4	; 0x04
     df8:	3d 81       	ldd	r19, Y+5	; 0x05
     dfa:	22 30       	cpi	r18, 0x02	; 2
     dfc:	31 05       	cpc	r19, r1
     dfe:	89 f1       	breq	.+98     	; 0xe62 <DIO_VidSetPinDirection+0x19c>
     e00:	8c 81       	ldd	r24, Y+4	; 0x04
     e02:	9d 81       	ldd	r25, Y+5	; 0x05
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	91 05       	cpc	r25, r1
     e08:	09 f4       	brne	.+2      	; 0xe0c <DIO_VidSetPinDirection+0x146>
     e0a:	40 c0       	rjmp	.+128    	; 0xe8c <DIO_VidSetPinDirection+0x1c6>
     e0c:	53 c0       	rjmp	.+166    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		{
		case 0: CLR_BIT(DDRA, LOC_u8Pin); break;
     e0e:	aa e3       	ldi	r26, 0x3A	; 58
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	ea e3       	ldi	r30, 0x3A	; 58
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8a 81       	ldd	r24, Y+2	; 0x02
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <DIO_VidSetPinDirection+0x166>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <DIO_VidSetPinDirection+0x162>
     e30:	80 95       	com	r24
     e32:	84 23       	and	r24, r20
     e34:	8c 93       	st	X, r24
     e36:	3e c0       	rjmp	.+124    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 1: CLR_BIT(DDRB, LOC_u8Pin); break;
     e38:	a7 e3       	ldi	r26, 0x37	; 55
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e7 e3       	ldi	r30, 0x37	; 55
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	48 2f       	mov	r20, r24
     e44:	8a 81       	ldd	r24, Y+2	; 0x02
     e46:	28 2f       	mov	r18, r24
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 2e       	mov	r0, r18
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <DIO_VidSetPinDirection+0x190>
     e52:	88 0f       	add	r24, r24
     e54:	99 1f       	adc	r25, r25
     e56:	0a 94       	dec	r0
     e58:	e2 f7       	brpl	.-8      	; 0xe52 <DIO_VidSetPinDirection+0x18c>
     e5a:	80 95       	com	r24
     e5c:	84 23       	and	r24, r20
     e5e:	8c 93       	st	X, r24
     e60:	29 c0       	rjmp	.+82     	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 2: CLR_BIT(DDRC, LOC_u8Pin); break;
     e62:	a4 e3       	ldi	r26, 0x34	; 52
     e64:	b0 e0       	ldi	r27, 0x00	; 0
     e66:	e4 e3       	ldi	r30, 0x34	; 52
     e68:	f0 e0       	ldi	r31, 0x00	; 0
     e6a:	80 81       	ld	r24, Z
     e6c:	48 2f       	mov	r20, r24
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	28 2f       	mov	r18, r24
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	02 2e       	mov	r0, r18
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <DIO_VidSetPinDirection+0x1ba>
     e7c:	88 0f       	add	r24, r24
     e7e:	99 1f       	adc	r25, r25
     e80:	0a 94       	dec	r0
     e82:	e2 f7       	brpl	.-8      	; 0xe7c <DIO_VidSetPinDirection+0x1b6>
     e84:	80 95       	com	r24
     e86:	84 23       	and	r24, r20
     e88:	8c 93       	st	X, r24
     e8a:	14 c0       	rjmp	.+40     	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 3: CLR_BIT(DDRD, LOC_u8Pin); break;
     e8c:	a1 e3       	ldi	r26, 0x31	; 49
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	e1 e3       	ldi	r30, 0x31	; 49
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	80 81       	ld	r24, Z
     e96:	48 2f       	mov	r20, r24
     e98:	8a 81       	ldd	r24, Y+2	; 0x02
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	02 2e       	mov	r0, r18
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_VidSetPinDirection+0x1e4>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	0a 94       	dec	r0
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_VidSetPinDirection+0x1e0>
     eae:	80 95       	com	r24
     eb0:	84 23       	and	r24, r20
     eb2:	8c 93       	st	X, r24
		}
	}
}
     eb4:	27 96       	adiw	r28, 0x07	; 7
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	de bf       	out	0x3e, r29	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	cd bf       	out	0x3d, r28	; 61
     ec0:	cf 91       	pop	r28
     ec2:	df 91       	pop	r29
     ec4:	08 95       	ret

00000ec6 <DIO_VidSetPinValue>:

void DIO_VidSetPinValue	( u8 LOC_u8Port, u8 LOC_u8Pin, u8 LOC_u8Value)
{
     ec6:	df 93       	push	r29
     ec8:	cf 93       	push	r28
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
     ece:	27 97       	sbiw	r28, 0x07	; 7
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	6a 83       	std	Y+2, r22	; 0x02
     ede:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1==LOC_u8Value)
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	81 30       	cpi	r24, 0x01	; 1
     ee4:	09 f0       	breq	.+2      	; 0xee8 <DIO_VidSetPinValue+0x22>
     ee6:	6f c0       	rjmp	.+222    	; 0xfc6 <DIO_VidSetPinValue+0x100>
	{
		switch (LOC_u8Port)
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	28 2f       	mov	r18, r24
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	3f 83       	std	Y+7, r19	; 0x07
     ef0:	2e 83       	std	Y+6, r18	; 0x06
     ef2:	8e 81       	ldd	r24, Y+6	; 0x06
     ef4:	9f 81       	ldd	r25, Y+7	; 0x07
     ef6:	81 30       	cpi	r24, 0x01	; 1
     ef8:	91 05       	cpc	r25, r1
     efa:	49 f1       	breq	.+82     	; 0xf4e <DIO_VidSetPinValue+0x88>
     efc:	2e 81       	ldd	r18, Y+6	; 0x06
     efe:	3f 81       	ldd	r19, Y+7	; 0x07
     f00:	22 30       	cpi	r18, 0x02	; 2
     f02:	31 05       	cpc	r19, r1
     f04:	2c f4       	brge	.+10     	; 0xf10 <DIO_VidSetPinValue+0x4a>
     f06:	8e 81       	ldd	r24, Y+6	; 0x06
     f08:	9f 81       	ldd	r25, Y+7	; 0x07
     f0a:	00 97       	sbiw	r24, 0x00	; 0
     f0c:	61 f0       	breq	.+24     	; 0xf26 <DIO_VidSetPinValue+0x60>
     f0e:	d2 c0       	rjmp	.+420    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
     f10:	2e 81       	ldd	r18, Y+6	; 0x06
     f12:	3f 81       	ldd	r19, Y+7	; 0x07
     f14:	22 30       	cpi	r18, 0x02	; 2
     f16:	31 05       	cpc	r19, r1
     f18:	71 f1       	breq	.+92     	; 0xf76 <DIO_VidSetPinValue+0xb0>
     f1a:	8e 81       	ldd	r24, Y+6	; 0x06
     f1c:	9f 81       	ldd	r25, Y+7	; 0x07
     f1e:	83 30       	cpi	r24, 0x03	; 3
     f20:	91 05       	cpc	r25, r1
     f22:	e9 f1       	breq	.+122    	; 0xf9e <DIO_VidSetPinValue+0xd8>
     f24:	c7 c0       	rjmp	.+398    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		{
		case 0: SET_BIT(PORTA, LOC_u8Pin); break;
     f26:	ab e3       	ldi	r26, 0x3B	; 59
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	eb e3       	ldi	r30, 0x3B	; 59
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	48 2f       	mov	r20, r24
     f32:	8a 81       	ldd	r24, Y+2	; 0x02
     f34:	28 2f       	mov	r18, r24
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 2e       	mov	r0, r18
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <DIO_VidSetPinValue+0x7e>
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	0a 94       	dec	r0
     f46:	e2 f7       	brpl	.-8      	; 0xf40 <DIO_VidSetPinValue+0x7a>
     f48:	84 2b       	or	r24, r20
     f4a:	8c 93       	st	X, r24
     f4c:	b3 c0       	rjmp	.+358    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 1: SET_BIT(PORTB, LOC_u8Pin); break;
     f4e:	a8 e3       	ldi	r26, 0x38	; 56
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	e8 e3       	ldi	r30, 0x38	; 56
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	48 2f       	mov	r20, r24
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	28 2f       	mov	r18, r24
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	81 e0       	ldi	r24, 0x01	; 1
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	02 2e       	mov	r0, r18
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <DIO_VidSetPinValue+0xa6>
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	0a 94       	dec	r0
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <DIO_VidSetPinValue+0xa2>
     f70:	84 2b       	or	r24, r20
     f72:	8c 93       	st	X, r24
     f74:	9f c0       	rjmp	.+318    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 2: SET_BIT(PORTC, LOC_u8Pin); break;
     f76:	a5 e3       	ldi	r26, 0x35	; 53
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e5 e3       	ldi	r30, 0x35	; 53
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	48 2f       	mov	r20, r24
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	28 2f       	mov	r18, r24
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	02 2e       	mov	r0, r18
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <DIO_VidSetPinValue+0xce>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	0a 94       	dec	r0
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <DIO_VidSetPinValue+0xca>
     f98:	84 2b       	or	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	8b c0       	rjmp	.+278    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 3: SET_BIT(PORTD, LOC_u8Pin); break;
     f9e:	a2 e3       	ldi	r26, 0x32	; 50
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e2 e3       	ldi	r30, 0x32	; 50
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_VidSetPinValue+0xf6>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_VidSetPinValue+0xf2>
     fc0:	84 2b       	or	r24, r20
     fc2:	8c 93       	st	X, r24
     fc4:	77 c0       	rjmp	.+238    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		}
	}
	else if (0==LOC_u8Value)
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	88 23       	and	r24, r24
     fca:	09 f0       	breq	.+2      	; 0xfce <DIO_VidSetPinValue+0x108>
     fcc:	73 c0       	rjmp	.+230    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
	{
		switch (LOC_u8Port)
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	3d 83       	std	Y+5, r19	; 0x05
     fd6:	2c 83       	std	Y+4, r18	; 0x04
     fd8:	8c 81       	ldd	r24, Y+4	; 0x04
     fda:	9d 81       	ldd	r25, Y+5	; 0x05
     fdc:	81 30       	cpi	r24, 0x01	; 1
     fde:	91 05       	cpc	r25, r1
     fe0:	59 f1       	breq	.+86     	; 0x1038 <DIO_VidSetPinValue+0x172>
     fe2:	2c 81       	ldd	r18, Y+4	; 0x04
     fe4:	3d 81       	ldd	r19, Y+5	; 0x05
     fe6:	22 30       	cpi	r18, 0x02	; 2
     fe8:	31 05       	cpc	r19, r1
     fea:	2c f4       	brge	.+10     	; 0xff6 <DIO_VidSetPinValue+0x130>
     fec:	8c 81       	ldd	r24, Y+4	; 0x04
     fee:	9d 81       	ldd	r25, Y+5	; 0x05
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	69 f0       	breq	.+26     	; 0x100e <DIO_VidSetPinValue+0x148>
     ff4:	5f c0       	rjmp	.+190    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
     ff6:	2c 81       	ldd	r18, Y+4	; 0x04
     ff8:	3d 81       	ldd	r19, Y+5	; 0x05
     ffa:	22 30       	cpi	r18, 0x02	; 2
     ffc:	31 05       	cpc	r19, r1
     ffe:	89 f1       	breq	.+98     	; 0x1062 <DIO_VidSetPinValue+0x19c>
    1000:	8c 81       	ldd	r24, Y+4	; 0x04
    1002:	9d 81       	ldd	r25, Y+5	; 0x05
    1004:	83 30       	cpi	r24, 0x03	; 3
    1006:	91 05       	cpc	r25, r1
    1008:	09 f4       	brne	.+2      	; 0x100c <DIO_VidSetPinValue+0x146>
    100a:	40 c0       	rjmp	.+128    	; 0x108c <DIO_VidSetPinValue+0x1c6>
    100c:	53 c0       	rjmp	.+166    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		{
		case 0: CLR_BIT(PORTA, LOC_u8Pin); break;
    100e:	ab e3       	ldi	r26, 0x3B	; 59
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	eb e3       	ldi	r30, 0x3B	; 59
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	48 2f       	mov	r20, r24
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	02 2e       	mov	r0, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <DIO_VidSetPinValue+0x166>
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	0a 94       	dec	r0
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <DIO_VidSetPinValue+0x162>
    1030:	80 95       	com	r24
    1032:	84 23       	and	r24, r20
    1034:	8c 93       	st	X, r24
    1036:	3e c0       	rjmp	.+124    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 1: CLR_BIT(PORTB, LOC_u8Pin); break;
    1038:	a8 e3       	ldi	r26, 0x38	; 56
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e8 e3       	ldi	r30, 0x38	; 56
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	48 2f       	mov	r20, r24
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	28 2f       	mov	r18, r24
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	02 2e       	mov	r0, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_VidSetPinValue+0x190>
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	0a 94       	dec	r0
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_VidSetPinValue+0x18c>
    105a:	80 95       	com	r24
    105c:	84 23       	and	r24, r20
    105e:	8c 93       	st	X, r24
    1060:	29 c0       	rjmp	.+82     	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 2: CLR_BIT(PORTC, LOC_u8Pin); break;
    1062:	a5 e3       	ldi	r26, 0x35	; 53
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e5 e3       	ldi	r30, 0x35	; 53
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	02 2e       	mov	r0, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_VidSetPinValue+0x1ba>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	0a 94       	dec	r0
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_VidSetPinValue+0x1b6>
    1084:	80 95       	com	r24
    1086:	84 23       	and	r24, r20
    1088:	8c 93       	st	X, r24
    108a:	14 c0       	rjmp	.+40     	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 3: CLR_BIT(PORTD, LOC_u8Pin); break;
    108c:	a2 e3       	ldi	r26, 0x32	; 50
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	e2 e3       	ldi	r30, 0x32	; 50
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	48 2f       	mov	r20, r24
    1098:	8a 81       	ldd	r24, Y+2	; 0x02
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	02 2e       	mov	r0, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <DIO_VidSetPinValue+0x1e4>
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	0a 94       	dec	r0
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <DIO_VidSetPinValue+0x1e0>
    10ae:	80 95       	com	r24
    10b0:	84 23       	and	r24, r20
    10b2:	8c 93       	st	X, r24
		}
	}
}
    10b4:	27 96       	adiw	r28, 0x07	; 7
    10b6:	0f b6       	in	r0, 0x3f	; 63
    10b8:	f8 94       	cli
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	cd bf       	out	0x3d, r28	; 61
    10c0:	cf 91       	pop	r28
    10c2:	df 91       	pop	r29
    10c4:	08 95       	ret

000010c6 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection	( u8 LOC_u8Port, u8 LOC_u8Value)
{
    10c6:	df 93       	push	r29
    10c8:	cf 93       	push	r28
    10ca:	00 d0       	rcall	.+0      	; 0x10cc <DIO_VidSetPortDirection+0x6>
    10cc:	00 d0       	rcall	.+0      	; 0x10ce <DIO_VidSetPortDirection+0x8>
    10ce:	cd b7       	in	r28, 0x3d	; 61
    10d0:	de b7       	in	r29, 0x3e	; 62
    10d2:	89 83       	std	Y+1, r24	; 0x01
    10d4:	6a 83       	std	Y+2, r22	; 0x02
	switch (LOC_u8Port)
    10d6:	89 81       	ldd	r24, Y+1	; 0x01
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	3c 83       	std	Y+4, r19	; 0x04
    10de:	2b 83       	std	Y+3, r18	; 0x03
    10e0:	8b 81       	ldd	r24, Y+3	; 0x03
    10e2:	9c 81       	ldd	r25, Y+4	; 0x04
    10e4:	81 30       	cpi	r24, 0x01	; 1
    10e6:	91 05       	cpc	r25, r1
    10e8:	d1 f0       	breq	.+52     	; 0x111e <DIO_VidSetPortDirection+0x58>
    10ea:	2b 81       	ldd	r18, Y+3	; 0x03
    10ec:	3c 81       	ldd	r19, Y+4	; 0x04
    10ee:	22 30       	cpi	r18, 0x02	; 2
    10f0:	31 05       	cpc	r19, r1
    10f2:	2c f4       	brge	.+10     	; 0x10fe <DIO_VidSetPortDirection+0x38>
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	00 97       	sbiw	r24, 0x00	; 0
    10fa:	61 f0       	breq	.+24     	; 0x1114 <DIO_VidSetPortDirection+0x4e>
    10fc:	1e c0       	rjmp	.+60     	; 0x113a <DIO_VidSetPortDirection+0x74>
    10fe:	2b 81       	ldd	r18, Y+3	; 0x03
    1100:	3c 81       	ldd	r19, Y+4	; 0x04
    1102:	22 30       	cpi	r18, 0x02	; 2
    1104:	31 05       	cpc	r19, r1
    1106:	81 f0       	breq	.+32     	; 0x1128 <DIO_VidSetPortDirection+0x62>
    1108:	8b 81       	ldd	r24, Y+3	; 0x03
    110a:	9c 81       	ldd	r25, Y+4	; 0x04
    110c:	83 30       	cpi	r24, 0x03	; 3
    110e:	91 05       	cpc	r25, r1
    1110:	81 f0       	breq	.+32     	; 0x1132 <DIO_VidSetPortDirection+0x6c>
    1112:	13 c0       	rjmp	.+38     	; 0x113a <DIO_VidSetPortDirection+0x74>
	{
	case 0: DDRA = LOC_u8Value; break;
    1114:	ea e3       	ldi	r30, 0x3A	; 58
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	80 83       	st	Z, r24
    111c:	0e c0       	rjmp	.+28     	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 1: DDRB = LOC_u8Value; break;
    111e:	e7 e3       	ldi	r30, 0x37	; 55
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	80 83       	st	Z, r24
    1126:	09 c0       	rjmp	.+18     	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 2: DDRC = LOC_u8Value; break;
    1128:	e4 e3       	ldi	r30, 0x34	; 52
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	8a 81       	ldd	r24, Y+2	; 0x02
    112e:	80 83       	st	Z, r24
    1130:	04 c0       	rjmp	.+8      	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 3: DDRD = LOC_u8Value; break;
    1132:	e1 e3       	ldi	r30, 0x31	; 49
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	8a 81       	ldd	r24, Y+2	; 0x02
    1138:	80 83       	st	Z, r24
	}
}
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	cf 91       	pop	r28
    1144:	df 91       	pop	r29
    1146:	08 95       	ret

00001148 <DIO_VidSetPortValue>:

void DIO_VidSetPortValue	( u8 LOC_u8Port, u8 LOC_u8Value)
{
    1148:	df 93       	push	r29
    114a:	cf 93       	push	r28
    114c:	00 d0       	rcall	.+0      	; 0x114e <DIO_VidSetPortValue+0x6>
    114e:	00 d0       	rcall	.+0      	; 0x1150 <DIO_VidSetPortValue+0x8>
    1150:	cd b7       	in	r28, 0x3d	; 61
    1152:	de b7       	in	r29, 0x3e	; 62
    1154:	89 83       	std	Y+1, r24	; 0x01
    1156:	6a 83       	std	Y+2, r22	; 0x02
	switch (LOC_u8Port)
    1158:	89 81       	ldd	r24, Y+1	; 0x01
    115a:	28 2f       	mov	r18, r24
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	3c 83       	std	Y+4, r19	; 0x04
    1160:	2b 83       	std	Y+3, r18	; 0x03
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	9c 81       	ldd	r25, Y+4	; 0x04
    1166:	81 30       	cpi	r24, 0x01	; 1
    1168:	91 05       	cpc	r25, r1
    116a:	d1 f0       	breq	.+52     	; 0x11a0 <DIO_VidSetPortValue+0x58>
    116c:	2b 81       	ldd	r18, Y+3	; 0x03
    116e:	3c 81       	ldd	r19, Y+4	; 0x04
    1170:	22 30       	cpi	r18, 0x02	; 2
    1172:	31 05       	cpc	r19, r1
    1174:	2c f4       	brge	.+10     	; 0x1180 <DIO_VidSetPortValue+0x38>
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	9c 81       	ldd	r25, Y+4	; 0x04
    117a:	00 97       	sbiw	r24, 0x00	; 0
    117c:	61 f0       	breq	.+24     	; 0x1196 <DIO_VidSetPortValue+0x4e>
    117e:	1e c0       	rjmp	.+60     	; 0x11bc <DIO_VidSetPortValue+0x74>
    1180:	2b 81       	ldd	r18, Y+3	; 0x03
    1182:	3c 81       	ldd	r19, Y+4	; 0x04
    1184:	22 30       	cpi	r18, 0x02	; 2
    1186:	31 05       	cpc	r19, r1
    1188:	81 f0       	breq	.+32     	; 0x11aa <DIO_VidSetPortValue+0x62>
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	9c 81       	ldd	r25, Y+4	; 0x04
    118e:	83 30       	cpi	r24, 0x03	; 3
    1190:	91 05       	cpc	r25, r1
    1192:	81 f0       	breq	.+32     	; 0x11b4 <DIO_VidSetPortValue+0x6c>
    1194:	13 c0       	rjmp	.+38     	; 0x11bc <DIO_VidSetPortValue+0x74>
	{
	case 0: PORTA = LOC_u8Value; break;
    1196:	eb e3       	ldi	r30, 0x3B	; 59
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	8a 81       	ldd	r24, Y+2	; 0x02
    119c:	80 83       	st	Z, r24
    119e:	0e c0       	rjmp	.+28     	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 1: PORTB = LOC_u8Value; break;
    11a0:	e8 e3       	ldi	r30, 0x38	; 56
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	80 83       	st	Z, r24
    11a8:	09 c0       	rjmp	.+18     	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 2: PORTC = LOC_u8Value; break;
    11aa:	e5 e3       	ldi	r30, 0x35	; 53
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	8a 81       	ldd	r24, Y+2	; 0x02
    11b0:	80 83       	st	Z, r24
    11b2:	04 c0       	rjmp	.+8      	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 3: PORTD = LOC_u8Value; break;
    11b4:	e2 e3       	ldi	r30, 0x32	; 50
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	8a 81       	ldd	r24, Y+2	; 0x02
    11ba:	80 83       	st	Z, r24
	}
}
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	cf 91       	pop	r28
    11c6:	df 91       	pop	r29
    11c8:	08 95       	ret

000011ca <DIO_u8GetPinValue>:

u8 	 DIO_u8GetPinValue	( u8 LOC_u8Port, u8 LOC_u8Pin)
{
    11ca:	df 93       	push	r29
    11cc:	cf 93       	push	r28
    11ce:	00 d0       	rcall	.+0      	; 0x11d0 <DIO_u8GetPinValue+0x6>
    11d0:	00 d0       	rcall	.+0      	; 0x11d2 <DIO_u8GetPinValue+0x8>
    11d2:	0f 92       	push	r0
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
    11d8:	8a 83       	std	Y+2, r24	; 0x02
    11da:	6b 83       	std	Y+3, r22	; 0x03
	u8 value;
	switch (LOC_u8Port)
    11dc:	8a 81       	ldd	r24, Y+2	; 0x02
    11de:	28 2f       	mov	r18, r24
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	3d 83       	std	Y+5, r19	; 0x05
    11e4:	2c 83       	std	Y+4, r18	; 0x04
    11e6:	4c 81       	ldd	r20, Y+4	; 0x04
    11e8:	5d 81       	ldd	r21, Y+5	; 0x05
    11ea:	41 30       	cpi	r20, 0x01	; 1
    11ec:	51 05       	cpc	r21, r1
    11ee:	41 f1       	breq	.+80     	; 0x1240 <DIO_u8GetPinValue+0x76>
    11f0:	8c 81       	ldd	r24, Y+4	; 0x04
    11f2:	9d 81       	ldd	r25, Y+5	; 0x05
    11f4:	82 30       	cpi	r24, 0x02	; 2
    11f6:	91 05       	cpc	r25, r1
    11f8:	34 f4       	brge	.+12     	; 0x1206 <DIO_u8GetPinValue+0x3c>
    11fa:	2c 81       	ldd	r18, Y+4	; 0x04
    11fc:	3d 81       	ldd	r19, Y+5	; 0x05
    11fe:	21 15       	cp	r18, r1
    1200:	31 05       	cpc	r19, r1
    1202:	61 f0       	breq	.+24     	; 0x121c <DIO_u8GetPinValue+0x52>
    1204:	52 c0       	rjmp	.+164    	; 0x12aa <DIO_u8GetPinValue+0xe0>
    1206:	4c 81       	ldd	r20, Y+4	; 0x04
    1208:	5d 81       	ldd	r21, Y+5	; 0x05
    120a:	42 30       	cpi	r20, 0x02	; 2
    120c:	51 05       	cpc	r21, r1
    120e:	51 f1       	breq	.+84     	; 0x1264 <DIO_u8GetPinValue+0x9a>
    1210:	8c 81       	ldd	r24, Y+4	; 0x04
    1212:	9d 81       	ldd	r25, Y+5	; 0x05
    1214:	83 30       	cpi	r24, 0x03	; 3
    1216:	91 05       	cpc	r25, r1
    1218:	b9 f1       	breq	.+110    	; 0x1288 <DIO_u8GetPinValue+0xbe>
    121a:	47 c0       	rjmp	.+142    	; 0x12aa <DIO_u8GetPinValue+0xe0>
	{
	case 0: value = GET_BIT(PINA, LOC_u8Pin); break;
    121c:	e9 e3       	ldi	r30, 0x39	; 57
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	28 2f       	mov	r18, r24
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	8b 81       	ldd	r24, Y+3	; 0x03
    1228:	88 2f       	mov	r24, r24
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	a9 01       	movw	r20, r18
    122e:	02 c0       	rjmp	.+4      	; 0x1234 <DIO_u8GetPinValue+0x6a>
    1230:	55 95       	asr	r21
    1232:	47 95       	ror	r20
    1234:	8a 95       	dec	r24
    1236:	e2 f7       	brpl	.-8      	; 0x1230 <DIO_u8GetPinValue+0x66>
    1238:	ca 01       	movw	r24, r20
    123a:	81 70       	andi	r24, 0x01	; 1
    123c:	89 83       	std	Y+1, r24	; 0x01
    123e:	35 c0       	rjmp	.+106    	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 1: value = GET_BIT(PINB, LOC_u8Pin); break;
    1240:	e6 e3       	ldi	r30, 0x36	; 54
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	80 81       	ld	r24, Z
    1246:	28 2f       	mov	r18, r24
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	8b 81       	ldd	r24, Y+3	; 0x03
    124c:	88 2f       	mov	r24, r24
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	a9 01       	movw	r20, r18
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <DIO_u8GetPinValue+0x8e>
    1254:	55 95       	asr	r21
    1256:	47 95       	ror	r20
    1258:	8a 95       	dec	r24
    125a:	e2 f7       	brpl	.-8      	; 0x1254 <DIO_u8GetPinValue+0x8a>
    125c:	ca 01       	movw	r24, r20
    125e:	81 70       	andi	r24, 0x01	; 1
    1260:	89 83       	std	Y+1, r24	; 0x01
    1262:	23 c0       	rjmp	.+70     	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 2: value = GET_BIT(PINC, LOC_u8Pin); break;
    1264:	e3 e3       	ldi	r30, 0x33	; 51
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	80 81       	ld	r24, Z
    126a:	28 2f       	mov	r18, r24
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	8b 81       	ldd	r24, Y+3	; 0x03
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	a9 01       	movw	r20, r18
    1276:	02 c0       	rjmp	.+4      	; 0x127c <DIO_u8GetPinValue+0xb2>
    1278:	55 95       	asr	r21
    127a:	47 95       	ror	r20
    127c:	8a 95       	dec	r24
    127e:	e2 f7       	brpl	.-8      	; 0x1278 <DIO_u8GetPinValue+0xae>
    1280:	ca 01       	movw	r24, r20
    1282:	81 70       	andi	r24, 0x01	; 1
    1284:	89 83       	std	Y+1, r24	; 0x01
    1286:	11 c0       	rjmp	.+34     	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 3: value = GET_BIT(PIND, LOC_u8Pin); break;
    1288:	e0 e3       	ldi	r30, 0x30	; 48
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	80 81       	ld	r24, Z
    128e:	28 2f       	mov	r18, r24
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	8b 81       	ldd	r24, Y+3	; 0x03
    1294:	88 2f       	mov	r24, r24
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	a9 01       	movw	r20, r18
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_u8GetPinValue+0xd6>
    129c:	55 95       	asr	r21
    129e:	47 95       	ror	r20
    12a0:	8a 95       	dec	r24
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_u8GetPinValue+0xd2>
    12a4:	ca 01       	movw	r24, r20
    12a6:	81 70       	andi	r24, 0x01	; 1
    12a8:	89 83       	std	Y+1, r24	; 0x01
	}
	return value;
    12aa:	89 81       	ldd	r24, Y+1	; 0x01
}
    12ac:	0f 90       	pop	r0
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	cf 91       	pop	r28
    12b8:	df 91       	pop	r29
    12ba:	08 95       	ret

000012bc <LED_VidButterFly>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>

void LED_VidButterFly(u8 LOC_u8Cycles, u8 LOC_u8Speed)
{
    12bc:	0f 93       	push	r16
    12be:	1f 93       	push	r17
    12c0:	df 93       	push	r29
    12c2:	cf 93       	push	r28
    12c4:	cd b7       	in	r28, 0x3d	; 61
    12c6:	de b7       	in	r29, 0x3e	; 62
    12c8:	c5 56       	subi	r28, 0x65	; 101
    12ca:	d0 40       	sbci	r29, 0x00	; 0
    12cc:	0f b6       	in	r0, 0x3f	; 63
    12ce:	f8 94       	cli
    12d0:	de bf       	out	0x3e, r29	; 62
    12d2:	0f be       	out	0x3f, r0	; 63
    12d4:	cd bf       	out	0x3d, r28	; 61
    12d6:	fe 01       	movw	r30, r28
    12d8:	ec 59       	subi	r30, 0x9C	; 156
    12da:	ff 4f       	sbci	r31, 0xFF	; 255
    12dc:	80 83       	st	Z, r24
    12de:	fe 01       	movw	r30, r28
    12e0:	eb 59       	subi	r30, 0x9B	; 155
    12e2:	ff 4f       	sbci	r31, 0xFF	; 255
    12e4:	60 83       	st	Z, r22
	for (u8 i=0; i<LOC_u8Cycles; i++)
    12e6:	fe 01       	movw	r30, r28
    12e8:	ed 59       	subi	r30, 0x9D	; 157
    12ea:	ff 4f       	sbci	r31, 0xFF	; 255
    12ec:	10 82       	st	Z, r1
    12ee:	1e c4       	rjmp	.+2108   	; 0x1b2c <LED_VidButterFly+0x870>

	{
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
    12f0:	80 e0       	ldi	r24, 0x00	; 0
    12f2:	68 e1       	ldi	r22, 0x18	; 24
    12f4:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    12f8:	fe 01       	movw	r30, r28
    12fa:	eb 59       	subi	r30, 0x9B	; 155
    12fc:	ff 4f       	sbci	r31, 0xFF	; 255
    12fe:	80 81       	ld	r24, Z
    1300:	88 2f       	mov	r24, r24
    1302:	90 e0       	ldi	r25, 0x00	; 0
    1304:	a0 e0       	ldi	r26, 0x00	; 0
    1306:	b0 e0       	ldi	r27, 0x00	; 0
    1308:	bc 01       	movw	r22, r24
    130a:	cd 01       	movw	r24, r26
    130c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1310:	dc 01       	movw	r26, r24
    1312:	cb 01       	movw	r24, r22
    1314:	fe 01       	movw	r30, r28
    1316:	e1 5a       	subi	r30, 0xA1	; 161
    1318:	ff 4f       	sbci	r31, 0xFF	; 255
    131a:	80 83       	st	Z, r24
    131c:	91 83       	std	Z+1, r25	; 0x01
    131e:	a2 83       	std	Z+2, r26	; 0x02
    1320:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1322:	8e 01       	movw	r16, r28
    1324:	05 5a       	subi	r16, 0xA5	; 165
    1326:	1f 4f       	sbci	r17, 0xFF	; 255
    1328:	fe 01       	movw	r30, r28
    132a:	e1 5a       	subi	r30, 0xA1	; 161
    132c:	ff 4f       	sbci	r31, 0xFF	; 255
    132e:	60 81       	ld	r22, Z
    1330:	71 81       	ldd	r23, Z+1	; 0x01
    1332:	82 81       	ldd	r24, Z+2	; 0x02
    1334:	93 81       	ldd	r25, Z+3	; 0x03
    1336:	20 e0       	ldi	r18, 0x00	; 0
    1338:	30 e0       	ldi	r19, 0x00	; 0
    133a:	4a ef       	ldi	r20, 0xFA	; 250
    133c:	54 e4       	ldi	r21, 0x44	; 68
    133e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1342:	dc 01       	movw	r26, r24
    1344:	cb 01       	movw	r24, r22
    1346:	f8 01       	movw	r30, r16
    1348:	80 83       	st	Z, r24
    134a:	91 83       	std	Z+1, r25	; 0x01
    134c:	a2 83       	std	Z+2, r26	; 0x02
    134e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1350:	fe 01       	movw	r30, r28
    1352:	e5 5a       	subi	r30, 0xA5	; 165
    1354:	ff 4f       	sbci	r31, 0xFF	; 255
    1356:	60 81       	ld	r22, Z
    1358:	71 81       	ldd	r23, Z+1	; 0x01
    135a:	82 81       	ldd	r24, Z+2	; 0x02
    135c:	93 81       	ldd	r25, Z+3	; 0x03
    135e:	20 e0       	ldi	r18, 0x00	; 0
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	40 e8       	ldi	r20, 0x80	; 128
    1364:	5f e3       	ldi	r21, 0x3F	; 63
    1366:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    136a:	88 23       	and	r24, r24
    136c:	44 f4       	brge	.+16     	; 0x137e <LED_VidButterFly+0xc2>
		__ticks = 1;
    136e:	fe 01       	movw	r30, r28
    1370:	e7 5a       	subi	r30, 0xA7	; 167
    1372:	ff 4f       	sbci	r31, 0xFF	; 255
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	90 e0       	ldi	r25, 0x00	; 0
    1378:	91 83       	std	Z+1, r25	; 0x01
    137a:	80 83       	st	Z, r24
    137c:	64 c0       	rjmp	.+200    	; 0x1446 <LED_VidButterFly+0x18a>
	else if (__tmp > 65535)
    137e:	fe 01       	movw	r30, r28
    1380:	e5 5a       	subi	r30, 0xA5	; 165
    1382:	ff 4f       	sbci	r31, 0xFF	; 255
    1384:	60 81       	ld	r22, Z
    1386:	71 81       	ldd	r23, Z+1	; 0x01
    1388:	82 81       	ldd	r24, Z+2	; 0x02
    138a:	93 81       	ldd	r25, Z+3	; 0x03
    138c:	20 e0       	ldi	r18, 0x00	; 0
    138e:	3f ef       	ldi	r19, 0xFF	; 255
    1390:	4f e7       	ldi	r20, 0x7F	; 127
    1392:	57 e4       	ldi	r21, 0x47	; 71
    1394:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1398:	18 16       	cp	r1, r24
    139a:	0c f0       	brlt	.+2      	; 0x139e <LED_VidButterFly+0xe2>
    139c:	43 c0       	rjmp	.+134    	; 0x1424 <LED_VidButterFly+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    139e:	fe 01       	movw	r30, r28
    13a0:	e1 5a       	subi	r30, 0xA1	; 161
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	60 81       	ld	r22, Z
    13a6:	71 81       	ldd	r23, Z+1	; 0x01
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	20 e0       	ldi	r18, 0x00	; 0
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	40 e2       	ldi	r20, 0x20	; 32
    13b2:	51 e4       	ldi	r21, 0x41	; 65
    13b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13b8:	dc 01       	movw	r26, r24
    13ba:	cb 01       	movw	r24, r22
    13bc:	8e 01       	movw	r16, r28
    13be:	07 5a       	subi	r16, 0xA7	; 167
    13c0:	1f 4f       	sbci	r17, 0xFF	; 255
    13c2:	bc 01       	movw	r22, r24
    13c4:	cd 01       	movw	r24, r26
    13c6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13ca:	dc 01       	movw	r26, r24
    13cc:	cb 01       	movw	r24, r22
    13ce:	f8 01       	movw	r30, r16
    13d0:	91 83       	std	Z+1, r25	; 0x01
    13d2:	80 83       	st	Z, r24
    13d4:	1f c0       	rjmp	.+62     	; 0x1414 <LED_VidButterFly+0x158>
    13d6:	fe 01       	movw	r30, r28
    13d8:	e9 5a       	subi	r30, 0xA9	; 169
    13da:	ff 4f       	sbci	r31, 0xFF	; 255
    13dc:	88 ec       	ldi	r24, 0xC8	; 200
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	91 83       	std	Z+1, r25	; 0x01
    13e2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    13e4:	fe 01       	movw	r30, r28
    13e6:	e9 5a       	subi	r30, 0xA9	; 169
    13e8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ea:	80 81       	ld	r24, Z
    13ec:	91 81       	ldd	r25, Z+1	; 0x01
    13ee:	01 97       	sbiw	r24, 0x01	; 1
    13f0:	f1 f7       	brne	.-4      	; 0x13ee <LED_VidButterFly+0x132>
    13f2:	fe 01       	movw	r30, r28
    13f4:	e9 5a       	subi	r30, 0xA9	; 169
    13f6:	ff 4f       	sbci	r31, 0xFF	; 255
    13f8:	91 83       	std	Z+1, r25	; 0x01
    13fa:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13fc:	de 01       	movw	r26, r28
    13fe:	a7 5a       	subi	r26, 0xA7	; 167
    1400:	bf 4f       	sbci	r27, 0xFF	; 255
    1402:	fe 01       	movw	r30, r28
    1404:	e7 5a       	subi	r30, 0xA7	; 167
    1406:	ff 4f       	sbci	r31, 0xFF	; 255
    1408:	80 81       	ld	r24, Z
    140a:	91 81       	ldd	r25, Z+1	; 0x01
    140c:	01 97       	sbiw	r24, 0x01	; 1
    140e:	11 96       	adiw	r26, 0x01	; 1
    1410:	9c 93       	st	X, r25
    1412:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1414:	fe 01       	movw	r30, r28
    1416:	e7 5a       	subi	r30, 0xA7	; 167
    1418:	ff 4f       	sbci	r31, 0xFF	; 255
    141a:	80 81       	ld	r24, Z
    141c:	91 81       	ldd	r25, Z+1	; 0x01
    141e:	00 97       	sbiw	r24, 0x00	; 0
    1420:	d1 f6       	brne	.-76     	; 0x13d6 <LED_VidButterFly+0x11a>
    1422:	27 c0       	rjmp	.+78     	; 0x1472 <LED_VidButterFly+0x1b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1424:	8e 01       	movw	r16, r28
    1426:	07 5a       	subi	r16, 0xA7	; 167
    1428:	1f 4f       	sbci	r17, 0xFF	; 255
    142a:	fe 01       	movw	r30, r28
    142c:	e5 5a       	subi	r30, 0xA5	; 165
    142e:	ff 4f       	sbci	r31, 0xFF	; 255
    1430:	60 81       	ld	r22, Z
    1432:	71 81       	ldd	r23, Z+1	; 0x01
    1434:	82 81       	ldd	r24, Z+2	; 0x02
    1436:	93 81       	ldd	r25, Z+3	; 0x03
    1438:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    143c:	dc 01       	movw	r26, r24
    143e:	cb 01       	movw	r24, r22
    1440:	f8 01       	movw	r30, r16
    1442:	91 83       	std	Z+1, r25	; 0x01
    1444:	80 83       	st	Z, r24
    1446:	de 01       	movw	r26, r28
    1448:	ab 5a       	subi	r26, 0xAB	; 171
    144a:	bf 4f       	sbci	r27, 0xFF	; 255
    144c:	fe 01       	movw	r30, r28
    144e:	e7 5a       	subi	r30, 0xA7	; 167
    1450:	ff 4f       	sbci	r31, 0xFF	; 255
    1452:	80 81       	ld	r24, Z
    1454:	91 81       	ldd	r25, Z+1	; 0x01
    1456:	8d 93       	st	X+, r24
    1458:	9c 93       	st	X, r25
    145a:	fe 01       	movw	r30, r28
    145c:	eb 5a       	subi	r30, 0xAB	; 171
    145e:	ff 4f       	sbci	r31, 0xFF	; 255
    1460:	80 81       	ld	r24, Z
    1462:	91 81       	ldd	r25, Z+1	; 0x01
    1464:	01 97       	sbiw	r24, 0x01	; 1
    1466:	f1 f7       	brne	.-4      	; 0x1464 <LED_VidButterFly+0x1a8>
    1468:	fe 01       	movw	r30, r28
    146a:	eb 5a       	subi	r30, 0xAB	; 171
    146c:	ff 4f       	sbci	r31, 0xFF	; 255
    146e:	91 83       	std	Z+1, r25	; 0x01
    1470:	80 83       	st	Z, r24
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	64 e2       	ldi	r22, 0x24	; 36
    1476:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    147a:	fe 01       	movw	r30, r28
    147c:	eb 59       	subi	r30, 0x9B	; 155
    147e:	ff 4f       	sbci	r31, 0xFF	; 255
    1480:	80 81       	ld	r24, Z
    1482:	88 2f       	mov	r24, r24
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	a0 e0       	ldi	r26, 0x00	; 0
    1488:	b0 e0       	ldi	r27, 0x00	; 0
    148a:	bc 01       	movw	r22, r24
    148c:	cd 01       	movw	r24, r26
    148e:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1492:	dc 01       	movw	r26, r24
    1494:	cb 01       	movw	r24, r22
    1496:	fe 01       	movw	r30, r28
    1498:	ef 5a       	subi	r30, 0xAF	; 175
    149a:	ff 4f       	sbci	r31, 0xFF	; 255
    149c:	80 83       	st	Z, r24
    149e:	91 83       	std	Z+1, r25	; 0x01
    14a0:	a2 83       	std	Z+2, r26	; 0x02
    14a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14a4:	8e 01       	movw	r16, r28
    14a6:	03 5b       	subi	r16, 0xB3	; 179
    14a8:	1f 4f       	sbci	r17, 0xFF	; 255
    14aa:	fe 01       	movw	r30, r28
    14ac:	ef 5a       	subi	r30, 0xAF	; 175
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	60 81       	ld	r22, Z
    14b2:	71 81       	ldd	r23, Z+1	; 0x01
    14b4:	82 81       	ldd	r24, Z+2	; 0x02
    14b6:	93 81       	ldd	r25, Z+3	; 0x03
    14b8:	20 e0       	ldi	r18, 0x00	; 0
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	4a ef       	ldi	r20, 0xFA	; 250
    14be:	54 e4       	ldi	r21, 0x44	; 68
    14c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14c4:	dc 01       	movw	r26, r24
    14c6:	cb 01       	movw	r24, r22
    14c8:	f8 01       	movw	r30, r16
    14ca:	80 83       	st	Z, r24
    14cc:	91 83       	std	Z+1, r25	; 0x01
    14ce:	a2 83       	std	Z+2, r26	; 0x02
    14d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14d2:	fe 01       	movw	r30, r28
    14d4:	e3 5b       	subi	r30, 0xB3	; 179
    14d6:	ff 4f       	sbci	r31, 0xFF	; 255
    14d8:	60 81       	ld	r22, Z
    14da:	71 81       	ldd	r23, Z+1	; 0x01
    14dc:	82 81       	ldd	r24, Z+2	; 0x02
    14de:	93 81       	ldd	r25, Z+3	; 0x03
    14e0:	20 e0       	ldi	r18, 0x00	; 0
    14e2:	30 e0       	ldi	r19, 0x00	; 0
    14e4:	40 e8       	ldi	r20, 0x80	; 128
    14e6:	5f e3       	ldi	r21, 0x3F	; 63
    14e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14ec:	88 23       	and	r24, r24
    14ee:	44 f4       	brge	.+16     	; 0x1500 <LED_VidButterFly+0x244>
		__ticks = 1;
    14f0:	fe 01       	movw	r30, r28
    14f2:	e5 5b       	subi	r30, 0xB5	; 181
    14f4:	ff 4f       	sbci	r31, 0xFF	; 255
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	80 83       	st	Z, r24
    14fe:	64 c0       	rjmp	.+200    	; 0x15c8 <LED_VidButterFly+0x30c>
	else if (__tmp > 65535)
    1500:	fe 01       	movw	r30, r28
    1502:	e3 5b       	subi	r30, 0xB3	; 179
    1504:	ff 4f       	sbci	r31, 0xFF	; 255
    1506:	60 81       	ld	r22, Z
    1508:	71 81       	ldd	r23, Z+1	; 0x01
    150a:	82 81       	ldd	r24, Z+2	; 0x02
    150c:	93 81       	ldd	r25, Z+3	; 0x03
    150e:	20 e0       	ldi	r18, 0x00	; 0
    1510:	3f ef       	ldi	r19, 0xFF	; 255
    1512:	4f e7       	ldi	r20, 0x7F	; 127
    1514:	57 e4       	ldi	r21, 0x47	; 71
    1516:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    151a:	18 16       	cp	r1, r24
    151c:	0c f0       	brlt	.+2      	; 0x1520 <LED_VidButterFly+0x264>
    151e:	43 c0       	rjmp	.+134    	; 0x15a6 <LED_VidButterFly+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1520:	fe 01       	movw	r30, r28
    1522:	ef 5a       	subi	r30, 0xAF	; 175
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	60 81       	ld	r22, Z
    1528:	71 81       	ldd	r23, Z+1	; 0x01
    152a:	82 81       	ldd	r24, Z+2	; 0x02
    152c:	93 81       	ldd	r25, Z+3	; 0x03
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e2       	ldi	r20, 0x20	; 32
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	8e 01       	movw	r16, r28
    1540:	05 5b       	subi	r16, 0xB5	; 181
    1542:	1f 4f       	sbci	r17, 0xFF	; 255
    1544:	bc 01       	movw	r22, r24
    1546:	cd 01       	movw	r24, r26
    1548:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    154c:	dc 01       	movw	r26, r24
    154e:	cb 01       	movw	r24, r22
    1550:	f8 01       	movw	r30, r16
    1552:	91 83       	std	Z+1, r25	; 0x01
    1554:	80 83       	st	Z, r24
    1556:	1f c0       	rjmp	.+62     	; 0x1596 <LED_VidButterFly+0x2da>
    1558:	fe 01       	movw	r30, r28
    155a:	e7 5b       	subi	r30, 0xB7	; 183
    155c:	ff 4f       	sbci	r31, 0xFF	; 255
    155e:	88 ec       	ldi	r24, 0xC8	; 200
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	91 83       	std	Z+1, r25	; 0x01
    1564:	80 83       	st	Z, r24
    1566:	fe 01       	movw	r30, r28
    1568:	e7 5b       	subi	r30, 0xB7	; 183
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	80 81       	ld	r24, Z
    156e:	91 81       	ldd	r25, Z+1	; 0x01
    1570:	01 97       	sbiw	r24, 0x01	; 1
    1572:	f1 f7       	brne	.-4      	; 0x1570 <LED_VidButterFly+0x2b4>
    1574:	fe 01       	movw	r30, r28
    1576:	e7 5b       	subi	r30, 0xB7	; 183
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    157e:	de 01       	movw	r26, r28
    1580:	a5 5b       	subi	r26, 0xB5	; 181
    1582:	bf 4f       	sbci	r27, 0xFF	; 255
    1584:	fe 01       	movw	r30, r28
    1586:	e5 5b       	subi	r30, 0xB5	; 181
    1588:	ff 4f       	sbci	r31, 0xFF	; 255
    158a:	80 81       	ld	r24, Z
    158c:	91 81       	ldd	r25, Z+1	; 0x01
    158e:	01 97       	sbiw	r24, 0x01	; 1
    1590:	11 96       	adiw	r26, 0x01	; 1
    1592:	9c 93       	st	X, r25
    1594:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1596:	fe 01       	movw	r30, r28
    1598:	e5 5b       	subi	r30, 0xB5	; 181
    159a:	ff 4f       	sbci	r31, 0xFF	; 255
    159c:	80 81       	ld	r24, Z
    159e:	91 81       	ldd	r25, Z+1	; 0x01
    15a0:	00 97       	sbiw	r24, 0x00	; 0
    15a2:	d1 f6       	brne	.-76     	; 0x1558 <LED_VidButterFly+0x29c>
    15a4:	27 c0       	rjmp	.+78     	; 0x15f4 <LED_VidButterFly+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15a6:	8e 01       	movw	r16, r28
    15a8:	05 5b       	subi	r16, 0xB5	; 181
    15aa:	1f 4f       	sbci	r17, 0xFF	; 255
    15ac:	fe 01       	movw	r30, r28
    15ae:	e3 5b       	subi	r30, 0xB3	; 179
    15b0:	ff 4f       	sbci	r31, 0xFF	; 255
    15b2:	60 81       	ld	r22, Z
    15b4:	71 81       	ldd	r23, Z+1	; 0x01
    15b6:	82 81       	ldd	r24, Z+2	; 0x02
    15b8:	93 81       	ldd	r25, Z+3	; 0x03
    15ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15be:	dc 01       	movw	r26, r24
    15c0:	cb 01       	movw	r24, r22
    15c2:	f8 01       	movw	r30, r16
    15c4:	91 83       	std	Z+1, r25	; 0x01
    15c6:	80 83       	st	Z, r24
    15c8:	de 01       	movw	r26, r28
    15ca:	a9 5b       	subi	r26, 0xB9	; 185
    15cc:	bf 4f       	sbci	r27, 0xFF	; 255
    15ce:	fe 01       	movw	r30, r28
    15d0:	e5 5b       	subi	r30, 0xB5	; 181
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	80 81       	ld	r24, Z
    15d6:	91 81       	ldd	r25, Z+1	; 0x01
    15d8:	8d 93       	st	X+, r24
    15da:	9c 93       	st	X, r25
    15dc:	fe 01       	movw	r30, r28
    15de:	e9 5b       	subi	r30, 0xB9	; 185
    15e0:	ff 4f       	sbci	r31, 0xFF	; 255
    15e2:	80 81       	ld	r24, Z
    15e4:	91 81       	ldd	r25, Z+1	; 0x01
    15e6:	01 97       	sbiw	r24, 0x01	; 1
    15e8:	f1 f7       	brne	.-4      	; 0x15e6 <LED_VidButterFly+0x32a>
    15ea:	fe 01       	movw	r30, r28
    15ec:	e9 5b       	subi	r30, 0xB9	; 185
    15ee:	ff 4f       	sbci	r31, 0xFF	; 255
    15f0:	91 83       	std	Z+1, r25	; 0x01
    15f2:	80 83       	st	Z, r24
		DIO_VidSetPortValue(LED_Port, 0b01000010 );
    15f4:	80 e0       	ldi	r24, 0x00	; 0
    15f6:	62 e4       	ldi	r22, 0x42	; 66
    15f8:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    15fc:	fe 01       	movw	r30, r28
    15fe:	eb 59       	subi	r30, 0x9B	; 155
    1600:	ff 4f       	sbci	r31, 0xFF	; 255
    1602:	80 81       	ld	r24, Z
    1604:	88 2f       	mov	r24, r24
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	a0 e0       	ldi	r26, 0x00	; 0
    160a:	b0 e0       	ldi	r27, 0x00	; 0
    160c:	bc 01       	movw	r22, r24
    160e:	cd 01       	movw	r24, r26
    1610:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1614:	dc 01       	movw	r26, r24
    1616:	cb 01       	movw	r24, r22
    1618:	fe 01       	movw	r30, r28
    161a:	ed 5b       	subi	r30, 0xBD	; 189
    161c:	ff 4f       	sbci	r31, 0xFF	; 255
    161e:	80 83       	st	Z, r24
    1620:	91 83       	std	Z+1, r25	; 0x01
    1622:	a2 83       	std	Z+2, r26	; 0x02
    1624:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1626:	8e 01       	movw	r16, r28
    1628:	01 5c       	subi	r16, 0xC1	; 193
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	fe 01       	movw	r30, r28
    162e:	ed 5b       	subi	r30, 0xBD	; 189
    1630:	ff 4f       	sbci	r31, 0xFF	; 255
    1632:	60 81       	ld	r22, Z
    1634:	71 81       	ldd	r23, Z+1	; 0x01
    1636:	82 81       	ldd	r24, Z+2	; 0x02
    1638:	93 81       	ldd	r25, Z+3	; 0x03
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	4a ef       	ldi	r20, 0xFA	; 250
    1640:	54 e4       	ldi	r21, 0x44	; 68
    1642:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	f8 01       	movw	r30, r16
    164c:	80 83       	st	Z, r24
    164e:	91 83       	std	Z+1, r25	; 0x01
    1650:	a2 83       	std	Z+2, r26	; 0x02
    1652:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1654:	fe 01       	movw	r30, r28
    1656:	ff 96       	adiw	r30, 0x3f	; 63
    1658:	60 81       	ld	r22, Z
    165a:	71 81       	ldd	r23, Z+1	; 0x01
    165c:	82 81       	ldd	r24, Z+2	; 0x02
    165e:	93 81       	ldd	r25, Z+3	; 0x03
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e8       	ldi	r20, 0x80	; 128
    1666:	5f e3       	ldi	r21, 0x3F	; 63
    1668:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    166c:	88 23       	and	r24, r24
    166e:	2c f4       	brge	.+10     	; 0x167a <LED_VidButterFly+0x3be>
		__ticks = 1;
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	90 e0       	ldi	r25, 0x00	; 0
    1674:	9e af       	std	Y+62, r25	; 0x3e
    1676:	8d af       	std	Y+61, r24	; 0x3d
    1678:	46 c0       	rjmp	.+140    	; 0x1706 <LED_VidButterFly+0x44a>
	else if (__tmp > 65535)
    167a:	fe 01       	movw	r30, r28
    167c:	ff 96       	adiw	r30, 0x3f	; 63
    167e:	60 81       	ld	r22, Z
    1680:	71 81       	ldd	r23, Z+1	; 0x01
    1682:	82 81       	ldd	r24, Z+2	; 0x02
    1684:	93 81       	ldd	r25, Z+3	; 0x03
    1686:	20 e0       	ldi	r18, 0x00	; 0
    1688:	3f ef       	ldi	r19, 0xFF	; 255
    168a:	4f e7       	ldi	r20, 0x7F	; 127
    168c:	57 e4       	ldi	r21, 0x47	; 71
    168e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1692:	18 16       	cp	r1, r24
    1694:	64 f5       	brge	.+88     	; 0x16ee <LED_VidButterFly+0x432>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1696:	fe 01       	movw	r30, r28
    1698:	ed 5b       	subi	r30, 0xBD	; 189
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	60 81       	ld	r22, Z
    169e:	71 81       	ldd	r23, Z+1	; 0x01
    16a0:	82 81       	ldd	r24, Z+2	; 0x02
    16a2:	93 81       	ldd	r25, Z+3	; 0x03
    16a4:	20 e0       	ldi	r18, 0x00	; 0
    16a6:	30 e0       	ldi	r19, 0x00	; 0
    16a8:	40 e2       	ldi	r20, 0x20	; 32
    16aa:	51 e4       	ldi	r21, 0x41	; 65
    16ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16b0:	dc 01       	movw	r26, r24
    16b2:	cb 01       	movw	r24, r22
    16b4:	bc 01       	movw	r22, r24
    16b6:	cd 01       	movw	r24, r26
    16b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16bc:	dc 01       	movw	r26, r24
    16be:	cb 01       	movw	r24, r22
    16c0:	9e af       	std	Y+62, r25	; 0x3e
    16c2:	8d af       	std	Y+61, r24	; 0x3d
    16c4:	0f c0       	rjmp	.+30     	; 0x16e4 <LED_VidButterFly+0x428>
    16c6:	88 ec       	ldi	r24, 0xC8	; 200
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	9c af       	std	Y+60, r25	; 0x3c
    16cc:	8b af       	std	Y+59, r24	; 0x3b
    16ce:	8b ad       	ldd	r24, Y+59	; 0x3b
    16d0:	9c ad       	ldd	r25, Y+60	; 0x3c
    16d2:	01 97       	sbiw	r24, 0x01	; 1
    16d4:	f1 f7       	brne	.-4      	; 0x16d2 <LED_VidButterFly+0x416>
    16d6:	9c af       	std	Y+60, r25	; 0x3c
    16d8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16da:	8d ad       	ldd	r24, Y+61	; 0x3d
    16dc:	9e ad       	ldd	r25, Y+62	; 0x3e
    16de:	01 97       	sbiw	r24, 0x01	; 1
    16e0:	9e af       	std	Y+62, r25	; 0x3e
    16e2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16e4:	8d ad       	ldd	r24, Y+61	; 0x3d
    16e6:	9e ad       	ldd	r25, Y+62	; 0x3e
    16e8:	00 97       	sbiw	r24, 0x00	; 0
    16ea:	69 f7       	brne	.-38     	; 0x16c6 <LED_VidButterFly+0x40a>
    16ec:	16 c0       	rjmp	.+44     	; 0x171a <LED_VidButterFly+0x45e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16ee:	fe 01       	movw	r30, r28
    16f0:	ff 96       	adiw	r30, 0x3f	; 63
    16f2:	60 81       	ld	r22, Z
    16f4:	71 81       	ldd	r23, Z+1	; 0x01
    16f6:	82 81       	ldd	r24, Z+2	; 0x02
    16f8:	93 81       	ldd	r25, Z+3	; 0x03
    16fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	9e af       	std	Y+62, r25	; 0x3e
    1704:	8d af       	std	Y+61, r24	; 0x3d
    1706:	8d ad       	ldd	r24, Y+61	; 0x3d
    1708:	9e ad       	ldd	r25, Y+62	; 0x3e
    170a:	9a af       	std	Y+58, r25	; 0x3a
    170c:	89 af       	std	Y+57, r24	; 0x39
    170e:	89 ad       	ldd	r24, Y+57	; 0x39
    1710:	9a ad       	ldd	r25, Y+58	; 0x3a
    1712:	01 97       	sbiw	r24, 0x01	; 1
    1714:	f1 f7       	brne	.-4      	; 0x1712 <LED_VidButterFly+0x456>
    1716:	9a af       	std	Y+58, r25	; 0x3a
    1718:	89 af       	std	Y+57, r24	; 0x39
		DIO_VidSetPortValue(LED_Port, 0b10000001 );
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	61 e8       	ldi	r22, 0x81	; 129
    171e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    1722:	fe 01       	movw	r30, r28
    1724:	eb 59       	subi	r30, 0x9B	; 155
    1726:	ff 4f       	sbci	r31, 0xFF	; 255
    1728:	80 81       	ld	r24, Z
    172a:	88 2f       	mov	r24, r24
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	a0 e0       	ldi	r26, 0x00	; 0
    1730:	b0 e0       	ldi	r27, 0x00	; 0
    1732:	bc 01       	movw	r22, r24
    1734:	cd 01       	movw	r24, r26
    1736:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    173a:	dc 01       	movw	r26, r24
    173c:	cb 01       	movw	r24, r22
    173e:	8d ab       	std	Y+53, r24	; 0x35
    1740:	9e ab       	std	Y+54, r25	; 0x36
    1742:	af ab       	std	Y+55, r26	; 0x37
    1744:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1746:	6d a9       	ldd	r22, Y+53	; 0x35
    1748:	7e a9       	ldd	r23, Y+54	; 0x36
    174a:	8f a9       	ldd	r24, Y+55	; 0x37
    174c:	98 ad       	ldd	r25, Y+56	; 0x38
    174e:	20 e0       	ldi	r18, 0x00	; 0
    1750:	30 e0       	ldi	r19, 0x00	; 0
    1752:	4a ef       	ldi	r20, 0xFA	; 250
    1754:	54 e4       	ldi	r21, 0x44	; 68
    1756:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    175a:	dc 01       	movw	r26, r24
    175c:	cb 01       	movw	r24, r22
    175e:	89 ab       	std	Y+49, r24	; 0x31
    1760:	9a ab       	std	Y+50, r25	; 0x32
    1762:	ab ab       	std	Y+51, r26	; 0x33
    1764:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1766:	69 a9       	ldd	r22, Y+49	; 0x31
    1768:	7a a9       	ldd	r23, Y+50	; 0x32
    176a:	8b a9       	ldd	r24, Y+51	; 0x33
    176c:	9c a9       	ldd	r25, Y+52	; 0x34
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	40 e8       	ldi	r20, 0x80	; 128
    1774:	5f e3       	ldi	r21, 0x3F	; 63
    1776:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    177a:	88 23       	and	r24, r24
    177c:	2c f4       	brge	.+10     	; 0x1788 <LED_VidButterFly+0x4cc>
		__ticks = 1;
    177e:	81 e0       	ldi	r24, 0x01	; 1
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	98 ab       	std	Y+48, r25	; 0x30
    1784:	8f a7       	std	Y+47, r24	; 0x2f
    1786:	3f c0       	rjmp	.+126    	; 0x1806 <LED_VidButterFly+0x54a>
	else if (__tmp > 65535)
    1788:	69 a9       	ldd	r22, Y+49	; 0x31
    178a:	7a a9       	ldd	r23, Y+50	; 0x32
    178c:	8b a9       	ldd	r24, Y+51	; 0x33
    178e:	9c a9       	ldd	r25, Y+52	; 0x34
    1790:	20 e0       	ldi	r18, 0x00	; 0
    1792:	3f ef       	ldi	r19, 0xFF	; 255
    1794:	4f e7       	ldi	r20, 0x7F	; 127
    1796:	57 e4       	ldi	r21, 0x47	; 71
    1798:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    179c:	18 16       	cp	r1, r24
    179e:	4c f5       	brge	.+82     	; 0x17f2 <LED_VidButterFly+0x536>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17a0:	6d a9       	ldd	r22, Y+53	; 0x35
    17a2:	7e a9       	ldd	r23, Y+54	; 0x36
    17a4:	8f a9       	ldd	r24, Y+55	; 0x37
    17a6:	98 ad       	ldd	r25, Y+56	; 0x38
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e2       	ldi	r20, 0x20	; 32
    17ae:	51 e4       	ldi	r21, 0x41	; 65
    17b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b4:	dc 01       	movw	r26, r24
    17b6:	cb 01       	movw	r24, r22
    17b8:	bc 01       	movw	r22, r24
    17ba:	cd 01       	movw	r24, r26
    17bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17c0:	dc 01       	movw	r26, r24
    17c2:	cb 01       	movw	r24, r22
    17c4:	98 ab       	std	Y+48, r25	; 0x30
    17c6:	8f a7       	std	Y+47, r24	; 0x2f
    17c8:	0f c0       	rjmp	.+30     	; 0x17e8 <LED_VidButterFly+0x52c>
    17ca:	88 ec       	ldi	r24, 0xC8	; 200
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	9e a7       	std	Y+46, r25	; 0x2e
    17d0:	8d a7       	std	Y+45, r24	; 0x2d
    17d2:	8d a5       	ldd	r24, Y+45	; 0x2d
    17d4:	9e a5       	ldd	r25, Y+46	; 0x2e
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	f1 f7       	brne	.-4      	; 0x17d6 <LED_VidButterFly+0x51a>
    17da:	9e a7       	std	Y+46, r25	; 0x2e
    17dc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17de:	8f a5       	ldd	r24, Y+47	; 0x2f
    17e0:	98 a9       	ldd	r25, Y+48	; 0x30
    17e2:	01 97       	sbiw	r24, 0x01	; 1
    17e4:	98 ab       	std	Y+48, r25	; 0x30
    17e6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17e8:	8f a5       	ldd	r24, Y+47	; 0x2f
    17ea:	98 a9       	ldd	r25, Y+48	; 0x30
    17ec:	00 97       	sbiw	r24, 0x00	; 0
    17ee:	69 f7       	brne	.-38     	; 0x17ca <LED_VidButterFly+0x50e>
    17f0:	14 c0       	rjmp	.+40     	; 0x181a <LED_VidButterFly+0x55e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17f2:	69 a9       	ldd	r22, Y+49	; 0x31
    17f4:	7a a9       	ldd	r23, Y+50	; 0x32
    17f6:	8b a9       	ldd	r24, Y+51	; 0x33
    17f8:	9c a9       	ldd	r25, Y+52	; 0x34
    17fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17fe:	dc 01       	movw	r26, r24
    1800:	cb 01       	movw	r24, r22
    1802:	98 ab       	std	Y+48, r25	; 0x30
    1804:	8f a7       	std	Y+47, r24	; 0x2f
    1806:	8f a5       	ldd	r24, Y+47	; 0x2f
    1808:	98 a9       	ldd	r25, Y+48	; 0x30
    180a:	9c a7       	std	Y+44, r25	; 0x2c
    180c:	8b a7       	std	Y+43, r24	; 0x2b
    180e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1810:	9c a5       	ldd	r25, Y+44	; 0x2c
    1812:	01 97       	sbiw	r24, 0x01	; 1
    1814:	f1 f7       	brne	.-4      	; 0x1812 <LED_VidButterFly+0x556>
    1816:	9c a7       	std	Y+44, r25	; 0x2c
    1818:	8b a7       	std	Y+43, r24	; 0x2b
		DIO_VidSetPortValue(LED_Port, 0b01000010 );
    181a:	80 e0       	ldi	r24, 0x00	; 0
    181c:	62 e4       	ldi	r22, 0x42	; 66
    181e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    1822:	fe 01       	movw	r30, r28
    1824:	eb 59       	subi	r30, 0x9B	; 155
    1826:	ff 4f       	sbci	r31, 0xFF	; 255
    1828:	80 81       	ld	r24, Z
    182a:	88 2f       	mov	r24, r24
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	a0 e0       	ldi	r26, 0x00	; 0
    1830:	b0 e0       	ldi	r27, 0x00	; 0
    1832:	bc 01       	movw	r22, r24
    1834:	cd 01       	movw	r24, r26
    1836:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    183a:	dc 01       	movw	r26, r24
    183c:	cb 01       	movw	r24, r22
    183e:	8f a3       	std	Y+39, r24	; 0x27
    1840:	98 a7       	std	Y+40, r25	; 0x28
    1842:	a9 a7       	std	Y+41, r26	; 0x29
    1844:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1846:	6f a1       	ldd	r22, Y+39	; 0x27
    1848:	78 a5       	ldd	r23, Y+40	; 0x28
    184a:	89 a5       	ldd	r24, Y+41	; 0x29
    184c:	9a a5       	ldd	r25, Y+42	; 0x2a
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	4a ef       	ldi	r20, 0xFA	; 250
    1854:	54 e4       	ldi	r21, 0x44	; 68
    1856:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	8b a3       	std	Y+35, r24	; 0x23
    1860:	9c a3       	std	Y+36, r25	; 0x24
    1862:	ad a3       	std	Y+37, r26	; 0x25
    1864:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1866:	6b a1       	ldd	r22, Y+35	; 0x23
    1868:	7c a1       	ldd	r23, Y+36	; 0x24
    186a:	8d a1       	ldd	r24, Y+37	; 0x25
    186c:	9e a1       	ldd	r25, Y+38	; 0x26
    186e:	20 e0       	ldi	r18, 0x00	; 0
    1870:	30 e0       	ldi	r19, 0x00	; 0
    1872:	40 e8       	ldi	r20, 0x80	; 128
    1874:	5f e3       	ldi	r21, 0x3F	; 63
    1876:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    187a:	88 23       	and	r24, r24
    187c:	2c f4       	brge	.+10     	; 0x1888 <LED_VidButterFly+0x5cc>
		__ticks = 1;
    187e:	81 e0       	ldi	r24, 0x01	; 1
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	9a a3       	std	Y+34, r25	; 0x22
    1884:	89 a3       	std	Y+33, r24	; 0x21
    1886:	3f c0       	rjmp	.+126    	; 0x1906 <LED_VidButterFly+0x64a>
	else if (__tmp > 65535)
    1888:	6b a1       	ldd	r22, Y+35	; 0x23
    188a:	7c a1       	ldd	r23, Y+36	; 0x24
    188c:	8d a1       	ldd	r24, Y+37	; 0x25
    188e:	9e a1       	ldd	r25, Y+38	; 0x26
    1890:	20 e0       	ldi	r18, 0x00	; 0
    1892:	3f ef       	ldi	r19, 0xFF	; 255
    1894:	4f e7       	ldi	r20, 0x7F	; 127
    1896:	57 e4       	ldi	r21, 0x47	; 71
    1898:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    189c:	18 16       	cp	r1, r24
    189e:	4c f5       	brge	.+82     	; 0x18f2 <LED_VidButterFly+0x636>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18a0:	6f a1       	ldd	r22, Y+39	; 0x27
    18a2:	78 a5       	ldd	r23, Y+40	; 0x28
    18a4:	89 a5       	ldd	r24, Y+41	; 0x29
    18a6:	9a a5       	ldd	r25, Y+42	; 0x2a
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	40 e2       	ldi	r20, 0x20	; 32
    18ae:	51 e4       	ldi	r21, 0x41	; 65
    18b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18b4:	dc 01       	movw	r26, r24
    18b6:	cb 01       	movw	r24, r22
    18b8:	bc 01       	movw	r22, r24
    18ba:	cd 01       	movw	r24, r26
    18bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18c0:	dc 01       	movw	r26, r24
    18c2:	cb 01       	movw	r24, r22
    18c4:	9a a3       	std	Y+34, r25	; 0x22
    18c6:	89 a3       	std	Y+33, r24	; 0x21
    18c8:	0f c0       	rjmp	.+30     	; 0x18e8 <LED_VidButterFly+0x62c>
    18ca:	88 ec       	ldi	r24, 0xC8	; 200
    18cc:	90 e0       	ldi	r25, 0x00	; 0
    18ce:	98 a3       	std	Y+32, r25	; 0x20
    18d0:	8f 8f       	std	Y+31, r24	; 0x1f
    18d2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18d4:	98 a1       	ldd	r25, Y+32	; 0x20
    18d6:	01 97       	sbiw	r24, 0x01	; 1
    18d8:	f1 f7       	brne	.-4      	; 0x18d6 <LED_VidButterFly+0x61a>
    18da:	98 a3       	std	Y+32, r25	; 0x20
    18dc:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18de:	89 a1       	ldd	r24, Y+33	; 0x21
    18e0:	9a a1       	ldd	r25, Y+34	; 0x22
    18e2:	01 97       	sbiw	r24, 0x01	; 1
    18e4:	9a a3       	std	Y+34, r25	; 0x22
    18e6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18e8:	89 a1       	ldd	r24, Y+33	; 0x21
    18ea:	9a a1       	ldd	r25, Y+34	; 0x22
    18ec:	00 97       	sbiw	r24, 0x00	; 0
    18ee:	69 f7       	brne	.-38     	; 0x18ca <LED_VidButterFly+0x60e>
    18f0:	14 c0       	rjmp	.+40     	; 0x191a <LED_VidButterFly+0x65e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18f2:	6b a1       	ldd	r22, Y+35	; 0x23
    18f4:	7c a1       	ldd	r23, Y+36	; 0x24
    18f6:	8d a1       	ldd	r24, Y+37	; 0x25
    18f8:	9e a1       	ldd	r25, Y+38	; 0x26
    18fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18fe:	dc 01       	movw	r26, r24
    1900:	cb 01       	movw	r24, r22
    1902:	9a a3       	std	Y+34, r25	; 0x22
    1904:	89 a3       	std	Y+33, r24	; 0x21
    1906:	89 a1       	ldd	r24, Y+33	; 0x21
    1908:	9a a1       	ldd	r25, Y+34	; 0x22
    190a:	9e 8f       	std	Y+30, r25	; 0x1e
    190c:	8d 8f       	std	Y+29, r24	; 0x1d
    190e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1910:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1912:	01 97       	sbiw	r24, 0x01	; 1
    1914:	f1 f7       	brne	.-4      	; 0x1912 <LED_VidButterFly+0x656>
    1916:	9e 8f       	std	Y+30, r25	; 0x1e
    1918:	8d 8f       	std	Y+29, r24	; 0x1d
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
    191a:	80 e0       	ldi	r24, 0x00	; 0
    191c:	64 e2       	ldi	r22, 0x24	; 36
    191e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    1922:	fe 01       	movw	r30, r28
    1924:	eb 59       	subi	r30, 0x9B	; 155
    1926:	ff 4f       	sbci	r31, 0xFF	; 255
    1928:	80 81       	ld	r24, Z
    192a:	88 2f       	mov	r24, r24
    192c:	90 e0       	ldi	r25, 0x00	; 0
    192e:	a0 e0       	ldi	r26, 0x00	; 0
    1930:	b0 e0       	ldi	r27, 0x00	; 0
    1932:	bc 01       	movw	r22, r24
    1934:	cd 01       	movw	r24, r26
    1936:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    193a:	dc 01       	movw	r26, r24
    193c:	cb 01       	movw	r24, r22
    193e:	89 8f       	std	Y+25, r24	; 0x19
    1940:	9a 8f       	std	Y+26, r25	; 0x1a
    1942:	ab 8f       	std	Y+27, r26	; 0x1b
    1944:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1946:	69 8d       	ldd	r22, Y+25	; 0x19
    1948:	7a 8d       	ldd	r23, Y+26	; 0x1a
    194a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    194c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    194e:	20 e0       	ldi	r18, 0x00	; 0
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	4a ef       	ldi	r20, 0xFA	; 250
    1954:	54 e4       	ldi	r21, 0x44	; 68
    1956:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    195a:	dc 01       	movw	r26, r24
    195c:	cb 01       	movw	r24, r22
    195e:	8d 8b       	std	Y+21, r24	; 0x15
    1960:	9e 8b       	std	Y+22, r25	; 0x16
    1962:	af 8b       	std	Y+23, r26	; 0x17
    1964:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1966:	6d 89       	ldd	r22, Y+21	; 0x15
    1968:	7e 89       	ldd	r23, Y+22	; 0x16
    196a:	8f 89       	ldd	r24, Y+23	; 0x17
    196c:	98 8d       	ldd	r25, Y+24	; 0x18
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	40 e8       	ldi	r20, 0x80	; 128
    1974:	5f e3       	ldi	r21, 0x3F	; 63
    1976:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    197a:	88 23       	and	r24, r24
    197c:	2c f4       	brge	.+10     	; 0x1988 <LED_VidButterFly+0x6cc>
		__ticks = 1;
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	9c 8b       	std	Y+20, r25	; 0x14
    1984:	8b 8b       	std	Y+19, r24	; 0x13
    1986:	3f c0       	rjmp	.+126    	; 0x1a06 <LED_VidButterFly+0x74a>
	else if (__tmp > 65535)
    1988:	6d 89       	ldd	r22, Y+21	; 0x15
    198a:	7e 89       	ldd	r23, Y+22	; 0x16
    198c:	8f 89       	ldd	r24, Y+23	; 0x17
    198e:	98 8d       	ldd	r25, Y+24	; 0x18
    1990:	20 e0       	ldi	r18, 0x00	; 0
    1992:	3f ef       	ldi	r19, 0xFF	; 255
    1994:	4f e7       	ldi	r20, 0x7F	; 127
    1996:	57 e4       	ldi	r21, 0x47	; 71
    1998:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    199c:	18 16       	cp	r1, r24
    199e:	4c f5       	brge	.+82     	; 0x19f2 <LED_VidButterFly+0x736>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19a0:	69 8d       	ldd	r22, Y+25	; 0x19
    19a2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19a4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19a6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	30 e0       	ldi	r19, 0x00	; 0
    19ac:	40 e2       	ldi	r20, 0x20	; 32
    19ae:	51 e4       	ldi	r21, 0x41	; 65
    19b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19b4:	dc 01       	movw	r26, r24
    19b6:	cb 01       	movw	r24, r22
    19b8:	bc 01       	movw	r22, r24
    19ba:	cd 01       	movw	r24, r26
    19bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19c0:	dc 01       	movw	r26, r24
    19c2:	cb 01       	movw	r24, r22
    19c4:	9c 8b       	std	Y+20, r25	; 0x14
    19c6:	8b 8b       	std	Y+19, r24	; 0x13
    19c8:	0f c0       	rjmp	.+30     	; 0x19e8 <LED_VidButterFly+0x72c>
    19ca:	88 ec       	ldi	r24, 0xC8	; 200
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	9a 8b       	std	Y+18, r25	; 0x12
    19d0:	89 8b       	std	Y+17, r24	; 0x11
    19d2:	89 89       	ldd	r24, Y+17	; 0x11
    19d4:	9a 89       	ldd	r25, Y+18	; 0x12
    19d6:	01 97       	sbiw	r24, 0x01	; 1
    19d8:	f1 f7       	brne	.-4      	; 0x19d6 <LED_VidButterFly+0x71a>
    19da:	9a 8b       	std	Y+18, r25	; 0x12
    19dc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19de:	8b 89       	ldd	r24, Y+19	; 0x13
    19e0:	9c 89       	ldd	r25, Y+20	; 0x14
    19e2:	01 97       	sbiw	r24, 0x01	; 1
    19e4:	9c 8b       	std	Y+20, r25	; 0x14
    19e6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19e8:	8b 89       	ldd	r24, Y+19	; 0x13
    19ea:	9c 89       	ldd	r25, Y+20	; 0x14
    19ec:	00 97       	sbiw	r24, 0x00	; 0
    19ee:	69 f7       	brne	.-38     	; 0x19ca <LED_VidButterFly+0x70e>
    19f0:	14 c0       	rjmp	.+40     	; 0x1a1a <LED_VidButterFly+0x75e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19f2:	6d 89       	ldd	r22, Y+21	; 0x15
    19f4:	7e 89       	ldd	r23, Y+22	; 0x16
    19f6:	8f 89       	ldd	r24, Y+23	; 0x17
    19f8:	98 8d       	ldd	r25, Y+24	; 0x18
    19fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19fe:	dc 01       	movw	r26, r24
    1a00:	cb 01       	movw	r24, r22
    1a02:	9c 8b       	std	Y+20, r25	; 0x14
    1a04:	8b 8b       	std	Y+19, r24	; 0x13
    1a06:	8b 89       	ldd	r24, Y+19	; 0x13
    1a08:	9c 89       	ldd	r25, Y+20	; 0x14
    1a0a:	98 8b       	std	Y+16, r25	; 0x10
    1a0c:	8f 87       	std	Y+15, r24	; 0x0f
    1a0e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a10:	98 89       	ldd	r25, Y+16	; 0x10
    1a12:	01 97       	sbiw	r24, 0x01	; 1
    1a14:	f1 f7       	brne	.-4      	; 0x1a12 <LED_VidButterFly+0x756>
    1a16:	98 8b       	std	Y+16, r25	; 0x10
    1a18:	8f 87       	std	Y+15, r24	; 0x0f
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	68 e1       	ldi	r22, 0x18	; 24
    1a1e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    1a22:	fe 01       	movw	r30, r28
    1a24:	eb 59       	subi	r30, 0x9B	; 155
    1a26:	ff 4f       	sbci	r31, 0xFF	; 255
    1a28:	80 81       	ld	r24, Z
    1a2a:	88 2f       	mov	r24, r24
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	a0 e0       	ldi	r26, 0x00	; 0
    1a30:	b0 e0       	ldi	r27, 0x00	; 0
    1a32:	bc 01       	movw	r22, r24
    1a34:	cd 01       	movw	r24, r26
    1a36:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    1a3a:	dc 01       	movw	r26, r24
    1a3c:	cb 01       	movw	r24, r22
    1a3e:	8b 87       	std	Y+11, r24	; 0x0b
    1a40:	9c 87       	std	Y+12, r25	; 0x0c
    1a42:	ad 87       	std	Y+13, r26	; 0x0d
    1a44:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a46:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a48:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a4a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a4c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a4e:	20 e0       	ldi	r18, 0x00	; 0
    1a50:	30 e0       	ldi	r19, 0x00	; 0
    1a52:	4a ef       	ldi	r20, 0xFA	; 250
    1a54:	54 e4       	ldi	r21, 0x44	; 68
    1a56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	cb 01       	movw	r24, r22
    1a5e:	8f 83       	std	Y+7, r24	; 0x07
    1a60:	98 87       	std	Y+8, r25	; 0x08
    1a62:	a9 87       	std	Y+9, r26	; 0x09
    1a64:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a66:	6f 81       	ldd	r22, Y+7	; 0x07
    1a68:	78 85       	ldd	r23, Y+8	; 0x08
    1a6a:	89 85       	ldd	r24, Y+9	; 0x09
    1a6c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a6e:	20 e0       	ldi	r18, 0x00	; 0
    1a70:	30 e0       	ldi	r19, 0x00	; 0
    1a72:	40 e8       	ldi	r20, 0x80	; 128
    1a74:	5f e3       	ldi	r21, 0x3F	; 63
    1a76:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a7a:	88 23       	and	r24, r24
    1a7c:	2c f4       	brge	.+10     	; 0x1a88 <LED_VidButterFly+0x7cc>
		__ticks = 1;
    1a7e:	81 e0       	ldi	r24, 0x01	; 1
    1a80:	90 e0       	ldi	r25, 0x00	; 0
    1a82:	9e 83       	std	Y+6, r25	; 0x06
    1a84:	8d 83       	std	Y+5, r24	; 0x05
    1a86:	3f c0       	rjmp	.+126    	; 0x1b06 <LED_VidButterFly+0x84a>
	else if (__tmp > 65535)
    1a88:	6f 81       	ldd	r22, Y+7	; 0x07
    1a8a:	78 85       	ldd	r23, Y+8	; 0x08
    1a8c:	89 85       	ldd	r24, Y+9	; 0x09
    1a8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	3f ef       	ldi	r19, 0xFF	; 255
    1a94:	4f e7       	ldi	r20, 0x7F	; 127
    1a96:	57 e4       	ldi	r21, 0x47	; 71
    1a98:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a9c:	18 16       	cp	r1, r24
    1a9e:	4c f5       	brge	.+82     	; 0x1af2 <LED_VidButterFly+0x836>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1aa0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aa2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1aa4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1aa6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aa8:	20 e0       	ldi	r18, 0x00	; 0
    1aaa:	30 e0       	ldi	r19, 0x00	; 0
    1aac:	40 e2       	ldi	r20, 0x20	; 32
    1aae:	51 e4       	ldi	r21, 0x41	; 65
    1ab0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ab4:	dc 01       	movw	r26, r24
    1ab6:	cb 01       	movw	r24, r22
    1ab8:	bc 01       	movw	r22, r24
    1aba:	cd 01       	movw	r24, r26
    1abc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	cb 01       	movw	r24, r22
    1ac4:	9e 83       	std	Y+6, r25	; 0x06
    1ac6:	8d 83       	std	Y+5, r24	; 0x05
    1ac8:	0f c0       	rjmp	.+30     	; 0x1ae8 <LED_VidButterFly+0x82c>
    1aca:	88 ec       	ldi	r24, 0xC8	; 200
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	9c 83       	std	Y+4, r25	; 0x04
    1ad0:	8b 83       	std	Y+3, r24	; 0x03
    1ad2:	8b 81       	ldd	r24, Y+3	; 0x03
    1ad4:	9c 81       	ldd	r25, Y+4	; 0x04
    1ad6:	01 97       	sbiw	r24, 0x01	; 1
    1ad8:	f1 f7       	brne	.-4      	; 0x1ad6 <LED_VidButterFly+0x81a>
    1ada:	9c 83       	std	Y+4, r25	; 0x04
    1adc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ade:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae0:	9e 81       	ldd	r25, Y+6	; 0x06
    1ae2:	01 97       	sbiw	r24, 0x01	; 1
    1ae4:	9e 83       	std	Y+6, r25	; 0x06
    1ae6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae8:	8d 81       	ldd	r24, Y+5	; 0x05
    1aea:	9e 81       	ldd	r25, Y+6	; 0x06
    1aec:	00 97       	sbiw	r24, 0x00	; 0
    1aee:	69 f7       	brne	.-38     	; 0x1aca <LED_VidButterFly+0x80e>
    1af0:	14 c0       	rjmp	.+40     	; 0x1b1a <LED_VidButterFly+0x85e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1af2:	6f 81       	ldd	r22, Y+7	; 0x07
    1af4:	78 85       	ldd	r23, Y+8	; 0x08
    1af6:	89 85       	ldd	r24, Y+9	; 0x09
    1af8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1afa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1afe:	dc 01       	movw	r26, r24
    1b00:	cb 01       	movw	r24, r22
    1b02:	9e 83       	std	Y+6, r25	; 0x06
    1b04:	8d 83       	std	Y+5, r24	; 0x05
    1b06:	8d 81       	ldd	r24, Y+5	; 0x05
    1b08:	9e 81       	ldd	r25, Y+6	; 0x06
    1b0a:	9a 83       	std	Y+2, r25	; 0x02
    1b0c:	89 83       	std	Y+1, r24	; 0x01
    1b0e:	89 81       	ldd	r24, Y+1	; 0x01
    1b10:	9a 81       	ldd	r25, Y+2	; 0x02
    1b12:	01 97       	sbiw	r24, 0x01	; 1
    1b14:	f1 f7       	brne	.-4      	; 0x1b12 <LED_VidButterFly+0x856>
    1b16:	9a 83       	std	Y+2, r25	; 0x02
    1b18:	89 83       	std	Y+1, r24	; 0x01

#include <util/delay.h>

void LED_VidButterFly(u8 LOC_u8Cycles, u8 LOC_u8Speed)
{
	for (u8 i=0; i<LOC_u8Cycles; i++)
    1b1a:	de 01       	movw	r26, r28
    1b1c:	ad 59       	subi	r26, 0x9D	; 157
    1b1e:	bf 4f       	sbci	r27, 0xFF	; 255
    1b20:	fe 01       	movw	r30, r28
    1b22:	ed 59       	subi	r30, 0x9D	; 157
    1b24:	ff 4f       	sbci	r31, 0xFF	; 255
    1b26:	80 81       	ld	r24, Z
    1b28:	8f 5f       	subi	r24, 0xFF	; 255
    1b2a:	8c 93       	st	X, r24
    1b2c:	fe 01       	movw	r30, r28
    1b2e:	ed 59       	subi	r30, 0x9D	; 157
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	de 01       	movw	r26, r28
    1b34:	ac 59       	subi	r26, 0x9C	; 156
    1b36:	bf 4f       	sbci	r27, 0xFF	; 255
    1b38:	90 81       	ld	r25, Z
    1b3a:	8c 91       	ld	r24, X
    1b3c:	98 17       	cp	r25, r24
    1b3e:	08 f4       	brcc	.+2      	; 0x1b42 <LED_VidButterFly+0x886>
    1b40:	d7 cb       	rjmp	.-2130   	; 0x12f0 <LED_VidButterFly+0x34>
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
		_delay_ms(LOC_u8Speed);
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
		_delay_ms(LOC_u8Speed);
	}
}
    1b42:	cb 59       	subi	r28, 0x9B	; 155
    1b44:	df 4f       	sbci	r29, 0xFF	; 255
    1b46:	0f b6       	in	r0, 0x3f	; 63
    1b48:	f8 94       	cli
    1b4a:	de bf       	out	0x3e, r29	; 62
    1b4c:	0f be       	out	0x3f, r0	; 63
    1b4e:	cd bf       	out	0x3d, r28	; 61
    1b50:	cf 91       	pop	r28
    1b52:	df 91       	pop	r29
    1b54:	1f 91       	pop	r17
    1b56:	0f 91       	pop	r16
    1b58:	08 95       	ret

00001b5a <SevSeg2x1_VidInit>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>"

void SevSeg2x1_VidInit(void)
{
    1b5a:	df 93       	push	r29
    1b5c:	cf 93       	push	r28
    1b5e:	cd b7       	in	r28, 0x3d	; 61
    1b60:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPortDirection(_7seg2x1_DataPort, 0xFF);	//enable Data port for Seven Segment to be output
    1b62:	82 e0       	ldi	r24, 0x02	; 2
    1b64:	6f ef       	ldi	r22, 0xFF	; 255
    1b66:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPortDirection>
	DIO_VidSetPinDirection(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, OUTPUT); //enable CTRL PIN for Left Seven Segment to be output
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	61 e0       	ldi	r22, 0x01	; 1
    1b6e:	41 e0       	ldi	r20, 0x01	; 1
    1b70:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, OUTPUT); //enable CTRL PIN for Right Seven Segment to be output
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	60 e0       	ldi	r22, 0x00	; 0
    1b78:	41 e0       	ldi	r20, 0x01	; 1
    1b7a:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
}
    1b7e:	cf 91       	pop	r28
    1b80:	df 91       	pop	r29
    1b82:	08 95       	ret

00001b84 <SevSeg2x1_VidDisplayRightDigit>:

void SevSeg2x1_VidDisplayRightDigit(u8 LOC_u8Digit)
{
    1b84:	df 93       	push	r29
    1b86:	cf 93       	push	r28
    1b88:	00 d0       	rcall	.+0      	; 0x1b8a <SevSeg2x1_VidDisplayRightDigit+0x6>
    1b8a:	0f 92       	push	r0
    1b8c:	cd b7       	in	r28, 0x3d	; 61
    1b8e:	de b7       	in	r29, 0x3e	; 62
    1b90:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Disable); //disable Left Seven Segment
    1b92:	81 e0       	ldi	r24, 0x01	; 1
    1b94:	61 e0       	ldi	r22, 0x01	; 1
    1b96:	40 e0       	ldi	r20, 0x00	; 0
    1b98:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Enable); //enable Right Seven Segment
    1b9c:	81 e0       	ldi	r24, 0x01	; 1
    1b9e:	60 e0       	ldi	r22, 0x00	; 0
    1ba0:	41 e0       	ldi	r20, 0x01	; 1
    1ba2:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	switch (LOC_u8Digit)
    1ba6:	89 81       	ldd	r24, Y+1	; 0x01
    1ba8:	28 2f       	mov	r18, r24
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	3b 83       	std	Y+3, r19	; 0x03
    1bae:	2a 83       	std	Y+2, r18	; 0x02
    1bb0:	8a 81       	ldd	r24, Y+2	; 0x02
    1bb2:	9b 81       	ldd	r25, Y+3	; 0x03
    1bb4:	84 30       	cpi	r24, 0x04	; 4
    1bb6:	91 05       	cpc	r25, r1
    1bb8:	09 f4       	brne	.+2      	; 0x1bbc <SevSeg2x1_VidDisplayRightDigit+0x38>
    1bba:	4b c0       	rjmp	.+150    	; 0x1c52 <SevSeg2x1_VidDisplayRightDigit+0xce>
    1bbc:	2a 81       	ldd	r18, Y+2	; 0x02
    1bbe:	3b 81       	ldd	r19, Y+3	; 0x03
    1bc0:	25 30       	cpi	r18, 0x05	; 5
    1bc2:	31 05       	cpc	r19, r1
    1bc4:	d4 f4       	brge	.+52     	; 0x1bfa <SevSeg2x1_VidDisplayRightDigit+0x76>
    1bc6:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc8:	9b 81       	ldd	r25, Y+3	; 0x03
    1bca:	81 30       	cpi	r24, 0x01	; 1
    1bcc:	91 05       	cpc	r25, r1
    1bce:	c1 f1       	breq	.+112    	; 0x1c40 <SevSeg2x1_VidDisplayRightDigit+0xbc>
    1bd0:	2a 81       	ldd	r18, Y+2	; 0x02
    1bd2:	3b 81       	ldd	r19, Y+3	; 0x03
    1bd4:	22 30       	cpi	r18, 0x02	; 2
    1bd6:	31 05       	cpc	r19, r1
    1bd8:	2c f4       	brge	.+10     	; 0x1be4 <SevSeg2x1_VidDisplayRightDigit+0x60>
    1bda:	8a 81       	ldd	r24, Y+2	; 0x02
    1bdc:	9b 81       	ldd	r25, Y+3	; 0x03
    1bde:	00 97       	sbiw	r24, 0x00	; 0
    1be0:	61 f1       	breq	.+88     	; 0x1c3a <SevSeg2x1_VidDisplayRightDigit+0xb6>
    1be2:	48 c0       	rjmp	.+144    	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
    1be4:	2a 81       	ldd	r18, Y+2	; 0x02
    1be6:	3b 81       	ldd	r19, Y+3	; 0x03
    1be8:	22 30       	cpi	r18, 0x02	; 2
    1bea:	31 05       	cpc	r19, r1
    1bec:	61 f1       	breq	.+88     	; 0x1c46 <SevSeg2x1_VidDisplayRightDigit+0xc2>
    1bee:	8a 81       	ldd	r24, Y+2	; 0x02
    1bf0:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf2:	83 30       	cpi	r24, 0x03	; 3
    1bf4:	91 05       	cpc	r25, r1
    1bf6:	51 f1       	breq	.+84     	; 0x1c4c <SevSeg2x1_VidDisplayRightDigit+0xc8>
    1bf8:	3d c0       	rjmp	.+122    	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
    1bfa:	2a 81       	ldd	r18, Y+2	; 0x02
    1bfc:	3b 81       	ldd	r19, Y+3	; 0x03
    1bfe:	27 30       	cpi	r18, 0x07	; 7
    1c00:	31 05       	cpc	r19, r1
    1c02:	81 f1       	breq	.+96     	; 0x1c64 <SevSeg2x1_VidDisplayRightDigit+0xe0>
    1c04:	8a 81       	ldd	r24, Y+2	; 0x02
    1c06:	9b 81       	ldd	r25, Y+3	; 0x03
    1c08:	88 30       	cpi	r24, 0x08	; 8
    1c0a:	91 05       	cpc	r25, r1
    1c0c:	5c f4       	brge	.+22     	; 0x1c24 <SevSeg2x1_VidDisplayRightDigit+0xa0>
    1c0e:	2a 81       	ldd	r18, Y+2	; 0x02
    1c10:	3b 81       	ldd	r19, Y+3	; 0x03
    1c12:	25 30       	cpi	r18, 0x05	; 5
    1c14:	31 05       	cpc	r19, r1
    1c16:	01 f1       	breq	.+64     	; 0x1c58 <SevSeg2x1_VidDisplayRightDigit+0xd4>
    1c18:	8a 81       	ldd	r24, Y+2	; 0x02
    1c1a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c1c:	86 30       	cpi	r24, 0x06	; 6
    1c1e:	91 05       	cpc	r25, r1
    1c20:	f1 f0       	breq	.+60     	; 0x1c5e <SevSeg2x1_VidDisplayRightDigit+0xda>
    1c22:	28 c0       	rjmp	.+80     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
    1c24:	2a 81       	ldd	r18, Y+2	; 0x02
    1c26:	3b 81       	ldd	r19, Y+3	; 0x03
    1c28:	28 30       	cpi	r18, 0x08	; 8
    1c2a:	31 05       	cpc	r19, r1
    1c2c:	f1 f0       	breq	.+60     	; 0x1c6a <SevSeg2x1_VidDisplayRightDigit+0xe6>
    1c2e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c30:	9b 81       	ldd	r25, Y+3	; 0x03
    1c32:	89 30       	cpi	r24, 0x09	; 9
    1c34:	91 05       	cpc	r25, r1
    1c36:	e1 f0       	breq	.+56     	; 0x1c70 <SevSeg2x1_VidDisplayRightDigit+0xec>
    1c38:	1d c0       	rjmp	.+58     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	{
	case 0: LOC_u8Digit=Zero; break;
    1c3a:	80 ec       	ldi	r24, 0xC0	; 192
    1c3c:	89 83       	std	Y+1, r24	; 0x01
    1c3e:	1a c0       	rjmp	.+52     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 1: LOC_u8Digit=One; break;
    1c40:	89 ef       	ldi	r24, 0xF9	; 249
    1c42:	89 83       	std	Y+1, r24	; 0x01
    1c44:	17 c0       	rjmp	.+46     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 2: LOC_u8Digit=Two; break;
    1c46:	84 ea       	ldi	r24, 0xA4	; 164
    1c48:	89 83       	std	Y+1, r24	; 0x01
    1c4a:	14 c0       	rjmp	.+40     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 3: LOC_u8Digit=Three; break;
    1c4c:	80 eb       	ldi	r24, 0xB0	; 176
    1c4e:	89 83       	std	Y+1, r24	; 0x01
    1c50:	11 c0       	rjmp	.+34     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 4: LOC_u8Digit=Four; break;
    1c52:	89 e9       	ldi	r24, 0x99	; 153
    1c54:	89 83       	std	Y+1, r24	; 0x01
    1c56:	0e c0       	rjmp	.+28     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 5: LOC_u8Digit=Five; break;
    1c58:	82 e9       	ldi	r24, 0x92	; 146
    1c5a:	89 83       	std	Y+1, r24	; 0x01
    1c5c:	0b c0       	rjmp	.+22     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 6: LOC_u8Digit=Six; break;
    1c5e:	82 e8       	ldi	r24, 0x82	; 130
    1c60:	89 83       	std	Y+1, r24	; 0x01
    1c62:	08 c0       	rjmp	.+16     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 7: LOC_u8Digit=Seven; break;
    1c64:	88 ef       	ldi	r24, 0xF8	; 248
    1c66:	89 83       	std	Y+1, r24	; 0x01
    1c68:	05 c0       	rjmp	.+10     	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 8: LOC_u8Digit=Eight; break;
    1c6a:	80 e8       	ldi	r24, 0x80	; 128
    1c6c:	89 83       	std	Y+1, r24	; 0x01
    1c6e:	02 c0       	rjmp	.+4      	; 0x1c74 <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 9: LOC_u8Digit=Nine; break;
    1c70:	80 e9       	ldi	r24, 0x90	; 144
    1c72:	89 83       	std	Y+1, r24	; 0x01
	}
	DIO_VidSetPortValue(_7seg2x1_DataPort, LOC_u8Digit);
    1c74:	82 e0       	ldi	r24, 0x02	; 2
    1c76:	69 81       	ldd	r22, Y+1	; 0x01
    1c78:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
}
    1c7c:	0f 90       	pop	r0
    1c7e:	0f 90       	pop	r0
    1c80:	0f 90       	pop	r0
    1c82:	cf 91       	pop	r28
    1c84:	df 91       	pop	r29
    1c86:	08 95       	ret

00001c88 <SevSeg2x1_VidDisplayLeftDigit>:

void SevSeg2x1_VidDisplayLeftDigit(u8 LOC_u8Digit)
{
    1c88:	df 93       	push	r29
    1c8a:	cf 93       	push	r28
    1c8c:	00 d0       	rcall	.+0      	; 0x1c8e <SevSeg2x1_VidDisplayLeftDigit+0x6>
    1c8e:	0f 92       	push	r0
    1c90:	cd b7       	in	r28, 0x3d	; 61
    1c92:	de b7       	in	r29, 0x3e	; 62
    1c94:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Disable); //disable Right Seven Segment
    1c96:	81 e0       	ldi	r24, 0x01	; 1
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	40 e0       	ldi	r20, 0x00	; 0
    1c9c:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Enable); //enable Left Seven Segment
    1ca0:	81 e0       	ldi	r24, 0x01	; 1
    1ca2:	61 e0       	ldi	r22, 0x01	; 1
    1ca4:	41 e0       	ldi	r20, 0x01	; 1
    1ca6:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	switch (LOC_u8Digit)
    1caa:	89 81       	ldd	r24, Y+1	; 0x01
    1cac:	28 2f       	mov	r18, r24
    1cae:	30 e0       	ldi	r19, 0x00	; 0
    1cb0:	3b 83       	std	Y+3, r19	; 0x03
    1cb2:	2a 83       	std	Y+2, r18	; 0x02
    1cb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1cb6:	9b 81       	ldd	r25, Y+3	; 0x03
    1cb8:	84 30       	cpi	r24, 0x04	; 4
    1cba:	91 05       	cpc	r25, r1
    1cbc:	09 f4       	brne	.+2      	; 0x1cc0 <SevSeg2x1_VidDisplayLeftDigit+0x38>
    1cbe:	4b c0       	rjmp	.+150    	; 0x1d56 <SevSeg2x1_VidDisplayLeftDigit+0xce>
    1cc0:	2a 81       	ldd	r18, Y+2	; 0x02
    1cc2:	3b 81       	ldd	r19, Y+3	; 0x03
    1cc4:	25 30       	cpi	r18, 0x05	; 5
    1cc6:	31 05       	cpc	r19, r1
    1cc8:	d4 f4       	brge	.+52     	; 0x1cfe <SevSeg2x1_VidDisplayLeftDigit+0x76>
    1cca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ccc:	9b 81       	ldd	r25, Y+3	; 0x03
    1cce:	81 30       	cpi	r24, 0x01	; 1
    1cd0:	91 05       	cpc	r25, r1
    1cd2:	c1 f1       	breq	.+112    	; 0x1d44 <SevSeg2x1_VidDisplayLeftDigit+0xbc>
    1cd4:	2a 81       	ldd	r18, Y+2	; 0x02
    1cd6:	3b 81       	ldd	r19, Y+3	; 0x03
    1cd8:	22 30       	cpi	r18, 0x02	; 2
    1cda:	31 05       	cpc	r19, r1
    1cdc:	2c f4       	brge	.+10     	; 0x1ce8 <SevSeg2x1_VidDisplayLeftDigit+0x60>
    1cde:	8a 81       	ldd	r24, Y+2	; 0x02
    1ce0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ce2:	00 97       	sbiw	r24, 0x00	; 0
    1ce4:	61 f1       	breq	.+88     	; 0x1d3e <SevSeg2x1_VidDisplayLeftDigit+0xb6>
    1ce6:	48 c0       	rjmp	.+144    	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    1ce8:	2a 81       	ldd	r18, Y+2	; 0x02
    1cea:	3b 81       	ldd	r19, Y+3	; 0x03
    1cec:	22 30       	cpi	r18, 0x02	; 2
    1cee:	31 05       	cpc	r19, r1
    1cf0:	61 f1       	breq	.+88     	; 0x1d4a <SevSeg2x1_VidDisplayLeftDigit+0xc2>
    1cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf6:	83 30       	cpi	r24, 0x03	; 3
    1cf8:	91 05       	cpc	r25, r1
    1cfa:	51 f1       	breq	.+84     	; 0x1d50 <SevSeg2x1_VidDisplayLeftDigit+0xc8>
    1cfc:	3d c0       	rjmp	.+122    	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    1cfe:	2a 81       	ldd	r18, Y+2	; 0x02
    1d00:	3b 81       	ldd	r19, Y+3	; 0x03
    1d02:	27 30       	cpi	r18, 0x07	; 7
    1d04:	31 05       	cpc	r19, r1
    1d06:	81 f1       	breq	.+96     	; 0x1d68 <SevSeg2x1_VidDisplayLeftDigit+0xe0>
    1d08:	8a 81       	ldd	r24, Y+2	; 0x02
    1d0a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d0c:	88 30       	cpi	r24, 0x08	; 8
    1d0e:	91 05       	cpc	r25, r1
    1d10:	5c f4       	brge	.+22     	; 0x1d28 <SevSeg2x1_VidDisplayLeftDigit+0xa0>
    1d12:	2a 81       	ldd	r18, Y+2	; 0x02
    1d14:	3b 81       	ldd	r19, Y+3	; 0x03
    1d16:	25 30       	cpi	r18, 0x05	; 5
    1d18:	31 05       	cpc	r19, r1
    1d1a:	01 f1       	breq	.+64     	; 0x1d5c <SevSeg2x1_VidDisplayLeftDigit+0xd4>
    1d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d20:	86 30       	cpi	r24, 0x06	; 6
    1d22:	91 05       	cpc	r25, r1
    1d24:	f1 f0       	breq	.+60     	; 0x1d62 <SevSeg2x1_VidDisplayLeftDigit+0xda>
    1d26:	28 c0       	rjmp	.+80     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    1d28:	2a 81       	ldd	r18, Y+2	; 0x02
    1d2a:	3b 81       	ldd	r19, Y+3	; 0x03
    1d2c:	28 30       	cpi	r18, 0x08	; 8
    1d2e:	31 05       	cpc	r19, r1
    1d30:	f1 f0       	breq	.+60     	; 0x1d6e <SevSeg2x1_VidDisplayLeftDigit+0xe6>
    1d32:	8a 81       	ldd	r24, Y+2	; 0x02
    1d34:	9b 81       	ldd	r25, Y+3	; 0x03
    1d36:	89 30       	cpi	r24, 0x09	; 9
    1d38:	91 05       	cpc	r25, r1
    1d3a:	e1 f0       	breq	.+56     	; 0x1d74 <SevSeg2x1_VidDisplayLeftDigit+0xec>
    1d3c:	1d c0       	rjmp	.+58     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	{
	case 0: LOC_u8Digit=Zero; break;
    1d3e:	80 ec       	ldi	r24, 0xC0	; 192
    1d40:	89 83       	std	Y+1, r24	; 0x01
    1d42:	1a c0       	rjmp	.+52     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 1: LOC_u8Digit=One; break;
    1d44:	89 ef       	ldi	r24, 0xF9	; 249
    1d46:	89 83       	std	Y+1, r24	; 0x01
    1d48:	17 c0       	rjmp	.+46     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 2: LOC_u8Digit=Two; break;
    1d4a:	84 ea       	ldi	r24, 0xA4	; 164
    1d4c:	89 83       	std	Y+1, r24	; 0x01
    1d4e:	14 c0       	rjmp	.+40     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 3: LOC_u8Digit=Three; break;
    1d50:	80 eb       	ldi	r24, 0xB0	; 176
    1d52:	89 83       	std	Y+1, r24	; 0x01
    1d54:	11 c0       	rjmp	.+34     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 4: LOC_u8Digit=Four; break;
    1d56:	89 e9       	ldi	r24, 0x99	; 153
    1d58:	89 83       	std	Y+1, r24	; 0x01
    1d5a:	0e c0       	rjmp	.+28     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 5: LOC_u8Digit=Five; break;
    1d5c:	82 e9       	ldi	r24, 0x92	; 146
    1d5e:	89 83       	std	Y+1, r24	; 0x01
    1d60:	0b c0       	rjmp	.+22     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 6: LOC_u8Digit=Six; break;
    1d62:	82 e8       	ldi	r24, 0x82	; 130
    1d64:	89 83       	std	Y+1, r24	; 0x01
    1d66:	08 c0       	rjmp	.+16     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 7: LOC_u8Digit=Seven; break;
    1d68:	88 ef       	ldi	r24, 0xF8	; 248
    1d6a:	89 83       	std	Y+1, r24	; 0x01
    1d6c:	05 c0       	rjmp	.+10     	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 8: LOC_u8Digit=Eight; break;
    1d6e:	80 e8       	ldi	r24, 0x80	; 128
    1d70:	89 83       	std	Y+1, r24	; 0x01
    1d72:	02 c0       	rjmp	.+4      	; 0x1d78 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 9: LOC_u8Digit=Nine; break;
    1d74:	80 e9       	ldi	r24, 0x90	; 144
    1d76:	89 83       	std	Y+1, r24	; 0x01
	}
	DIO_VidSetPortValue(_7seg2x1_DataPort, LOC_u8Digit);
    1d78:	82 e0       	ldi	r24, 0x02	; 2
    1d7a:	69 81       	ldd	r22, Y+1	; 0x01
    1d7c:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
}
    1d80:	0f 90       	pop	r0
    1d82:	0f 90       	pop	r0
    1d84:	0f 90       	pop	r0
    1d86:	cf 91       	pop	r28
    1d88:	df 91       	pop	r29
    1d8a:	08 95       	ret

00001d8c <SevSeg2x1_VidCountUp>:

void SevSeg2x1_VidCountUp(u8 LOC_u8Start, u8 LOC_u8End)
{
    1d8c:	df 93       	push	r29
    1d8e:	cf 93       	push	r28
    1d90:	cd b7       	in	r28, 0x3d	; 61
    1d92:	de b7       	in	r29, 0x3e	; 62
    1d94:	a2 97       	sbiw	r28, 0x22	; 34
    1d96:	0f b6       	in	r0, 0x3f	; 63
    1d98:	f8 94       	cli
    1d9a:	de bf       	out	0x3e, r29	; 62
    1d9c:	0f be       	out	0x3f, r0	; 63
    1d9e:	cd bf       	out	0x3d, r28	; 61
    1da0:	89 a3       	std	Y+33, r24	; 0x21
    1da2:	6a a3       	std	Y+34, r22	; 0x22

	u8 LOC_LeftDigit = 0;
    1da4:	18 a2       	std	Y+32, r1	; 0x20
	u8 LOC_RightDigit = 0;
    1da6:	1f 8e       	std	Y+31, r1	; 0x1f
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
    1da8:	89 a1       	ldd	r24, Y+33	; 0x21
    1daa:	8e 8f       	std	Y+30, r24	; 0x1e
    1dac:	03 c1       	rjmp	.+518    	; 0x1fb4 <SevSeg2x1_VidCountUp+0x228>
	{
		LOC_LeftDigit = LOC_Count /10;
    1dae:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1db0:	9a e0       	ldi	r25, 0x0A	; 10
    1db2:	69 2f       	mov	r22, r25
    1db4:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__udivmodqi4>
    1db8:	88 a3       	std	Y+32, r24	; 0x20
		LOC_RightDigit = LOC_Count % 10;
    1dba:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1dbc:	9a e0       	ldi	r25, 0x0A	; 10
    1dbe:	69 2f       	mov	r22, r25
    1dc0:	0e 94 03 17 	call	0x2e06	; 0x2e06 <__udivmodqi4>
    1dc4:	89 2f       	mov	r24, r25
    1dc6:	8f 8f       	std	Y+31, r24	; 0x1f

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    1dc8:	1d 8e       	std	Y+29, r1	; 0x1d
    1dca:	ed c0       	rjmp	.+474    	; 0x1fa6 <SevSeg2x1_VidCountUp+0x21a>
		{
			SevSeg2x1_VidDisplayRightDigit(LOC_RightDigit);
    1dcc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1dce:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <SevSeg2x1_VidDisplayRightDigit>
    1dd2:	80 e0       	ldi	r24, 0x00	; 0
    1dd4:	90 e0       	ldi	r25, 0x00	; 0
    1dd6:	a0 e2       	ldi	r26, 0x20	; 32
    1dd8:	b1 e4       	ldi	r27, 0x41	; 65
    1dda:	89 8f       	std	Y+25, r24	; 0x19
    1ddc:	9a 8f       	std	Y+26, r25	; 0x1a
    1dde:	ab 8f       	std	Y+27, r26	; 0x1b
    1de0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1de2:	69 8d       	ldd	r22, Y+25	; 0x19
    1de4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1de6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1de8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dea:	20 e0       	ldi	r18, 0x00	; 0
    1dec:	30 e0       	ldi	r19, 0x00	; 0
    1dee:	4a ef       	ldi	r20, 0xFA	; 250
    1df0:	54 e4       	ldi	r21, 0x44	; 68
    1df2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1df6:	dc 01       	movw	r26, r24
    1df8:	cb 01       	movw	r24, r22
    1dfa:	8d 8b       	std	Y+21, r24	; 0x15
    1dfc:	9e 8b       	std	Y+22, r25	; 0x16
    1dfe:	af 8b       	std	Y+23, r26	; 0x17
    1e00:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1e02:	6d 89       	ldd	r22, Y+21	; 0x15
    1e04:	7e 89       	ldd	r23, Y+22	; 0x16
    1e06:	8f 89       	ldd	r24, Y+23	; 0x17
    1e08:	98 8d       	ldd	r25, Y+24	; 0x18
    1e0a:	20 e0       	ldi	r18, 0x00	; 0
    1e0c:	30 e0       	ldi	r19, 0x00	; 0
    1e0e:	40 e8       	ldi	r20, 0x80	; 128
    1e10:	5f e3       	ldi	r21, 0x3F	; 63
    1e12:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e16:	88 23       	and	r24, r24
    1e18:	2c f4       	brge	.+10     	; 0x1e24 <SevSeg2x1_VidCountUp+0x98>
		__ticks = 1;
    1e1a:	81 e0       	ldi	r24, 0x01	; 1
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	9c 8b       	std	Y+20, r25	; 0x14
    1e20:	8b 8b       	std	Y+19, r24	; 0x13
    1e22:	3f c0       	rjmp	.+126    	; 0x1ea2 <SevSeg2x1_VidCountUp+0x116>
	else if (__tmp > 65535)
    1e24:	6d 89       	ldd	r22, Y+21	; 0x15
    1e26:	7e 89       	ldd	r23, Y+22	; 0x16
    1e28:	8f 89       	ldd	r24, Y+23	; 0x17
    1e2a:	98 8d       	ldd	r25, Y+24	; 0x18
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	3f ef       	ldi	r19, 0xFF	; 255
    1e30:	4f e7       	ldi	r20, 0x7F	; 127
    1e32:	57 e4       	ldi	r21, 0x47	; 71
    1e34:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e38:	18 16       	cp	r1, r24
    1e3a:	4c f5       	brge	.+82     	; 0x1e8e <SevSeg2x1_VidCountUp+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e3c:	69 8d       	ldd	r22, Y+25	; 0x19
    1e3e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e40:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e42:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e44:	20 e0       	ldi	r18, 0x00	; 0
    1e46:	30 e0       	ldi	r19, 0x00	; 0
    1e48:	40 e2       	ldi	r20, 0x20	; 32
    1e4a:	51 e4       	ldi	r21, 0x41	; 65
    1e4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e50:	dc 01       	movw	r26, r24
    1e52:	cb 01       	movw	r24, r22
    1e54:	bc 01       	movw	r22, r24
    1e56:	cd 01       	movw	r24, r26
    1e58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e5c:	dc 01       	movw	r26, r24
    1e5e:	cb 01       	movw	r24, r22
    1e60:	9c 8b       	std	Y+20, r25	; 0x14
    1e62:	8b 8b       	std	Y+19, r24	; 0x13
    1e64:	0f c0       	rjmp	.+30     	; 0x1e84 <SevSeg2x1_VidCountUp+0xf8>
    1e66:	88 ec       	ldi	r24, 0xC8	; 200
    1e68:	90 e0       	ldi	r25, 0x00	; 0
    1e6a:	9a 8b       	std	Y+18, r25	; 0x12
    1e6c:	89 8b       	std	Y+17, r24	; 0x11
    1e6e:	89 89       	ldd	r24, Y+17	; 0x11
    1e70:	9a 89       	ldd	r25, Y+18	; 0x12
    1e72:	01 97       	sbiw	r24, 0x01	; 1
    1e74:	f1 f7       	brne	.-4      	; 0x1e72 <SevSeg2x1_VidCountUp+0xe6>
    1e76:	9a 8b       	std	Y+18, r25	; 0x12
    1e78:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e7a:	8b 89       	ldd	r24, Y+19	; 0x13
    1e7c:	9c 89       	ldd	r25, Y+20	; 0x14
    1e7e:	01 97       	sbiw	r24, 0x01	; 1
    1e80:	9c 8b       	std	Y+20, r25	; 0x14
    1e82:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e84:	8b 89       	ldd	r24, Y+19	; 0x13
    1e86:	9c 89       	ldd	r25, Y+20	; 0x14
    1e88:	00 97       	sbiw	r24, 0x00	; 0
    1e8a:	69 f7       	brne	.-38     	; 0x1e66 <SevSeg2x1_VidCountUp+0xda>
    1e8c:	14 c0       	rjmp	.+40     	; 0x1eb6 <SevSeg2x1_VidCountUp+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e8e:	6d 89       	ldd	r22, Y+21	; 0x15
    1e90:	7e 89       	ldd	r23, Y+22	; 0x16
    1e92:	8f 89       	ldd	r24, Y+23	; 0x17
    1e94:	98 8d       	ldd	r25, Y+24	; 0x18
    1e96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e9a:	dc 01       	movw	r26, r24
    1e9c:	cb 01       	movw	r24, r22
    1e9e:	9c 8b       	std	Y+20, r25	; 0x14
    1ea0:	8b 8b       	std	Y+19, r24	; 0x13
    1ea2:	8b 89       	ldd	r24, Y+19	; 0x13
    1ea4:	9c 89       	ldd	r25, Y+20	; 0x14
    1ea6:	98 8b       	std	Y+16, r25	; 0x10
    1ea8:	8f 87       	std	Y+15, r24	; 0x0f
    1eaa:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eac:	98 89       	ldd	r25, Y+16	; 0x10
    1eae:	01 97       	sbiw	r24, 0x01	; 1
    1eb0:	f1 f7       	brne	.-4      	; 0x1eae <SevSeg2x1_VidCountUp+0x122>
    1eb2:	98 8b       	std	Y+16, r25	; 0x10
    1eb4:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
    1eb6:	88 a1       	ldd	r24, Y+32	; 0x20
    1eb8:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <SevSeg2x1_VidDisplayLeftDigit>
    1ebc:	80 e0       	ldi	r24, 0x00	; 0
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	a0 e2       	ldi	r26, 0x20	; 32
    1ec2:	b1 e4       	ldi	r27, 0x41	; 65
    1ec4:	8b 87       	std	Y+11, r24	; 0x0b
    1ec6:	9c 87       	std	Y+12, r25	; 0x0c
    1ec8:	ad 87       	std	Y+13, r26	; 0x0d
    1eca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ecc:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ece:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ed0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ed2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	4a ef       	ldi	r20, 0xFA	; 250
    1eda:	54 e4       	ldi	r21, 0x44	; 68
    1edc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	8f 83       	std	Y+7, r24	; 0x07
    1ee6:	98 87       	std	Y+8, r25	; 0x08
    1ee8:	a9 87       	std	Y+9, r26	; 0x09
    1eea:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1eec:	6f 81       	ldd	r22, Y+7	; 0x07
    1eee:	78 85       	ldd	r23, Y+8	; 0x08
    1ef0:	89 85       	ldd	r24, Y+9	; 0x09
    1ef2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	40 e8       	ldi	r20, 0x80	; 128
    1efa:	5f e3       	ldi	r21, 0x3F	; 63
    1efc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f00:	88 23       	and	r24, r24
    1f02:	2c f4       	brge	.+10     	; 0x1f0e <SevSeg2x1_VidCountUp+0x182>
		__ticks = 1;
    1f04:	81 e0       	ldi	r24, 0x01	; 1
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	9e 83       	std	Y+6, r25	; 0x06
    1f0a:	8d 83       	std	Y+5, r24	; 0x05
    1f0c:	3f c0       	rjmp	.+126    	; 0x1f8c <SevSeg2x1_VidCountUp+0x200>
	else if (__tmp > 65535)
    1f0e:	6f 81       	ldd	r22, Y+7	; 0x07
    1f10:	78 85       	ldd	r23, Y+8	; 0x08
    1f12:	89 85       	ldd	r24, Y+9	; 0x09
    1f14:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f16:	20 e0       	ldi	r18, 0x00	; 0
    1f18:	3f ef       	ldi	r19, 0xFF	; 255
    1f1a:	4f e7       	ldi	r20, 0x7F	; 127
    1f1c:	57 e4       	ldi	r21, 0x47	; 71
    1f1e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f22:	18 16       	cp	r1, r24
    1f24:	4c f5       	brge	.+82     	; 0x1f78 <SevSeg2x1_VidCountUp+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f26:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f28:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f2a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f2c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	40 e2       	ldi	r20, 0x20	; 32
    1f34:	51 e4       	ldi	r21, 0x41	; 65
    1f36:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f3a:	dc 01       	movw	r26, r24
    1f3c:	cb 01       	movw	r24, r22
    1f3e:	bc 01       	movw	r22, r24
    1f40:	cd 01       	movw	r24, r26
    1f42:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	9e 83       	std	Y+6, r25	; 0x06
    1f4c:	8d 83       	std	Y+5, r24	; 0x05
    1f4e:	0f c0       	rjmp	.+30     	; 0x1f6e <SevSeg2x1_VidCountUp+0x1e2>
    1f50:	88 ec       	ldi	r24, 0xC8	; 200
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	9c 83       	std	Y+4, r25	; 0x04
    1f56:	8b 83       	std	Y+3, r24	; 0x03
    1f58:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5a:	9c 81       	ldd	r25, Y+4	; 0x04
    1f5c:	01 97       	sbiw	r24, 0x01	; 1
    1f5e:	f1 f7       	brne	.-4      	; 0x1f5c <SevSeg2x1_VidCountUp+0x1d0>
    1f60:	9c 83       	std	Y+4, r25	; 0x04
    1f62:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f64:	8d 81       	ldd	r24, Y+5	; 0x05
    1f66:	9e 81       	ldd	r25, Y+6	; 0x06
    1f68:	01 97       	sbiw	r24, 0x01	; 1
    1f6a:	9e 83       	std	Y+6, r25	; 0x06
    1f6c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f6e:	8d 81       	ldd	r24, Y+5	; 0x05
    1f70:	9e 81       	ldd	r25, Y+6	; 0x06
    1f72:	00 97       	sbiw	r24, 0x00	; 0
    1f74:	69 f7       	brne	.-38     	; 0x1f50 <SevSeg2x1_VidCountUp+0x1c4>
    1f76:	14 c0       	rjmp	.+40     	; 0x1fa0 <SevSeg2x1_VidCountUp+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f78:	6f 81       	ldd	r22, Y+7	; 0x07
    1f7a:	78 85       	ldd	r23, Y+8	; 0x08
    1f7c:	89 85       	ldd	r24, Y+9	; 0x09
    1f7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f80:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f84:	dc 01       	movw	r26, r24
    1f86:	cb 01       	movw	r24, r22
    1f88:	9e 83       	std	Y+6, r25	; 0x06
    1f8a:	8d 83       	std	Y+5, r24	; 0x05
    1f8c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f8e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f90:	9a 83       	std	Y+2, r25	; 0x02
    1f92:	89 83       	std	Y+1, r24	; 0x01
    1f94:	89 81       	ldd	r24, Y+1	; 0x01
    1f96:	9a 81       	ldd	r25, Y+2	; 0x02
    1f98:	01 97       	sbiw	r24, 0x01	; 1
    1f9a:	f1 f7       	brne	.-4      	; 0x1f98 <SevSeg2x1_VidCountUp+0x20c>
    1f9c:	9a 83       	std	Y+2, r25	; 0x02
    1f9e:	89 83       	std	Y+1, r24	; 0x01
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
	{
		LOC_LeftDigit = LOC_Count /10;
		LOC_RightDigit = LOC_Count % 10;

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    1fa0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fa2:	8f 5f       	subi	r24, 0xFF	; 255
    1fa4:	8d 8f       	std	Y+29, r24	; 0x1d
    1fa6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1fa8:	8a 30       	cpi	r24, 0x0A	; 10
    1faa:	08 f4       	brcc	.+2      	; 0x1fae <SevSeg2x1_VidCountUp+0x222>
    1fac:	0f cf       	rjmp	.-482    	; 0x1dcc <SevSeg2x1_VidCountUp+0x40>
void SevSeg2x1_VidCountUp(u8 LOC_u8Start, u8 LOC_u8End)
{

	u8 LOC_LeftDigit = 0;
	u8 LOC_RightDigit = 0;
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
    1fae:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1fb0:	8f 5f       	subi	r24, 0xFF	; 255
    1fb2:	8e 8f       	std	Y+30, r24	; 0x1e
    1fb4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1fb6:	28 2f       	mov	r18, r24
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	8a a1       	ldd	r24, Y+34	; 0x22
    1fbc:	88 2f       	mov	r24, r24
    1fbe:	90 e0       	ldi	r25, 0x00	; 0
    1fc0:	01 96       	adiw	r24, 0x01	; 1
    1fc2:	28 17       	cp	r18, r24
    1fc4:	39 07       	cpc	r19, r25
    1fc6:	0c f4       	brge	.+2      	; 0x1fca <SevSeg2x1_VidCountUp+0x23e>
    1fc8:	f2 ce       	rjmp	.-540    	; 0x1dae <SevSeg2x1_VidCountUp+0x22>
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
			_delay_ms(10);
		}
	}
}
    1fca:	a2 96       	adiw	r28, 0x22	; 34
    1fcc:	0f b6       	in	r0, 0x3f	; 63
    1fce:	f8 94       	cli
    1fd0:	de bf       	out	0x3e, r29	; 62
    1fd2:	0f be       	out	0x3f, r0	; 63
    1fd4:	cd bf       	out	0x3d, r28	; 61
    1fd6:	cf 91       	pop	r28
    1fd8:	df 91       	pop	r29
    1fda:	08 95       	ret

00001fdc <SevSeg2x1_VidCountDown>:


void SevSeg2x1_VidCountDown(u8 LOC_u8Start, u8 LOC_u8End)
{
    1fdc:	df 93       	push	r29
    1fde:	cf 93       	push	r28
    1fe0:	cd b7       	in	r28, 0x3d	; 61
    1fe2:	de b7       	in	r29, 0x3e	; 62
    1fe4:	a2 97       	sbiw	r28, 0x22	; 34
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	de bf       	out	0x3e, r29	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	cd bf       	out	0x3d, r28	; 61
    1ff0:	89 a3       	std	Y+33, r24	; 0x21
    1ff2:	6a a3       	std	Y+34, r22	; 0x22
	u8 LOC_LeftDigit = 0;
    1ff4:	18 a2       	std	Y+32, r1	; 0x20
	u8 LOC_RightDigit = 0;
    1ff6:	1f 8e       	std	Y+31, r1	; 0x1f
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
    1ff8:	89 a1       	ldd	r24, Y+33	; 0x21
    1ffa:	8e 8f       	std	Y+30, r24	; 0x1e
    1ffc:	03 c1       	rjmp	.+518    	; 0x2204 <SevSeg2x1_VidCountDown+0x228>
	{
		LOC_LeftDigit = LOC_Count /10;
    1ffe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2000:	9a e0       	ldi	r25, 0x0A	; 10
    2002:	69 2f       	mov	r22, r25
    2004:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__divmodqi4>
    2008:	88 a3       	std	Y+32, r24	; 0x20
		LOC_RightDigit = LOC_Count % 10;
    200a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    200c:	9a e0       	ldi	r25, 0x0A	; 10
    200e:	69 2f       	mov	r22, r25
    2010:	0e 94 0f 17 	call	0x2e1e	; 0x2e1e <__divmodqi4>
    2014:	89 2f       	mov	r24, r25
    2016:	8f 8f       	std	Y+31, r24	; 0x1f

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    2018:	1d 8e       	std	Y+29, r1	; 0x1d
    201a:	ed c0       	rjmp	.+474    	; 0x21f6 <SevSeg2x1_VidCountDown+0x21a>
		{
			SevSeg2x1_VidDisplayRightDigit(LOC_RightDigit);
    201c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    201e:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <SevSeg2x1_VidDisplayRightDigit>
    2022:	80 e0       	ldi	r24, 0x00	; 0
    2024:	90 e0       	ldi	r25, 0x00	; 0
    2026:	a0 e2       	ldi	r26, 0x20	; 32
    2028:	b1 e4       	ldi	r27, 0x41	; 65
    202a:	89 8f       	std	Y+25, r24	; 0x19
    202c:	9a 8f       	std	Y+26, r25	; 0x1a
    202e:	ab 8f       	std	Y+27, r26	; 0x1b
    2030:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2032:	69 8d       	ldd	r22, Y+25	; 0x19
    2034:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2036:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2038:	9c 8d       	ldd	r25, Y+28	; 0x1c
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	4a ef       	ldi	r20, 0xFA	; 250
    2040:	54 e4       	ldi	r21, 0x44	; 68
    2042:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2046:	dc 01       	movw	r26, r24
    2048:	cb 01       	movw	r24, r22
    204a:	8d 8b       	std	Y+21, r24	; 0x15
    204c:	9e 8b       	std	Y+22, r25	; 0x16
    204e:	af 8b       	std	Y+23, r26	; 0x17
    2050:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2052:	6d 89       	ldd	r22, Y+21	; 0x15
    2054:	7e 89       	ldd	r23, Y+22	; 0x16
    2056:	8f 89       	ldd	r24, Y+23	; 0x17
    2058:	98 8d       	ldd	r25, Y+24	; 0x18
    205a:	20 e0       	ldi	r18, 0x00	; 0
    205c:	30 e0       	ldi	r19, 0x00	; 0
    205e:	40 e8       	ldi	r20, 0x80	; 128
    2060:	5f e3       	ldi	r21, 0x3F	; 63
    2062:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2066:	88 23       	and	r24, r24
    2068:	2c f4       	brge	.+10     	; 0x2074 <SevSeg2x1_VidCountDown+0x98>
		__ticks = 1;
    206a:	81 e0       	ldi	r24, 0x01	; 1
    206c:	90 e0       	ldi	r25, 0x00	; 0
    206e:	9c 8b       	std	Y+20, r25	; 0x14
    2070:	8b 8b       	std	Y+19, r24	; 0x13
    2072:	3f c0       	rjmp	.+126    	; 0x20f2 <SevSeg2x1_VidCountDown+0x116>
	else if (__tmp > 65535)
    2074:	6d 89       	ldd	r22, Y+21	; 0x15
    2076:	7e 89       	ldd	r23, Y+22	; 0x16
    2078:	8f 89       	ldd	r24, Y+23	; 0x17
    207a:	98 8d       	ldd	r25, Y+24	; 0x18
    207c:	20 e0       	ldi	r18, 0x00	; 0
    207e:	3f ef       	ldi	r19, 0xFF	; 255
    2080:	4f e7       	ldi	r20, 0x7F	; 127
    2082:	57 e4       	ldi	r21, 0x47	; 71
    2084:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2088:	18 16       	cp	r1, r24
    208a:	4c f5       	brge	.+82     	; 0x20de <SevSeg2x1_VidCountDown+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    208c:	69 8d       	ldd	r22, Y+25	; 0x19
    208e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2090:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2092:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2094:	20 e0       	ldi	r18, 0x00	; 0
    2096:	30 e0       	ldi	r19, 0x00	; 0
    2098:	40 e2       	ldi	r20, 0x20	; 32
    209a:	51 e4       	ldi	r21, 0x41	; 65
    209c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a0:	dc 01       	movw	r26, r24
    20a2:	cb 01       	movw	r24, r22
    20a4:	bc 01       	movw	r22, r24
    20a6:	cd 01       	movw	r24, r26
    20a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ac:	dc 01       	movw	r26, r24
    20ae:	cb 01       	movw	r24, r22
    20b0:	9c 8b       	std	Y+20, r25	; 0x14
    20b2:	8b 8b       	std	Y+19, r24	; 0x13
    20b4:	0f c0       	rjmp	.+30     	; 0x20d4 <SevSeg2x1_VidCountDown+0xf8>
    20b6:	88 ec       	ldi	r24, 0xC8	; 200
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	9a 8b       	std	Y+18, r25	; 0x12
    20bc:	89 8b       	std	Y+17, r24	; 0x11
    20be:	89 89       	ldd	r24, Y+17	; 0x11
    20c0:	9a 89       	ldd	r25, Y+18	; 0x12
    20c2:	01 97       	sbiw	r24, 0x01	; 1
    20c4:	f1 f7       	brne	.-4      	; 0x20c2 <SevSeg2x1_VidCountDown+0xe6>
    20c6:	9a 8b       	std	Y+18, r25	; 0x12
    20c8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ca:	8b 89       	ldd	r24, Y+19	; 0x13
    20cc:	9c 89       	ldd	r25, Y+20	; 0x14
    20ce:	01 97       	sbiw	r24, 0x01	; 1
    20d0:	9c 8b       	std	Y+20, r25	; 0x14
    20d2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20d4:	8b 89       	ldd	r24, Y+19	; 0x13
    20d6:	9c 89       	ldd	r25, Y+20	; 0x14
    20d8:	00 97       	sbiw	r24, 0x00	; 0
    20da:	69 f7       	brne	.-38     	; 0x20b6 <SevSeg2x1_VidCountDown+0xda>
    20dc:	14 c0       	rjmp	.+40     	; 0x2106 <SevSeg2x1_VidCountDown+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20de:	6d 89       	ldd	r22, Y+21	; 0x15
    20e0:	7e 89       	ldd	r23, Y+22	; 0x16
    20e2:	8f 89       	ldd	r24, Y+23	; 0x17
    20e4:	98 8d       	ldd	r25, Y+24	; 0x18
    20e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ea:	dc 01       	movw	r26, r24
    20ec:	cb 01       	movw	r24, r22
    20ee:	9c 8b       	std	Y+20, r25	; 0x14
    20f0:	8b 8b       	std	Y+19, r24	; 0x13
    20f2:	8b 89       	ldd	r24, Y+19	; 0x13
    20f4:	9c 89       	ldd	r25, Y+20	; 0x14
    20f6:	98 8b       	std	Y+16, r25	; 0x10
    20f8:	8f 87       	std	Y+15, r24	; 0x0f
    20fa:	8f 85       	ldd	r24, Y+15	; 0x0f
    20fc:	98 89       	ldd	r25, Y+16	; 0x10
    20fe:	01 97       	sbiw	r24, 0x01	; 1
    2100:	f1 f7       	brne	.-4      	; 0x20fe <SevSeg2x1_VidCountDown+0x122>
    2102:	98 8b       	std	Y+16, r25	; 0x10
    2104:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
    2106:	88 a1       	ldd	r24, Y+32	; 0x20
    2108:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <SevSeg2x1_VidDisplayLeftDigit>
    210c:	80 e0       	ldi	r24, 0x00	; 0
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	a0 e2       	ldi	r26, 0x20	; 32
    2112:	b1 e4       	ldi	r27, 0x41	; 65
    2114:	8b 87       	std	Y+11, r24	; 0x0b
    2116:	9c 87       	std	Y+12, r25	; 0x0c
    2118:	ad 87       	std	Y+13, r26	; 0x0d
    211a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    211c:	6b 85       	ldd	r22, Y+11	; 0x0b
    211e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2120:	8d 85       	ldd	r24, Y+13	; 0x0d
    2122:	9e 85       	ldd	r25, Y+14	; 0x0e
    2124:	20 e0       	ldi	r18, 0x00	; 0
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	4a ef       	ldi	r20, 0xFA	; 250
    212a:	54 e4       	ldi	r21, 0x44	; 68
    212c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2130:	dc 01       	movw	r26, r24
    2132:	cb 01       	movw	r24, r22
    2134:	8f 83       	std	Y+7, r24	; 0x07
    2136:	98 87       	std	Y+8, r25	; 0x08
    2138:	a9 87       	std	Y+9, r26	; 0x09
    213a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    213c:	6f 81       	ldd	r22, Y+7	; 0x07
    213e:	78 85       	ldd	r23, Y+8	; 0x08
    2140:	89 85       	ldd	r24, Y+9	; 0x09
    2142:	9a 85       	ldd	r25, Y+10	; 0x0a
    2144:	20 e0       	ldi	r18, 0x00	; 0
    2146:	30 e0       	ldi	r19, 0x00	; 0
    2148:	40 e8       	ldi	r20, 0x80	; 128
    214a:	5f e3       	ldi	r21, 0x3F	; 63
    214c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2150:	88 23       	and	r24, r24
    2152:	2c f4       	brge	.+10     	; 0x215e <SevSeg2x1_VidCountDown+0x182>
		__ticks = 1;
    2154:	81 e0       	ldi	r24, 0x01	; 1
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	9e 83       	std	Y+6, r25	; 0x06
    215a:	8d 83       	std	Y+5, r24	; 0x05
    215c:	3f c0       	rjmp	.+126    	; 0x21dc <SevSeg2x1_VidCountDown+0x200>
	else if (__tmp > 65535)
    215e:	6f 81       	ldd	r22, Y+7	; 0x07
    2160:	78 85       	ldd	r23, Y+8	; 0x08
    2162:	89 85       	ldd	r24, Y+9	; 0x09
    2164:	9a 85       	ldd	r25, Y+10	; 0x0a
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	3f ef       	ldi	r19, 0xFF	; 255
    216a:	4f e7       	ldi	r20, 0x7F	; 127
    216c:	57 e4       	ldi	r21, 0x47	; 71
    216e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2172:	18 16       	cp	r1, r24
    2174:	4c f5       	brge	.+82     	; 0x21c8 <SevSeg2x1_VidCountDown+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2176:	6b 85       	ldd	r22, Y+11	; 0x0b
    2178:	7c 85       	ldd	r23, Y+12	; 0x0c
    217a:	8d 85       	ldd	r24, Y+13	; 0x0d
    217c:	9e 85       	ldd	r25, Y+14	; 0x0e
    217e:	20 e0       	ldi	r18, 0x00	; 0
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	40 e2       	ldi	r20, 0x20	; 32
    2184:	51 e4       	ldi	r21, 0x41	; 65
    2186:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    218a:	dc 01       	movw	r26, r24
    218c:	cb 01       	movw	r24, r22
    218e:	bc 01       	movw	r22, r24
    2190:	cd 01       	movw	r24, r26
    2192:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2196:	dc 01       	movw	r26, r24
    2198:	cb 01       	movw	r24, r22
    219a:	9e 83       	std	Y+6, r25	; 0x06
    219c:	8d 83       	std	Y+5, r24	; 0x05
    219e:	0f c0       	rjmp	.+30     	; 0x21be <SevSeg2x1_VidCountDown+0x1e2>
    21a0:	88 ec       	ldi	r24, 0xC8	; 200
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	9c 83       	std	Y+4, r25	; 0x04
    21a6:	8b 83       	std	Y+3, r24	; 0x03
    21a8:	8b 81       	ldd	r24, Y+3	; 0x03
    21aa:	9c 81       	ldd	r25, Y+4	; 0x04
    21ac:	01 97       	sbiw	r24, 0x01	; 1
    21ae:	f1 f7       	brne	.-4      	; 0x21ac <SevSeg2x1_VidCountDown+0x1d0>
    21b0:	9c 83       	std	Y+4, r25	; 0x04
    21b2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21b4:	8d 81       	ldd	r24, Y+5	; 0x05
    21b6:	9e 81       	ldd	r25, Y+6	; 0x06
    21b8:	01 97       	sbiw	r24, 0x01	; 1
    21ba:	9e 83       	std	Y+6, r25	; 0x06
    21bc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21be:	8d 81       	ldd	r24, Y+5	; 0x05
    21c0:	9e 81       	ldd	r25, Y+6	; 0x06
    21c2:	00 97       	sbiw	r24, 0x00	; 0
    21c4:	69 f7       	brne	.-38     	; 0x21a0 <SevSeg2x1_VidCountDown+0x1c4>
    21c6:	14 c0       	rjmp	.+40     	; 0x21f0 <SevSeg2x1_VidCountDown+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21c8:	6f 81       	ldd	r22, Y+7	; 0x07
    21ca:	78 85       	ldd	r23, Y+8	; 0x08
    21cc:	89 85       	ldd	r24, Y+9	; 0x09
    21ce:	9a 85       	ldd	r25, Y+10	; 0x0a
    21d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21d4:	dc 01       	movw	r26, r24
    21d6:	cb 01       	movw	r24, r22
    21d8:	9e 83       	std	Y+6, r25	; 0x06
    21da:	8d 83       	std	Y+5, r24	; 0x05
    21dc:	8d 81       	ldd	r24, Y+5	; 0x05
    21de:	9e 81       	ldd	r25, Y+6	; 0x06
    21e0:	9a 83       	std	Y+2, r25	; 0x02
    21e2:	89 83       	std	Y+1, r24	; 0x01
    21e4:	89 81       	ldd	r24, Y+1	; 0x01
    21e6:	9a 81       	ldd	r25, Y+2	; 0x02
    21e8:	01 97       	sbiw	r24, 0x01	; 1
    21ea:	f1 f7       	brne	.-4      	; 0x21e8 <SevSeg2x1_VidCountDown+0x20c>
    21ec:	9a 83       	std	Y+2, r25	; 0x02
    21ee:	89 83       	std	Y+1, r24	; 0x01
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
	{
		LOC_LeftDigit = LOC_Count /10;
		LOC_RightDigit = LOC_Count % 10;

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    21f0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21f2:	8f 5f       	subi	r24, 0xFF	; 255
    21f4:	8d 8f       	std	Y+29, r24	; 0x1d
    21f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    21f8:	8a 30       	cpi	r24, 0x0A	; 10
    21fa:	08 f4       	brcc	.+2      	; 0x21fe <SevSeg2x1_VidCountDown+0x222>
    21fc:	0f cf       	rjmp	.-482    	; 0x201c <SevSeg2x1_VidCountDown+0x40>

void SevSeg2x1_VidCountDown(u8 LOC_u8Start, u8 LOC_u8End)
{
	u8 LOC_LeftDigit = 0;
	u8 LOC_RightDigit = 0;
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
    21fe:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2200:	81 50       	subi	r24, 0x01	; 1
    2202:	8e 8f       	std	Y+30, r24	; 0x1e
    2204:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2206:	28 2f       	mov	r18, r24
    2208:	33 27       	eor	r19, r19
    220a:	27 fd       	sbrc	r18, 7
    220c:	30 95       	com	r19
    220e:	8a a1       	ldd	r24, Y+34	; 0x22
    2210:	88 2f       	mov	r24, r24
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	28 17       	cp	r18, r24
    2216:	39 07       	cpc	r19, r25
    2218:	0c f0       	brlt	.+2      	; 0x221c <SevSeg2x1_VidCountDown+0x240>
    221a:	f1 ce       	rjmp	.-542    	; 0x1ffe <SevSeg2x1_VidCountDown+0x22>
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
			_delay_ms(10);
		}
	}
}
    221c:	a2 96       	adiw	r28, 0x22	; 34
    221e:	0f b6       	in	r0, 0x3f	; 63
    2220:	f8 94       	cli
    2222:	de bf       	out	0x3e, r29	; 62
    2224:	0f be       	out	0x3f, r0	; 63
    2226:	cd bf       	out	0x3d, r28	; 61
    2228:	cf 91       	pop	r28
    222a:	df 91       	pop	r29
    222c:	08 95       	ret

0000222e <SevSeg2x1_VidLoading>:

void SevSeg2x1_VidLoading(u16 LOC_u8Speed)
{
    222e:	0f 93       	push	r16
    2230:	1f 93       	push	r17
    2232:	df 93       	push	r29
    2234:	cf 93       	push	r28
    2236:	cd b7       	in	r28, 0x3d	; 61
    2238:	de b7       	in	r29, 0x3e	; 62
    223a:	c2 57       	subi	r28, 0x72	; 114
    223c:	d0 40       	sbci	r29, 0x00	; 0
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	fe 01       	movw	r30, r28
    224a:	ef 58       	subi	r30, 0x8F	; 143
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	91 83       	std	Z+1, r25	; 0x01
    2250:	80 83       	st	Z, r24
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Enable); //enable Right Seven Segment
    2252:	81 e0       	ldi	r24, 0x01	; 1
    2254:	60 e0       	ldi	r22, 0x00	; 0
    2256:	41 e0       	ldi	r20, 0x01	; 1
    2258:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadA);
    225c:	82 e0       	ldi	r24, 0x02	; 2
    225e:	6e ef       	ldi	r22, 0xFE	; 254
    2260:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2264:	fe 01       	movw	r30, r28
    2266:	ef 58       	subi	r30, 0x8F	; 143
    2268:	ff 4f       	sbci	r31, 0xFF	; 255
    226a:	80 81       	ld	r24, Z
    226c:	91 81       	ldd	r25, Z+1	; 0x01
    226e:	cc 01       	movw	r24, r24
    2270:	a0 e0       	ldi	r26, 0x00	; 0
    2272:	b0 e0       	ldi	r27, 0x00	; 0
    2274:	bc 01       	movw	r22, r24
    2276:	cd 01       	movw	r24, r26
    2278:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    227c:	dc 01       	movw	r26, r24
    227e:	cb 01       	movw	r24, r22
    2280:	fe 01       	movw	r30, r28
    2282:	e3 59       	subi	r30, 0x93	; 147
    2284:	ff 4f       	sbci	r31, 0xFF	; 255
    2286:	80 83       	st	Z, r24
    2288:	91 83       	std	Z+1, r25	; 0x01
    228a:	a2 83       	std	Z+2, r26	; 0x02
    228c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    228e:	8e 01       	movw	r16, r28
    2290:	07 59       	subi	r16, 0x97	; 151
    2292:	1f 4f       	sbci	r17, 0xFF	; 255
    2294:	fe 01       	movw	r30, r28
    2296:	e3 59       	subi	r30, 0x93	; 147
    2298:	ff 4f       	sbci	r31, 0xFF	; 255
    229a:	60 81       	ld	r22, Z
    229c:	71 81       	ldd	r23, Z+1	; 0x01
    229e:	82 81       	ldd	r24, Z+2	; 0x02
    22a0:	93 81       	ldd	r25, Z+3	; 0x03
    22a2:	20 e0       	ldi	r18, 0x00	; 0
    22a4:	30 e0       	ldi	r19, 0x00	; 0
    22a6:	4a ef       	ldi	r20, 0xFA	; 250
    22a8:	54 e4       	ldi	r21, 0x44	; 68
    22aa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22ae:	dc 01       	movw	r26, r24
    22b0:	cb 01       	movw	r24, r22
    22b2:	f8 01       	movw	r30, r16
    22b4:	80 83       	st	Z, r24
    22b6:	91 83       	std	Z+1, r25	; 0x01
    22b8:	a2 83       	std	Z+2, r26	; 0x02
    22ba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22bc:	fe 01       	movw	r30, r28
    22be:	e7 59       	subi	r30, 0x97	; 151
    22c0:	ff 4f       	sbci	r31, 0xFF	; 255
    22c2:	60 81       	ld	r22, Z
    22c4:	71 81       	ldd	r23, Z+1	; 0x01
    22c6:	82 81       	ldd	r24, Z+2	; 0x02
    22c8:	93 81       	ldd	r25, Z+3	; 0x03
    22ca:	20 e0       	ldi	r18, 0x00	; 0
    22cc:	30 e0       	ldi	r19, 0x00	; 0
    22ce:	40 e8       	ldi	r20, 0x80	; 128
    22d0:	5f e3       	ldi	r21, 0x3F	; 63
    22d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22d6:	88 23       	and	r24, r24
    22d8:	44 f4       	brge	.+16     	; 0x22ea <SevSeg2x1_VidLoading+0xbc>
		__ticks = 1;
    22da:	fe 01       	movw	r30, r28
    22dc:	e9 59       	subi	r30, 0x99	; 153
    22de:	ff 4f       	sbci	r31, 0xFF	; 255
    22e0:	81 e0       	ldi	r24, 0x01	; 1
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	91 83       	std	Z+1, r25	; 0x01
    22e6:	80 83       	st	Z, r24
    22e8:	64 c0       	rjmp	.+200    	; 0x23b2 <SevSeg2x1_VidLoading+0x184>
	else if (__tmp > 65535)
    22ea:	fe 01       	movw	r30, r28
    22ec:	e7 59       	subi	r30, 0x97	; 151
    22ee:	ff 4f       	sbci	r31, 0xFF	; 255
    22f0:	60 81       	ld	r22, Z
    22f2:	71 81       	ldd	r23, Z+1	; 0x01
    22f4:	82 81       	ldd	r24, Z+2	; 0x02
    22f6:	93 81       	ldd	r25, Z+3	; 0x03
    22f8:	20 e0       	ldi	r18, 0x00	; 0
    22fa:	3f ef       	ldi	r19, 0xFF	; 255
    22fc:	4f e7       	ldi	r20, 0x7F	; 127
    22fe:	57 e4       	ldi	r21, 0x47	; 71
    2300:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2304:	18 16       	cp	r1, r24
    2306:	0c f0       	brlt	.+2      	; 0x230a <SevSeg2x1_VidLoading+0xdc>
    2308:	43 c0       	rjmp	.+134    	; 0x2390 <SevSeg2x1_VidLoading+0x162>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    230a:	fe 01       	movw	r30, r28
    230c:	e3 59       	subi	r30, 0x93	; 147
    230e:	ff 4f       	sbci	r31, 0xFF	; 255
    2310:	60 81       	ld	r22, Z
    2312:	71 81       	ldd	r23, Z+1	; 0x01
    2314:	82 81       	ldd	r24, Z+2	; 0x02
    2316:	93 81       	ldd	r25, Z+3	; 0x03
    2318:	20 e0       	ldi	r18, 0x00	; 0
    231a:	30 e0       	ldi	r19, 0x00	; 0
    231c:	40 e2       	ldi	r20, 0x20	; 32
    231e:	51 e4       	ldi	r21, 0x41	; 65
    2320:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2324:	dc 01       	movw	r26, r24
    2326:	cb 01       	movw	r24, r22
    2328:	8e 01       	movw	r16, r28
    232a:	09 59       	subi	r16, 0x99	; 153
    232c:	1f 4f       	sbci	r17, 0xFF	; 255
    232e:	bc 01       	movw	r22, r24
    2330:	cd 01       	movw	r24, r26
    2332:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2336:	dc 01       	movw	r26, r24
    2338:	cb 01       	movw	r24, r22
    233a:	f8 01       	movw	r30, r16
    233c:	91 83       	std	Z+1, r25	; 0x01
    233e:	80 83       	st	Z, r24
    2340:	1f c0       	rjmp	.+62     	; 0x2380 <SevSeg2x1_VidLoading+0x152>
    2342:	fe 01       	movw	r30, r28
    2344:	eb 59       	subi	r30, 0x9B	; 155
    2346:	ff 4f       	sbci	r31, 0xFF	; 255
    2348:	88 ec       	ldi	r24, 0xC8	; 200
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	91 83       	std	Z+1, r25	; 0x01
    234e:	80 83       	st	Z, r24
    2350:	fe 01       	movw	r30, r28
    2352:	eb 59       	subi	r30, 0x9B	; 155
    2354:	ff 4f       	sbci	r31, 0xFF	; 255
    2356:	80 81       	ld	r24, Z
    2358:	91 81       	ldd	r25, Z+1	; 0x01
    235a:	01 97       	sbiw	r24, 0x01	; 1
    235c:	f1 f7       	brne	.-4      	; 0x235a <SevSeg2x1_VidLoading+0x12c>
    235e:	fe 01       	movw	r30, r28
    2360:	eb 59       	subi	r30, 0x9B	; 155
    2362:	ff 4f       	sbci	r31, 0xFF	; 255
    2364:	91 83       	std	Z+1, r25	; 0x01
    2366:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2368:	de 01       	movw	r26, r28
    236a:	a9 59       	subi	r26, 0x99	; 153
    236c:	bf 4f       	sbci	r27, 0xFF	; 255
    236e:	fe 01       	movw	r30, r28
    2370:	e9 59       	subi	r30, 0x99	; 153
    2372:	ff 4f       	sbci	r31, 0xFF	; 255
    2374:	80 81       	ld	r24, Z
    2376:	91 81       	ldd	r25, Z+1	; 0x01
    2378:	01 97       	sbiw	r24, 0x01	; 1
    237a:	11 96       	adiw	r26, 0x01	; 1
    237c:	9c 93       	st	X, r25
    237e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2380:	fe 01       	movw	r30, r28
    2382:	e9 59       	subi	r30, 0x99	; 153
    2384:	ff 4f       	sbci	r31, 0xFF	; 255
    2386:	80 81       	ld	r24, Z
    2388:	91 81       	ldd	r25, Z+1	; 0x01
    238a:	00 97       	sbiw	r24, 0x00	; 0
    238c:	d1 f6       	brne	.-76     	; 0x2342 <SevSeg2x1_VidLoading+0x114>
    238e:	27 c0       	rjmp	.+78     	; 0x23de <SevSeg2x1_VidLoading+0x1b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2390:	8e 01       	movw	r16, r28
    2392:	09 59       	subi	r16, 0x99	; 153
    2394:	1f 4f       	sbci	r17, 0xFF	; 255
    2396:	fe 01       	movw	r30, r28
    2398:	e7 59       	subi	r30, 0x97	; 151
    239a:	ff 4f       	sbci	r31, 0xFF	; 255
    239c:	60 81       	ld	r22, Z
    239e:	71 81       	ldd	r23, Z+1	; 0x01
    23a0:	82 81       	ldd	r24, Z+2	; 0x02
    23a2:	93 81       	ldd	r25, Z+3	; 0x03
    23a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23a8:	dc 01       	movw	r26, r24
    23aa:	cb 01       	movw	r24, r22
    23ac:	f8 01       	movw	r30, r16
    23ae:	91 83       	std	Z+1, r25	; 0x01
    23b0:	80 83       	st	Z, r24
    23b2:	de 01       	movw	r26, r28
    23b4:	ad 59       	subi	r26, 0x9D	; 157
    23b6:	bf 4f       	sbci	r27, 0xFF	; 255
    23b8:	fe 01       	movw	r30, r28
    23ba:	e9 59       	subi	r30, 0x99	; 153
    23bc:	ff 4f       	sbci	r31, 0xFF	; 255
    23be:	80 81       	ld	r24, Z
    23c0:	91 81       	ldd	r25, Z+1	; 0x01
    23c2:	8d 93       	st	X+, r24
    23c4:	9c 93       	st	X, r25
    23c6:	fe 01       	movw	r30, r28
    23c8:	ed 59       	subi	r30, 0x9D	; 157
    23ca:	ff 4f       	sbci	r31, 0xFF	; 255
    23cc:	80 81       	ld	r24, Z
    23ce:	91 81       	ldd	r25, Z+1	; 0x01
    23d0:	01 97       	sbiw	r24, 0x01	; 1
    23d2:	f1 f7       	brne	.-4      	; 0x23d0 <SevSeg2x1_VidLoading+0x1a2>
    23d4:	fe 01       	movw	r30, r28
    23d6:	ed 59       	subi	r30, 0x9D	; 157
    23d8:	ff 4f       	sbci	r31, 0xFF	; 255
    23da:	91 83       	std	Z+1, r25	; 0x01
    23dc:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadB);
    23de:	82 e0       	ldi	r24, 0x02	; 2
    23e0:	6d ef       	ldi	r22, 0xFD	; 253
    23e2:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    23e6:	fe 01       	movw	r30, r28
    23e8:	ef 58       	subi	r30, 0x8F	; 143
    23ea:	ff 4f       	sbci	r31, 0xFF	; 255
    23ec:	80 81       	ld	r24, Z
    23ee:	91 81       	ldd	r25, Z+1	; 0x01
    23f0:	cc 01       	movw	r24, r24
    23f2:	a0 e0       	ldi	r26, 0x00	; 0
    23f4:	b0 e0       	ldi	r27, 0x00	; 0
    23f6:	bc 01       	movw	r22, r24
    23f8:	cd 01       	movw	r24, r26
    23fa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    23fe:	dc 01       	movw	r26, r24
    2400:	cb 01       	movw	r24, r22
    2402:	fe 01       	movw	r30, r28
    2404:	e1 5a       	subi	r30, 0xA1	; 161
    2406:	ff 4f       	sbci	r31, 0xFF	; 255
    2408:	80 83       	st	Z, r24
    240a:	91 83       	std	Z+1, r25	; 0x01
    240c:	a2 83       	std	Z+2, r26	; 0x02
    240e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2410:	8e 01       	movw	r16, r28
    2412:	05 5a       	subi	r16, 0xA5	; 165
    2414:	1f 4f       	sbci	r17, 0xFF	; 255
    2416:	fe 01       	movw	r30, r28
    2418:	e1 5a       	subi	r30, 0xA1	; 161
    241a:	ff 4f       	sbci	r31, 0xFF	; 255
    241c:	60 81       	ld	r22, Z
    241e:	71 81       	ldd	r23, Z+1	; 0x01
    2420:	82 81       	ldd	r24, Z+2	; 0x02
    2422:	93 81       	ldd	r25, Z+3	; 0x03
    2424:	20 e0       	ldi	r18, 0x00	; 0
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	4a ef       	ldi	r20, 0xFA	; 250
    242a:	54 e4       	ldi	r21, 0x44	; 68
    242c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2430:	dc 01       	movw	r26, r24
    2432:	cb 01       	movw	r24, r22
    2434:	f8 01       	movw	r30, r16
    2436:	80 83       	st	Z, r24
    2438:	91 83       	std	Z+1, r25	; 0x01
    243a:	a2 83       	std	Z+2, r26	; 0x02
    243c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    243e:	fe 01       	movw	r30, r28
    2440:	e5 5a       	subi	r30, 0xA5	; 165
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	60 81       	ld	r22, Z
    2446:	71 81       	ldd	r23, Z+1	; 0x01
    2448:	82 81       	ldd	r24, Z+2	; 0x02
    244a:	93 81       	ldd	r25, Z+3	; 0x03
    244c:	20 e0       	ldi	r18, 0x00	; 0
    244e:	30 e0       	ldi	r19, 0x00	; 0
    2450:	40 e8       	ldi	r20, 0x80	; 128
    2452:	5f e3       	ldi	r21, 0x3F	; 63
    2454:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2458:	88 23       	and	r24, r24
    245a:	44 f4       	brge	.+16     	; 0x246c <SevSeg2x1_VidLoading+0x23e>
		__ticks = 1;
    245c:	fe 01       	movw	r30, r28
    245e:	e7 5a       	subi	r30, 0xA7	; 167
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	81 e0       	ldi	r24, 0x01	; 1
    2464:	90 e0       	ldi	r25, 0x00	; 0
    2466:	91 83       	std	Z+1, r25	; 0x01
    2468:	80 83       	st	Z, r24
    246a:	64 c0       	rjmp	.+200    	; 0x2534 <SevSeg2x1_VidLoading+0x306>
	else if (__tmp > 65535)
    246c:	fe 01       	movw	r30, r28
    246e:	e5 5a       	subi	r30, 0xA5	; 165
    2470:	ff 4f       	sbci	r31, 0xFF	; 255
    2472:	60 81       	ld	r22, Z
    2474:	71 81       	ldd	r23, Z+1	; 0x01
    2476:	82 81       	ldd	r24, Z+2	; 0x02
    2478:	93 81       	ldd	r25, Z+3	; 0x03
    247a:	20 e0       	ldi	r18, 0x00	; 0
    247c:	3f ef       	ldi	r19, 0xFF	; 255
    247e:	4f e7       	ldi	r20, 0x7F	; 127
    2480:	57 e4       	ldi	r21, 0x47	; 71
    2482:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2486:	18 16       	cp	r1, r24
    2488:	0c f0       	brlt	.+2      	; 0x248c <SevSeg2x1_VidLoading+0x25e>
    248a:	43 c0       	rjmp	.+134    	; 0x2512 <SevSeg2x1_VidLoading+0x2e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    248c:	fe 01       	movw	r30, r28
    248e:	e1 5a       	subi	r30, 0xA1	; 161
    2490:	ff 4f       	sbci	r31, 0xFF	; 255
    2492:	60 81       	ld	r22, Z
    2494:	71 81       	ldd	r23, Z+1	; 0x01
    2496:	82 81       	ldd	r24, Z+2	; 0x02
    2498:	93 81       	ldd	r25, Z+3	; 0x03
    249a:	20 e0       	ldi	r18, 0x00	; 0
    249c:	30 e0       	ldi	r19, 0x00	; 0
    249e:	40 e2       	ldi	r20, 0x20	; 32
    24a0:	51 e4       	ldi	r21, 0x41	; 65
    24a2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24a6:	dc 01       	movw	r26, r24
    24a8:	cb 01       	movw	r24, r22
    24aa:	8e 01       	movw	r16, r28
    24ac:	07 5a       	subi	r16, 0xA7	; 167
    24ae:	1f 4f       	sbci	r17, 0xFF	; 255
    24b0:	bc 01       	movw	r22, r24
    24b2:	cd 01       	movw	r24, r26
    24b4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24b8:	dc 01       	movw	r26, r24
    24ba:	cb 01       	movw	r24, r22
    24bc:	f8 01       	movw	r30, r16
    24be:	91 83       	std	Z+1, r25	; 0x01
    24c0:	80 83       	st	Z, r24
    24c2:	1f c0       	rjmp	.+62     	; 0x2502 <SevSeg2x1_VidLoading+0x2d4>
    24c4:	fe 01       	movw	r30, r28
    24c6:	e9 5a       	subi	r30, 0xA9	; 169
    24c8:	ff 4f       	sbci	r31, 0xFF	; 255
    24ca:	88 ec       	ldi	r24, 0xC8	; 200
    24cc:	90 e0       	ldi	r25, 0x00	; 0
    24ce:	91 83       	std	Z+1, r25	; 0x01
    24d0:	80 83       	st	Z, r24
    24d2:	fe 01       	movw	r30, r28
    24d4:	e9 5a       	subi	r30, 0xA9	; 169
    24d6:	ff 4f       	sbci	r31, 0xFF	; 255
    24d8:	80 81       	ld	r24, Z
    24da:	91 81       	ldd	r25, Z+1	; 0x01
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	f1 f7       	brne	.-4      	; 0x24dc <SevSeg2x1_VidLoading+0x2ae>
    24e0:	fe 01       	movw	r30, r28
    24e2:	e9 5a       	subi	r30, 0xA9	; 169
    24e4:	ff 4f       	sbci	r31, 0xFF	; 255
    24e6:	91 83       	std	Z+1, r25	; 0x01
    24e8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24ea:	de 01       	movw	r26, r28
    24ec:	a7 5a       	subi	r26, 0xA7	; 167
    24ee:	bf 4f       	sbci	r27, 0xFF	; 255
    24f0:	fe 01       	movw	r30, r28
    24f2:	e7 5a       	subi	r30, 0xA7	; 167
    24f4:	ff 4f       	sbci	r31, 0xFF	; 255
    24f6:	80 81       	ld	r24, Z
    24f8:	91 81       	ldd	r25, Z+1	; 0x01
    24fa:	01 97       	sbiw	r24, 0x01	; 1
    24fc:	11 96       	adiw	r26, 0x01	; 1
    24fe:	9c 93       	st	X, r25
    2500:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2502:	fe 01       	movw	r30, r28
    2504:	e7 5a       	subi	r30, 0xA7	; 167
    2506:	ff 4f       	sbci	r31, 0xFF	; 255
    2508:	80 81       	ld	r24, Z
    250a:	91 81       	ldd	r25, Z+1	; 0x01
    250c:	00 97       	sbiw	r24, 0x00	; 0
    250e:	d1 f6       	brne	.-76     	; 0x24c4 <SevSeg2x1_VidLoading+0x296>
    2510:	27 c0       	rjmp	.+78     	; 0x2560 <SevSeg2x1_VidLoading+0x332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2512:	8e 01       	movw	r16, r28
    2514:	07 5a       	subi	r16, 0xA7	; 167
    2516:	1f 4f       	sbci	r17, 0xFF	; 255
    2518:	fe 01       	movw	r30, r28
    251a:	e5 5a       	subi	r30, 0xA5	; 165
    251c:	ff 4f       	sbci	r31, 0xFF	; 255
    251e:	60 81       	ld	r22, Z
    2520:	71 81       	ldd	r23, Z+1	; 0x01
    2522:	82 81       	ldd	r24, Z+2	; 0x02
    2524:	93 81       	ldd	r25, Z+3	; 0x03
    2526:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    252a:	dc 01       	movw	r26, r24
    252c:	cb 01       	movw	r24, r22
    252e:	f8 01       	movw	r30, r16
    2530:	91 83       	std	Z+1, r25	; 0x01
    2532:	80 83       	st	Z, r24
    2534:	de 01       	movw	r26, r28
    2536:	ab 5a       	subi	r26, 0xAB	; 171
    2538:	bf 4f       	sbci	r27, 0xFF	; 255
    253a:	fe 01       	movw	r30, r28
    253c:	e7 5a       	subi	r30, 0xA7	; 167
    253e:	ff 4f       	sbci	r31, 0xFF	; 255
    2540:	80 81       	ld	r24, Z
    2542:	91 81       	ldd	r25, Z+1	; 0x01
    2544:	8d 93       	st	X+, r24
    2546:	9c 93       	st	X, r25
    2548:	fe 01       	movw	r30, r28
    254a:	eb 5a       	subi	r30, 0xAB	; 171
    254c:	ff 4f       	sbci	r31, 0xFF	; 255
    254e:	80 81       	ld	r24, Z
    2550:	91 81       	ldd	r25, Z+1	; 0x01
    2552:	01 97       	sbiw	r24, 0x01	; 1
    2554:	f1 f7       	brne	.-4      	; 0x2552 <SevSeg2x1_VidLoading+0x324>
    2556:	fe 01       	movw	r30, r28
    2558:	eb 5a       	subi	r30, 0xAB	; 171
    255a:	ff 4f       	sbci	r31, 0xFF	; 255
    255c:	91 83       	std	Z+1, r25	; 0x01
    255e:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadC);
    2560:	82 e0       	ldi	r24, 0x02	; 2
    2562:	6b ef       	ldi	r22, 0xFB	; 251
    2564:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2568:	fe 01       	movw	r30, r28
    256a:	ef 58       	subi	r30, 0x8F	; 143
    256c:	ff 4f       	sbci	r31, 0xFF	; 255
    256e:	80 81       	ld	r24, Z
    2570:	91 81       	ldd	r25, Z+1	; 0x01
    2572:	cc 01       	movw	r24, r24
    2574:	a0 e0       	ldi	r26, 0x00	; 0
    2576:	b0 e0       	ldi	r27, 0x00	; 0
    2578:	bc 01       	movw	r22, r24
    257a:	cd 01       	movw	r24, r26
    257c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2580:	dc 01       	movw	r26, r24
    2582:	cb 01       	movw	r24, r22
    2584:	fe 01       	movw	r30, r28
    2586:	ef 5a       	subi	r30, 0xAF	; 175
    2588:	ff 4f       	sbci	r31, 0xFF	; 255
    258a:	80 83       	st	Z, r24
    258c:	91 83       	std	Z+1, r25	; 0x01
    258e:	a2 83       	std	Z+2, r26	; 0x02
    2590:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2592:	8e 01       	movw	r16, r28
    2594:	03 5b       	subi	r16, 0xB3	; 179
    2596:	1f 4f       	sbci	r17, 0xFF	; 255
    2598:	fe 01       	movw	r30, r28
    259a:	ef 5a       	subi	r30, 0xAF	; 175
    259c:	ff 4f       	sbci	r31, 0xFF	; 255
    259e:	60 81       	ld	r22, Z
    25a0:	71 81       	ldd	r23, Z+1	; 0x01
    25a2:	82 81       	ldd	r24, Z+2	; 0x02
    25a4:	93 81       	ldd	r25, Z+3	; 0x03
    25a6:	20 e0       	ldi	r18, 0x00	; 0
    25a8:	30 e0       	ldi	r19, 0x00	; 0
    25aa:	4a ef       	ldi	r20, 0xFA	; 250
    25ac:	54 e4       	ldi	r21, 0x44	; 68
    25ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25b2:	dc 01       	movw	r26, r24
    25b4:	cb 01       	movw	r24, r22
    25b6:	f8 01       	movw	r30, r16
    25b8:	80 83       	st	Z, r24
    25ba:	91 83       	std	Z+1, r25	; 0x01
    25bc:	a2 83       	std	Z+2, r26	; 0x02
    25be:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25c0:	fe 01       	movw	r30, r28
    25c2:	e3 5b       	subi	r30, 0xB3	; 179
    25c4:	ff 4f       	sbci	r31, 0xFF	; 255
    25c6:	60 81       	ld	r22, Z
    25c8:	71 81       	ldd	r23, Z+1	; 0x01
    25ca:	82 81       	ldd	r24, Z+2	; 0x02
    25cc:	93 81       	ldd	r25, Z+3	; 0x03
    25ce:	20 e0       	ldi	r18, 0x00	; 0
    25d0:	30 e0       	ldi	r19, 0x00	; 0
    25d2:	40 e8       	ldi	r20, 0x80	; 128
    25d4:	5f e3       	ldi	r21, 0x3F	; 63
    25d6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25da:	88 23       	and	r24, r24
    25dc:	44 f4       	brge	.+16     	; 0x25ee <SevSeg2x1_VidLoading+0x3c0>
		__ticks = 1;
    25de:	fe 01       	movw	r30, r28
    25e0:	e5 5b       	subi	r30, 0xB5	; 181
    25e2:	ff 4f       	sbci	r31, 0xFF	; 255
    25e4:	81 e0       	ldi	r24, 0x01	; 1
    25e6:	90 e0       	ldi	r25, 0x00	; 0
    25e8:	91 83       	std	Z+1, r25	; 0x01
    25ea:	80 83       	st	Z, r24
    25ec:	64 c0       	rjmp	.+200    	; 0x26b6 <SevSeg2x1_VidLoading+0x488>
	else if (__tmp > 65535)
    25ee:	fe 01       	movw	r30, r28
    25f0:	e3 5b       	subi	r30, 0xB3	; 179
    25f2:	ff 4f       	sbci	r31, 0xFF	; 255
    25f4:	60 81       	ld	r22, Z
    25f6:	71 81       	ldd	r23, Z+1	; 0x01
    25f8:	82 81       	ldd	r24, Z+2	; 0x02
    25fa:	93 81       	ldd	r25, Z+3	; 0x03
    25fc:	20 e0       	ldi	r18, 0x00	; 0
    25fe:	3f ef       	ldi	r19, 0xFF	; 255
    2600:	4f e7       	ldi	r20, 0x7F	; 127
    2602:	57 e4       	ldi	r21, 0x47	; 71
    2604:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2608:	18 16       	cp	r1, r24
    260a:	0c f0       	brlt	.+2      	; 0x260e <SevSeg2x1_VidLoading+0x3e0>
    260c:	43 c0       	rjmp	.+134    	; 0x2694 <SevSeg2x1_VidLoading+0x466>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    260e:	fe 01       	movw	r30, r28
    2610:	ef 5a       	subi	r30, 0xAF	; 175
    2612:	ff 4f       	sbci	r31, 0xFF	; 255
    2614:	60 81       	ld	r22, Z
    2616:	71 81       	ldd	r23, Z+1	; 0x01
    2618:	82 81       	ldd	r24, Z+2	; 0x02
    261a:	93 81       	ldd	r25, Z+3	; 0x03
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	40 e2       	ldi	r20, 0x20	; 32
    2622:	51 e4       	ldi	r21, 0x41	; 65
    2624:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2628:	dc 01       	movw	r26, r24
    262a:	cb 01       	movw	r24, r22
    262c:	8e 01       	movw	r16, r28
    262e:	05 5b       	subi	r16, 0xB5	; 181
    2630:	1f 4f       	sbci	r17, 0xFF	; 255
    2632:	bc 01       	movw	r22, r24
    2634:	cd 01       	movw	r24, r26
    2636:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    263a:	dc 01       	movw	r26, r24
    263c:	cb 01       	movw	r24, r22
    263e:	f8 01       	movw	r30, r16
    2640:	91 83       	std	Z+1, r25	; 0x01
    2642:	80 83       	st	Z, r24
    2644:	1f c0       	rjmp	.+62     	; 0x2684 <SevSeg2x1_VidLoading+0x456>
    2646:	fe 01       	movw	r30, r28
    2648:	e7 5b       	subi	r30, 0xB7	; 183
    264a:	ff 4f       	sbci	r31, 0xFF	; 255
    264c:	88 ec       	ldi	r24, 0xC8	; 200
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	91 83       	std	Z+1, r25	; 0x01
    2652:	80 83       	st	Z, r24
    2654:	fe 01       	movw	r30, r28
    2656:	e7 5b       	subi	r30, 0xB7	; 183
    2658:	ff 4f       	sbci	r31, 0xFF	; 255
    265a:	80 81       	ld	r24, Z
    265c:	91 81       	ldd	r25, Z+1	; 0x01
    265e:	01 97       	sbiw	r24, 0x01	; 1
    2660:	f1 f7       	brne	.-4      	; 0x265e <SevSeg2x1_VidLoading+0x430>
    2662:	fe 01       	movw	r30, r28
    2664:	e7 5b       	subi	r30, 0xB7	; 183
    2666:	ff 4f       	sbci	r31, 0xFF	; 255
    2668:	91 83       	std	Z+1, r25	; 0x01
    266a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    266c:	de 01       	movw	r26, r28
    266e:	a5 5b       	subi	r26, 0xB5	; 181
    2670:	bf 4f       	sbci	r27, 0xFF	; 255
    2672:	fe 01       	movw	r30, r28
    2674:	e5 5b       	subi	r30, 0xB5	; 181
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	80 81       	ld	r24, Z
    267a:	91 81       	ldd	r25, Z+1	; 0x01
    267c:	01 97       	sbiw	r24, 0x01	; 1
    267e:	11 96       	adiw	r26, 0x01	; 1
    2680:	9c 93       	st	X, r25
    2682:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2684:	fe 01       	movw	r30, r28
    2686:	e5 5b       	subi	r30, 0xB5	; 181
    2688:	ff 4f       	sbci	r31, 0xFF	; 255
    268a:	80 81       	ld	r24, Z
    268c:	91 81       	ldd	r25, Z+1	; 0x01
    268e:	00 97       	sbiw	r24, 0x00	; 0
    2690:	d1 f6       	brne	.-76     	; 0x2646 <SevSeg2x1_VidLoading+0x418>
    2692:	27 c0       	rjmp	.+78     	; 0x26e2 <SevSeg2x1_VidLoading+0x4b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2694:	8e 01       	movw	r16, r28
    2696:	05 5b       	subi	r16, 0xB5	; 181
    2698:	1f 4f       	sbci	r17, 0xFF	; 255
    269a:	fe 01       	movw	r30, r28
    269c:	e3 5b       	subi	r30, 0xB3	; 179
    269e:	ff 4f       	sbci	r31, 0xFF	; 255
    26a0:	60 81       	ld	r22, Z
    26a2:	71 81       	ldd	r23, Z+1	; 0x01
    26a4:	82 81       	ldd	r24, Z+2	; 0x02
    26a6:	93 81       	ldd	r25, Z+3	; 0x03
    26a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ac:	dc 01       	movw	r26, r24
    26ae:	cb 01       	movw	r24, r22
    26b0:	f8 01       	movw	r30, r16
    26b2:	91 83       	std	Z+1, r25	; 0x01
    26b4:	80 83       	st	Z, r24
    26b6:	de 01       	movw	r26, r28
    26b8:	a9 5b       	subi	r26, 0xB9	; 185
    26ba:	bf 4f       	sbci	r27, 0xFF	; 255
    26bc:	fe 01       	movw	r30, r28
    26be:	e5 5b       	subi	r30, 0xB5	; 181
    26c0:	ff 4f       	sbci	r31, 0xFF	; 255
    26c2:	80 81       	ld	r24, Z
    26c4:	91 81       	ldd	r25, Z+1	; 0x01
    26c6:	8d 93       	st	X+, r24
    26c8:	9c 93       	st	X, r25
    26ca:	fe 01       	movw	r30, r28
    26cc:	e9 5b       	subi	r30, 0xB9	; 185
    26ce:	ff 4f       	sbci	r31, 0xFF	; 255
    26d0:	80 81       	ld	r24, Z
    26d2:	91 81       	ldd	r25, Z+1	; 0x01
    26d4:	01 97       	sbiw	r24, 0x01	; 1
    26d6:	f1 f7       	brne	.-4      	; 0x26d4 <SevSeg2x1_VidLoading+0x4a6>
    26d8:	fe 01       	movw	r30, r28
    26da:	e9 5b       	subi	r30, 0xB9	; 185
    26dc:	ff 4f       	sbci	r31, 0xFF	; 255
    26de:	91 83       	std	Z+1, r25	; 0x01
    26e0:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadD);
    26e2:	82 e0       	ldi	r24, 0x02	; 2
    26e4:	67 ef       	ldi	r22, 0xF7	; 247
    26e6:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    26ea:	fe 01       	movw	r30, r28
    26ec:	ef 58       	subi	r30, 0x8F	; 143
    26ee:	ff 4f       	sbci	r31, 0xFF	; 255
    26f0:	80 81       	ld	r24, Z
    26f2:	91 81       	ldd	r25, Z+1	; 0x01
    26f4:	cc 01       	movw	r24, r24
    26f6:	a0 e0       	ldi	r26, 0x00	; 0
    26f8:	b0 e0       	ldi	r27, 0x00	; 0
    26fa:	bc 01       	movw	r22, r24
    26fc:	cd 01       	movw	r24, r26
    26fe:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2702:	dc 01       	movw	r26, r24
    2704:	cb 01       	movw	r24, r22
    2706:	fe 01       	movw	r30, r28
    2708:	ed 5b       	subi	r30, 0xBD	; 189
    270a:	ff 4f       	sbci	r31, 0xFF	; 255
    270c:	80 83       	st	Z, r24
    270e:	91 83       	std	Z+1, r25	; 0x01
    2710:	a2 83       	std	Z+2, r26	; 0x02
    2712:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2714:	8e 01       	movw	r16, r28
    2716:	01 5c       	subi	r16, 0xC1	; 193
    2718:	1f 4f       	sbci	r17, 0xFF	; 255
    271a:	fe 01       	movw	r30, r28
    271c:	ed 5b       	subi	r30, 0xBD	; 189
    271e:	ff 4f       	sbci	r31, 0xFF	; 255
    2720:	60 81       	ld	r22, Z
    2722:	71 81       	ldd	r23, Z+1	; 0x01
    2724:	82 81       	ldd	r24, Z+2	; 0x02
    2726:	93 81       	ldd	r25, Z+3	; 0x03
    2728:	20 e0       	ldi	r18, 0x00	; 0
    272a:	30 e0       	ldi	r19, 0x00	; 0
    272c:	4a ef       	ldi	r20, 0xFA	; 250
    272e:	54 e4       	ldi	r21, 0x44	; 68
    2730:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2734:	dc 01       	movw	r26, r24
    2736:	cb 01       	movw	r24, r22
    2738:	f8 01       	movw	r30, r16
    273a:	80 83       	st	Z, r24
    273c:	91 83       	std	Z+1, r25	; 0x01
    273e:	a2 83       	std	Z+2, r26	; 0x02
    2740:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2742:	fe 01       	movw	r30, r28
    2744:	ff 96       	adiw	r30, 0x3f	; 63
    2746:	60 81       	ld	r22, Z
    2748:	71 81       	ldd	r23, Z+1	; 0x01
    274a:	82 81       	ldd	r24, Z+2	; 0x02
    274c:	93 81       	ldd	r25, Z+3	; 0x03
    274e:	20 e0       	ldi	r18, 0x00	; 0
    2750:	30 e0       	ldi	r19, 0x00	; 0
    2752:	40 e8       	ldi	r20, 0x80	; 128
    2754:	5f e3       	ldi	r21, 0x3F	; 63
    2756:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    275a:	88 23       	and	r24, r24
    275c:	2c f4       	brge	.+10     	; 0x2768 <SevSeg2x1_VidLoading+0x53a>
		__ticks = 1;
    275e:	81 e0       	ldi	r24, 0x01	; 1
    2760:	90 e0       	ldi	r25, 0x00	; 0
    2762:	9e af       	std	Y+62, r25	; 0x3e
    2764:	8d af       	std	Y+61, r24	; 0x3d
    2766:	46 c0       	rjmp	.+140    	; 0x27f4 <SevSeg2x1_VidLoading+0x5c6>
	else if (__tmp > 65535)
    2768:	fe 01       	movw	r30, r28
    276a:	ff 96       	adiw	r30, 0x3f	; 63
    276c:	60 81       	ld	r22, Z
    276e:	71 81       	ldd	r23, Z+1	; 0x01
    2770:	82 81       	ldd	r24, Z+2	; 0x02
    2772:	93 81       	ldd	r25, Z+3	; 0x03
    2774:	20 e0       	ldi	r18, 0x00	; 0
    2776:	3f ef       	ldi	r19, 0xFF	; 255
    2778:	4f e7       	ldi	r20, 0x7F	; 127
    277a:	57 e4       	ldi	r21, 0x47	; 71
    277c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2780:	18 16       	cp	r1, r24
    2782:	64 f5       	brge	.+88     	; 0x27dc <SevSeg2x1_VidLoading+0x5ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2784:	fe 01       	movw	r30, r28
    2786:	ed 5b       	subi	r30, 0xBD	; 189
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	60 81       	ld	r22, Z
    278c:	71 81       	ldd	r23, Z+1	; 0x01
    278e:	82 81       	ldd	r24, Z+2	; 0x02
    2790:	93 81       	ldd	r25, Z+3	; 0x03
    2792:	20 e0       	ldi	r18, 0x00	; 0
    2794:	30 e0       	ldi	r19, 0x00	; 0
    2796:	40 e2       	ldi	r20, 0x20	; 32
    2798:	51 e4       	ldi	r21, 0x41	; 65
    279a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    279e:	dc 01       	movw	r26, r24
    27a0:	cb 01       	movw	r24, r22
    27a2:	bc 01       	movw	r22, r24
    27a4:	cd 01       	movw	r24, r26
    27a6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27aa:	dc 01       	movw	r26, r24
    27ac:	cb 01       	movw	r24, r22
    27ae:	9e af       	std	Y+62, r25	; 0x3e
    27b0:	8d af       	std	Y+61, r24	; 0x3d
    27b2:	0f c0       	rjmp	.+30     	; 0x27d2 <SevSeg2x1_VidLoading+0x5a4>
    27b4:	88 ec       	ldi	r24, 0xC8	; 200
    27b6:	90 e0       	ldi	r25, 0x00	; 0
    27b8:	9c af       	std	Y+60, r25	; 0x3c
    27ba:	8b af       	std	Y+59, r24	; 0x3b
    27bc:	8b ad       	ldd	r24, Y+59	; 0x3b
    27be:	9c ad       	ldd	r25, Y+60	; 0x3c
    27c0:	01 97       	sbiw	r24, 0x01	; 1
    27c2:	f1 f7       	brne	.-4      	; 0x27c0 <SevSeg2x1_VidLoading+0x592>
    27c4:	9c af       	std	Y+60, r25	; 0x3c
    27c6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27c8:	8d ad       	ldd	r24, Y+61	; 0x3d
    27ca:	9e ad       	ldd	r25, Y+62	; 0x3e
    27cc:	01 97       	sbiw	r24, 0x01	; 1
    27ce:	9e af       	std	Y+62, r25	; 0x3e
    27d0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27d2:	8d ad       	ldd	r24, Y+61	; 0x3d
    27d4:	9e ad       	ldd	r25, Y+62	; 0x3e
    27d6:	00 97       	sbiw	r24, 0x00	; 0
    27d8:	69 f7       	brne	.-38     	; 0x27b4 <SevSeg2x1_VidLoading+0x586>
    27da:	16 c0       	rjmp	.+44     	; 0x2808 <SevSeg2x1_VidLoading+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27dc:	fe 01       	movw	r30, r28
    27de:	ff 96       	adiw	r30, 0x3f	; 63
    27e0:	60 81       	ld	r22, Z
    27e2:	71 81       	ldd	r23, Z+1	; 0x01
    27e4:	82 81       	ldd	r24, Z+2	; 0x02
    27e6:	93 81       	ldd	r25, Z+3	; 0x03
    27e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27ec:	dc 01       	movw	r26, r24
    27ee:	cb 01       	movw	r24, r22
    27f0:	9e af       	std	Y+62, r25	; 0x3e
    27f2:	8d af       	std	Y+61, r24	; 0x3d
    27f4:	8d ad       	ldd	r24, Y+61	; 0x3d
    27f6:	9e ad       	ldd	r25, Y+62	; 0x3e
    27f8:	9a af       	std	Y+58, r25	; 0x3a
    27fa:	89 af       	std	Y+57, r24	; 0x39
    27fc:	89 ad       	ldd	r24, Y+57	; 0x39
    27fe:	9a ad       	ldd	r25, Y+58	; 0x3a
    2800:	01 97       	sbiw	r24, 0x01	; 1
    2802:	f1 f7       	brne	.-4      	; 0x2800 <SevSeg2x1_VidLoading+0x5d2>
    2804:	9a af       	std	Y+58, r25	; 0x3a
    2806:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Disable); //Disable Right Seven Segment
    2808:	81 e0       	ldi	r24, 0x01	; 1
    280a:	60 e0       	ldi	r22, 0x00	; 0
    280c:	40 e0       	ldi	r20, 0x00	; 0
    280e:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Enable); //enable Right Seven Segment
    2812:	81 e0       	ldi	r24, 0x01	; 1
    2814:	61 e0       	ldi	r22, 0x01	; 1
    2816:	41 e0       	ldi	r20, 0x01	; 1
    2818:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadD);
    281c:	82 e0       	ldi	r24, 0x02	; 2
    281e:	67 ef       	ldi	r22, 0xF7	; 247
    2820:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2824:	fe 01       	movw	r30, r28
    2826:	ef 58       	subi	r30, 0x8F	; 143
    2828:	ff 4f       	sbci	r31, 0xFF	; 255
    282a:	80 81       	ld	r24, Z
    282c:	91 81       	ldd	r25, Z+1	; 0x01
    282e:	cc 01       	movw	r24, r24
    2830:	a0 e0       	ldi	r26, 0x00	; 0
    2832:	b0 e0       	ldi	r27, 0x00	; 0
    2834:	bc 01       	movw	r22, r24
    2836:	cd 01       	movw	r24, r26
    2838:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    283c:	dc 01       	movw	r26, r24
    283e:	cb 01       	movw	r24, r22
    2840:	8d ab       	std	Y+53, r24	; 0x35
    2842:	9e ab       	std	Y+54, r25	; 0x36
    2844:	af ab       	std	Y+55, r26	; 0x37
    2846:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2848:	6d a9       	ldd	r22, Y+53	; 0x35
    284a:	7e a9       	ldd	r23, Y+54	; 0x36
    284c:	8f a9       	ldd	r24, Y+55	; 0x37
    284e:	98 ad       	ldd	r25, Y+56	; 0x38
    2850:	20 e0       	ldi	r18, 0x00	; 0
    2852:	30 e0       	ldi	r19, 0x00	; 0
    2854:	4a ef       	ldi	r20, 0xFA	; 250
    2856:	54 e4       	ldi	r21, 0x44	; 68
    2858:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    285c:	dc 01       	movw	r26, r24
    285e:	cb 01       	movw	r24, r22
    2860:	89 ab       	std	Y+49, r24	; 0x31
    2862:	9a ab       	std	Y+50, r25	; 0x32
    2864:	ab ab       	std	Y+51, r26	; 0x33
    2866:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2868:	69 a9       	ldd	r22, Y+49	; 0x31
    286a:	7a a9       	ldd	r23, Y+50	; 0x32
    286c:	8b a9       	ldd	r24, Y+51	; 0x33
    286e:	9c a9       	ldd	r25, Y+52	; 0x34
    2870:	20 e0       	ldi	r18, 0x00	; 0
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	40 e8       	ldi	r20, 0x80	; 128
    2876:	5f e3       	ldi	r21, 0x3F	; 63
    2878:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    287c:	88 23       	and	r24, r24
    287e:	2c f4       	brge	.+10     	; 0x288a <SevSeg2x1_VidLoading+0x65c>
		__ticks = 1;
    2880:	81 e0       	ldi	r24, 0x01	; 1
    2882:	90 e0       	ldi	r25, 0x00	; 0
    2884:	98 ab       	std	Y+48, r25	; 0x30
    2886:	8f a7       	std	Y+47, r24	; 0x2f
    2888:	3f c0       	rjmp	.+126    	; 0x2908 <SevSeg2x1_VidLoading+0x6da>
	else if (__tmp > 65535)
    288a:	69 a9       	ldd	r22, Y+49	; 0x31
    288c:	7a a9       	ldd	r23, Y+50	; 0x32
    288e:	8b a9       	ldd	r24, Y+51	; 0x33
    2890:	9c a9       	ldd	r25, Y+52	; 0x34
    2892:	20 e0       	ldi	r18, 0x00	; 0
    2894:	3f ef       	ldi	r19, 0xFF	; 255
    2896:	4f e7       	ldi	r20, 0x7F	; 127
    2898:	57 e4       	ldi	r21, 0x47	; 71
    289a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    289e:	18 16       	cp	r1, r24
    28a0:	4c f5       	brge	.+82     	; 0x28f4 <SevSeg2x1_VidLoading+0x6c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28a2:	6d a9       	ldd	r22, Y+53	; 0x35
    28a4:	7e a9       	ldd	r23, Y+54	; 0x36
    28a6:	8f a9       	ldd	r24, Y+55	; 0x37
    28a8:	98 ad       	ldd	r25, Y+56	; 0x38
    28aa:	20 e0       	ldi	r18, 0x00	; 0
    28ac:	30 e0       	ldi	r19, 0x00	; 0
    28ae:	40 e2       	ldi	r20, 0x20	; 32
    28b0:	51 e4       	ldi	r21, 0x41	; 65
    28b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28b6:	dc 01       	movw	r26, r24
    28b8:	cb 01       	movw	r24, r22
    28ba:	bc 01       	movw	r22, r24
    28bc:	cd 01       	movw	r24, r26
    28be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28c2:	dc 01       	movw	r26, r24
    28c4:	cb 01       	movw	r24, r22
    28c6:	98 ab       	std	Y+48, r25	; 0x30
    28c8:	8f a7       	std	Y+47, r24	; 0x2f
    28ca:	0f c0       	rjmp	.+30     	; 0x28ea <SevSeg2x1_VidLoading+0x6bc>
    28cc:	88 ec       	ldi	r24, 0xC8	; 200
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	9e a7       	std	Y+46, r25	; 0x2e
    28d2:	8d a7       	std	Y+45, r24	; 0x2d
    28d4:	8d a5       	ldd	r24, Y+45	; 0x2d
    28d6:	9e a5       	ldd	r25, Y+46	; 0x2e
    28d8:	01 97       	sbiw	r24, 0x01	; 1
    28da:	f1 f7       	brne	.-4      	; 0x28d8 <SevSeg2x1_VidLoading+0x6aa>
    28dc:	9e a7       	std	Y+46, r25	; 0x2e
    28de:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28e0:	8f a5       	ldd	r24, Y+47	; 0x2f
    28e2:	98 a9       	ldd	r25, Y+48	; 0x30
    28e4:	01 97       	sbiw	r24, 0x01	; 1
    28e6:	98 ab       	std	Y+48, r25	; 0x30
    28e8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28ea:	8f a5       	ldd	r24, Y+47	; 0x2f
    28ec:	98 a9       	ldd	r25, Y+48	; 0x30
    28ee:	00 97       	sbiw	r24, 0x00	; 0
    28f0:	69 f7       	brne	.-38     	; 0x28cc <SevSeg2x1_VidLoading+0x69e>
    28f2:	14 c0       	rjmp	.+40     	; 0x291c <SevSeg2x1_VidLoading+0x6ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28f4:	69 a9       	ldd	r22, Y+49	; 0x31
    28f6:	7a a9       	ldd	r23, Y+50	; 0x32
    28f8:	8b a9       	ldd	r24, Y+51	; 0x33
    28fa:	9c a9       	ldd	r25, Y+52	; 0x34
    28fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2900:	dc 01       	movw	r26, r24
    2902:	cb 01       	movw	r24, r22
    2904:	98 ab       	std	Y+48, r25	; 0x30
    2906:	8f a7       	std	Y+47, r24	; 0x2f
    2908:	8f a5       	ldd	r24, Y+47	; 0x2f
    290a:	98 a9       	ldd	r25, Y+48	; 0x30
    290c:	9c a7       	std	Y+44, r25	; 0x2c
    290e:	8b a7       	std	Y+43, r24	; 0x2b
    2910:	8b a5       	ldd	r24, Y+43	; 0x2b
    2912:	9c a5       	ldd	r25, Y+44	; 0x2c
    2914:	01 97       	sbiw	r24, 0x01	; 1
    2916:	f1 f7       	brne	.-4      	; 0x2914 <SevSeg2x1_VidLoading+0x6e6>
    2918:	9c a7       	std	Y+44, r25	; 0x2c
    291a:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadE);
    291c:	82 e0       	ldi	r24, 0x02	; 2
    291e:	6f ee       	ldi	r22, 0xEF	; 239
    2920:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2924:	fe 01       	movw	r30, r28
    2926:	ef 58       	subi	r30, 0x8F	; 143
    2928:	ff 4f       	sbci	r31, 0xFF	; 255
    292a:	80 81       	ld	r24, Z
    292c:	91 81       	ldd	r25, Z+1	; 0x01
    292e:	cc 01       	movw	r24, r24
    2930:	a0 e0       	ldi	r26, 0x00	; 0
    2932:	b0 e0       	ldi	r27, 0x00	; 0
    2934:	bc 01       	movw	r22, r24
    2936:	cd 01       	movw	r24, r26
    2938:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    293c:	dc 01       	movw	r26, r24
    293e:	cb 01       	movw	r24, r22
    2940:	8f a3       	std	Y+39, r24	; 0x27
    2942:	98 a7       	std	Y+40, r25	; 0x28
    2944:	a9 a7       	std	Y+41, r26	; 0x29
    2946:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2948:	6f a1       	ldd	r22, Y+39	; 0x27
    294a:	78 a5       	ldd	r23, Y+40	; 0x28
    294c:	89 a5       	ldd	r24, Y+41	; 0x29
    294e:	9a a5       	ldd	r25, Y+42	; 0x2a
    2950:	20 e0       	ldi	r18, 0x00	; 0
    2952:	30 e0       	ldi	r19, 0x00	; 0
    2954:	4a ef       	ldi	r20, 0xFA	; 250
    2956:	54 e4       	ldi	r21, 0x44	; 68
    2958:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    295c:	dc 01       	movw	r26, r24
    295e:	cb 01       	movw	r24, r22
    2960:	8b a3       	std	Y+35, r24	; 0x23
    2962:	9c a3       	std	Y+36, r25	; 0x24
    2964:	ad a3       	std	Y+37, r26	; 0x25
    2966:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2968:	6b a1       	ldd	r22, Y+35	; 0x23
    296a:	7c a1       	ldd	r23, Y+36	; 0x24
    296c:	8d a1       	ldd	r24, Y+37	; 0x25
    296e:	9e a1       	ldd	r25, Y+38	; 0x26
    2970:	20 e0       	ldi	r18, 0x00	; 0
    2972:	30 e0       	ldi	r19, 0x00	; 0
    2974:	40 e8       	ldi	r20, 0x80	; 128
    2976:	5f e3       	ldi	r21, 0x3F	; 63
    2978:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    297c:	88 23       	and	r24, r24
    297e:	2c f4       	brge	.+10     	; 0x298a <SevSeg2x1_VidLoading+0x75c>
		__ticks = 1;
    2980:	81 e0       	ldi	r24, 0x01	; 1
    2982:	90 e0       	ldi	r25, 0x00	; 0
    2984:	9a a3       	std	Y+34, r25	; 0x22
    2986:	89 a3       	std	Y+33, r24	; 0x21
    2988:	3f c0       	rjmp	.+126    	; 0x2a08 <SevSeg2x1_VidLoading+0x7da>
	else if (__tmp > 65535)
    298a:	6b a1       	ldd	r22, Y+35	; 0x23
    298c:	7c a1       	ldd	r23, Y+36	; 0x24
    298e:	8d a1       	ldd	r24, Y+37	; 0x25
    2990:	9e a1       	ldd	r25, Y+38	; 0x26
    2992:	20 e0       	ldi	r18, 0x00	; 0
    2994:	3f ef       	ldi	r19, 0xFF	; 255
    2996:	4f e7       	ldi	r20, 0x7F	; 127
    2998:	57 e4       	ldi	r21, 0x47	; 71
    299a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    299e:	18 16       	cp	r1, r24
    29a0:	4c f5       	brge	.+82     	; 0x29f4 <SevSeg2x1_VidLoading+0x7c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29a2:	6f a1       	ldd	r22, Y+39	; 0x27
    29a4:	78 a5       	ldd	r23, Y+40	; 0x28
    29a6:	89 a5       	ldd	r24, Y+41	; 0x29
    29a8:	9a a5       	ldd	r25, Y+42	; 0x2a
    29aa:	20 e0       	ldi	r18, 0x00	; 0
    29ac:	30 e0       	ldi	r19, 0x00	; 0
    29ae:	40 e2       	ldi	r20, 0x20	; 32
    29b0:	51 e4       	ldi	r21, 0x41	; 65
    29b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29b6:	dc 01       	movw	r26, r24
    29b8:	cb 01       	movw	r24, r22
    29ba:	bc 01       	movw	r22, r24
    29bc:	cd 01       	movw	r24, r26
    29be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29c2:	dc 01       	movw	r26, r24
    29c4:	cb 01       	movw	r24, r22
    29c6:	9a a3       	std	Y+34, r25	; 0x22
    29c8:	89 a3       	std	Y+33, r24	; 0x21
    29ca:	0f c0       	rjmp	.+30     	; 0x29ea <SevSeg2x1_VidLoading+0x7bc>
    29cc:	88 ec       	ldi	r24, 0xC8	; 200
    29ce:	90 e0       	ldi	r25, 0x00	; 0
    29d0:	98 a3       	std	Y+32, r25	; 0x20
    29d2:	8f 8f       	std	Y+31, r24	; 0x1f
    29d4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    29d6:	98 a1       	ldd	r25, Y+32	; 0x20
    29d8:	01 97       	sbiw	r24, 0x01	; 1
    29da:	f1 f7       	brne	.-4      	; 0x29d8 <SevSeg2x1_VidLoading+0x7aa>
    29dc:	98 a3       	std	Y+32, r25	; 0x20
    29de:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29e0:	89 a1       	ldd	r24, Y+33	; 0x21
    29e2:	9a a1       	ldd	r25, Y+34	; 0x22
    29e4:	01 97       	sbiw	r24, 0x01	; 1
    29e6:	9a a3       	std	Y+34, r25	; 0x22
    29e8:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29ea:	89 a1       	ldd	r24, Y+33	; 0x21
    29ec:	9a a1       	ldd	r25, Y+34	; 0x22
    29ee:	00 97       	sbiw	r24, 0x00	; 0
    29f0:	69 f7       	brne	.-38     	; 0x29cc <SevSeg2x1_VidLoading+0x79e>
    29f2:	14 c0       	rjmp	.+40     	; 0x2a1c <SevSeg2x1_VidLoading+0x7ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29f4:	6b a1       	ldd	r22, Y+35	; 0x23
    29f6:	7c a1       	ldd	r23, Y+36	; 0x24
    29f8:	8d a1       	ldd	r24, Y+37	; 0x25
    29fa:	9e a1       	ldd	r25, Y+38	; 0x26
    29fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a00:	dc 01       	movw	r26, r24
    2a02:	cb 01       	movw	r24, r22
    2a04:	9a a3       	std	Y+34, r25	; 0x22
    2a06:	89 a3       	std	Y+33, r24	; 0x21
    2a08:	89 a1       	ldd	r24, Y+33	; 0x21
    2a0a:	9a a1       	ldd	r25, Y+34	; 0x22
    2a0c:	9e 8f       	std	Y+30, r25	; 0x1e
    2a0e:	8d 8f       	std	Y+29, r24	; 0x1d
    2a10:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2a12:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2a14:	01 97       	sbiw	r24, 0x01	; 1
    2a16:	f1 f7       	brne	.-4      	; 0x2a14 <SevSeg2x1_VidLoading+0x7e6>
    2a18:	9e 8f       	std	Y+30, r25	; 0x1e
    2a1a:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadF);
    2a1c:	82 e0       	ldi	r24, 0x02	; 2
    2a1e:	6f ed       	ldi	r22, 0xDF	; 223
    2a20:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2a24:	fe 01       	movw	r30, r28
    2a26:	ef 58       	subi	r30, 0x8F	; 143
    2a28:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2a:	80 81       	ld	r24, Z
    2a2c:	91 81       	ldd	r25, Z+1	; 0x01
    2a2e:	cc 01       	movw	r24, r24
    2a30:	a0 e0       	ldi	r26, 0x00	; 0
    2a32:	b0 e0       	ldi	r27, 0x00	; 0
    2a34:	bc 01       	movw	r22, r24
    2a36:	cd 01       	movw	r24, r26
    2a38:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2a3c:	dc 01       	movw	r26, r24
    2a3e:	cb 01       	movw	r24, r22
    2a40:	89 8f       	std	Y+25, r24	; 0x19
    2a42:	9a 8f       	std	Y+26, r25	; 0x1a
    2a44:	ab 8f       	std	Y+27, r26	; 0x1b
    2a46:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a48:	69 8d       	ldd	r22, Y+25	; 0x19
    2a4a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a4c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a4e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2a50:	20 e0       	ldi	r18, 0x00	; 0
    2a52:	30 e0       	ldi	r19, 0x00	; 0
    2a54:	4a ef       	ldi	r20, 0xFA	; 250
    2a56:	54 e4       	ldi	r21, 0x44	; 68
    2a58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a5c:	dc 01       	movw	r26, r24
    2a5e:	cb 01       	movw	r24, r22
    2a60:	8d 8b       	std	Y+21, r24	; 0x15
    2a62:	9e 8b       	std	Y+22, r25	; 0x16
    2a64:	af 8b       	std	Y+23, r26	; 0x17
    2a66:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2a68:	6d 89       	ldd	r22, Y+21	; 0x15
    2a6a:	7e 89       	ldd	r23, Y+22	; 0x16
    2a6c:	8f 89       	ldd	r24, Y+23	; 0x17
    2a6e:	98 8d       	ldd	r25, Y+24	; 0x18
    2a70:	20 e0       	ldi	r18, 0x00	; 0
    2a72:	30 e0       	ldi	r19, 0x00	; 0
    2a74:	40 e8       	ldi	r20, 0x80	; 128
    2a76:	5f e3       	ldi	r21, 0x3F	; 63
    2a78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a7c:	88 23       	and	r24, r24
    2a7e:	2c f4       	brge	.+10     	; 0x2a8a <SevSeg2x1_VidLoading+0x85c>
		__ticks = 1;
    2a80:	81 e0       	ldi	r24, 0x01	; 1
    2a82:	90 e0       	ldi	r25, 0x00	; 0
    2a84:	9c 8b       	std	Y+20, r25	; 0x14
    2a86:	8b 8b       	std	Y+19, r24	; 0x13
    2a88:	3f c0       	rjmp	.+126    	; 0x2b08 <SevSeg2x1_VidLoading+0x8da>
	else if (__tmp > 65535)
    2a8a:	6d 89       	ldd	r22, Y+21	; 0x15
    2a8c:	7e 89       	ldd	r23, Y+22	; 0x16
    2a8e:	8f 89       	ldd	r24, Y+23	; 0x17
    2a90:	98 8d       	ldd	r25, Y+24	; 0x18
    2a92:	20 e0       	ldi	r18, 0x00	; 0
    2a94:	3f ef       	ldi	r19, 0xFF	; 255
    2a96:	4f e7       	ldi	r20, 0x7F	; 127
    2a98:	57 e4       	ldi	r21, 0x47	; 71
    2a9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a9e:	18 16       	cp	r1, r24
    2aa0:	4c f5       	brge	.+82     	; 0x2af4 <SevSeg2x1_VidLoading+0x8c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2aa2:	69 8d       	ldd	r22, Y+25	; 0x19
    2aa4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2aa6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2aa8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	40 e2       	ldi	r20, 0x20	; 32
    2ab0:	51 e4       	ldi	r21, 0x41	; 65
    2ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	cb 01       	movw	r24, r22
    2aba:	bc 01       	movw	r22, r24
    2abc:	cd 01       	movw	r24, r26
    2abe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ac2:	dc 01       	movw	r26, r24
    2ac4:	cb 01       	movw	r24, r22
    2ac6:	9c 8b       	std	Y+20, r25	; 0x14
    2ac8:	8b 8b       	std	Y+19, r24	; 0x13
    2aca:	0f c0       	rjmp	.+30     	; 0x2aea <SevSeg2x1_VidLoading+0x8bc>
    2acc:	88 ec       	ldi	r24, 0xC8	; 200
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	9a 8b       	std	Y+18, r25	; 0x12
    2ad2:	89 8b       	std	Y+17, r24	; 0x11
    2ad4:	89 89       	ldd	r24, Y+17	; 0x11
    2ad6:	9a 89       	ldd	r25, Y+18	; 0x12
    2ad8:	01 97       	sbiw	r24, 0x01	; 1
    2ada:	f1 f7       	brne	.-4      	; 0x2ad8 <SevSeg2x1_VidLoading+0x8aa>
    2adc:	9a 8b       	std	Y+18, r25	; 0x12
    2ade:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ae0:	8b 89       	ldd	r24, Y+19	; 0x13
    2ae2:	9c 89       	ldd	r25, Y+20	; 0x14
    2ae4:	01 97       	sbiw	r24, 0x01	; 1
    2ae6:	9c 8b       	std	Y+20, r25	; 0x14
    2ae8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2aea:	8b 89       	ldd	r24, Y+19	; 0x13
    2aec:	9c 89       	ldd	r25, Y+20	; 0x14
    2aee:	00 97       	sbiw	r24, 0x00	; 0
    2af0:	69 f7       	brne	.-38     	; 0x2acc <SevSeg2x1_VidLoading+0x89e>
    2af2:	14 c0       	rjmp	.+40     	; 0x2b1c <SevSeg2x1_VidLoading+0x8ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2af4:	6d 89       	ldd	r22, Y+21	; 0x15
    2af6:	7e 89       	ldd	r23, Y+22	; 0x16
    2af8:	8f 89       	ldd	r24, Y+23	; 0x17
    2afa:	98 8d       	ldd	r25, Y+24	; 0x18
    2afc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b00:	dc 01       	movw	r26, r24
    2b02:	cb 01       	movw	r24, r22
    2b04:	9c 8b       	std	Y+20, r25	; 0x14
    2b06:	8b 8b       	std	Y+19, r24	; 0x13
    2b08:	8b 89       	ldd	r24, Y+19	; 0x13
    2b0a:	9c 89       	ldd	r25, Y+20	; 0x14
    2b0c:	98 8b       	std	Y+16, r25	; 0x10
    2b0e:	8f 87       	std	Y+15, r24	; 0x0f
    2b10:	8f 85       	ldd	r24, Y+15	; 0x0f
    2b12:	98 89       	ldd	r25, Y+16	; 0x10
    2b14:	01 97       	sbiw	r24, 0x01	; 1
    2b16:	f1 f7       	brne	.-4      	; 0x2b14 <SevSeg2x1_VidLoading+0x8e6>
    2b18:	98 8b       	std	Y+16, r25	; 0x10
    2b1a:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadA);
    2b1c:	82 e0       	ldi	r24, 0x02	; 2
    2b1e:	6e ef       	ldi	r22, 0xFE	; 254
    2b20:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2b24:	fe 01       	movw	r30, r28
    2b26:	ef 58       	subi	r30, 0x8F	; 143
    2b28:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2a:	80 81       	ld	r24, Z
    2b2c:	91 81       	ldd	r25, Z+1	; 0x01
    2b2e:	cc 01       	movw	r24, r24
    2b30:	a0 e0       	ldi	r26, 0x00	; 0
    2b32:	b0 e0       	ldi	r27, 0x00	; 0
    2b34:	bc 01       	movw	r22, r24
    2b36:	cd 01       	movw	r24, r26
    2b38:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2b3c:	dc 01       	movw	r26, r24
    2b3e:	cb 01       	movw	r24, r22
    2b40:	8b 87       	std	Y+11, r24	; 0x0b
    2b42:	9c 87       	std	Y+12, r25	; 0x0c
    2b44:	ad 87       	std	Y+13, r26	; 0x0d
    2b46:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b48:	6b 85       	ldd	r22, Y+11	; 0x0b
    2b4a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2b4c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2b4e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	4a ef       	ldi	r20, 0xFA	; 250
    2b56:	54 e4       	ldi	r21, 0x44	; 68
    2b58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b5c:	dc 01       	movw	r26, r24
    2b5e:	cb 01       	movw	r24, r22
    2b60:	8f 83       	std	Y+7, r24	; 0x07
    2b62:	98 87       	std	Y+8, r25	; 0x08
    2b64:	a9 87       	std	Y+9, r26	; 0x09
    2b66:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2b68:	6f 81       	ldd	r22, Y+7	; 0x07
    2b6a:	78 85       	ldd	r23, Y+8	; 0x08
    2b6c:	89 85       	ldd	r24, Y+9	; 0x09
    2b6e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b70:	20 e0       	ldi	r18, 0x00	; 0
    2b72:	30 e0       	ldi	r19, 0x00	; 0
    2b74:	40 e8       	ldi	r20, 0x80	; 128
    2b76:	5f e3       	ldi	r21, 0x3F	; 63
    2b78:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b7c:	88 23       	and	r24, r24
    2b7e:	2c f4       	brge	.+10     	; 0x2b8a <SevSeg2x1_VidLoading+0x95c>
		__ticks = 1;
    2b80:	81 e0       	ldi	r24, 0x01	; 1
    2b82:	90 e0       	ldi	r25, 0x00	; 0
    2b84:	9e 83       	std	Y+6, r25	; 0x06
    2b86:	8d 83       	std	Y+5, r24	; 0x05
    2b88:	3f c0       	rjmp	.+126    	; 0x2c08 <SevSeg2x1_VidLoading+0x9da>
	else if (__tmp > 65535)
    2b8a:	6f 81       	ldd	r22, Y+7	; 0x07
    2b8c:	78 85       	ldd	r23, Y+8	; 0x08
    2b8e:	89 85       	ldd	r24, Y+9	; 0x09
    2b90:	9a 85       	ldd	r25, Y+10	; 0x0a
    2b92:	20 e0       	ldi	r18, 0x00	; 0
    2b94:	3f ef       	ldi	r19, 0xFF	; 255
    2b96:	4f e7       	ldi	r20, 0x7F	; 127
    2b98:	57 e4       	ldi	r21, 0x47	; 71
    2b9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b9e:	18 16       	cp	r1, r24
    2ba0:	4c f5       	brge	.+82     	; 0x2bf4 <SevSeg2x1_VidLoading+0x9c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ba2:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ba4:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ba6:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ba8:	9e 85       	ldd	r25, Y+14	; 0x0e
    2baa:	20 e0       	ldi	r18, 0x00	; 0
    2bac:	30 e0       	ldi	r19, 0x00	; 0
    2bae:	40 e2       	ldi	r20, 0x20	; 32
    2bb0:	51 e4       	ldi	r21, 0x41	; 65
    2bb2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bb6:	dc 01       	movw	r26, r24
    2bb8:	cb 01       	movw	r24, r22
    2bba:	bc 01       	movw	r22, r24
    2bbc:	cd 01       	movw	r24, r26
    2bbe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bc2:	dc 01       	movw	r26, r24
    2bc4:	cb 01       	movw	r24, r22
    2bc6:	9e 83       	std	Y+6, r25	; 0x06
    2bc8:	8d 83       	std	Y+5, r24	; 0x05
    2bca:	0f c0       	rjmp	.+30     	; 0x2bea <SevSeg2x1_VidLoading+0x9bc>
    2bcc:	88 ec       	ldi	r24, 0xC8	; 200
    2bce:	90 e0       	ldi	r25, 0x00	; 0
    2bd0:	9c 83       	std	Y+4, r25	; 0x04
    2bd2:	8b 83       	std	Y+3, r24	; 0x03
    2bd4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bd6:	9c 81       	ldd	r25, Y+4	; 0x04
    2bd8:	01 97       	sbiw	r24, 0x01	; 1
    2bda:	f1 f7       	brne	.-4      	; 0x2bd8 <SevSeg2x1_VidLoading+0x9aa>
    2bdc:	9c 83       	std	Y+4, r25	; 0x04
    2bde:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2be0:	8d 81       	ldd	r24, Y+5	; 0x05
    2be2:	9e 81       	ldd	r25, Y+6	; 0x06
    2be4:	01 97       	sbiw	r24, 0x01	; 1
    2be6:	9e 83       	std	Y+6, r25	; 0x06
    2be8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bea:	8d 81       	ldd	r24, Y+5	; 0x05
    2bec:	9e 81       	ldd	r25, Y+6	; 0x06
    2bee:	00 97       	sbiw	r24, 0x00	; 0
    2bf0:	69 f7       	brne	.-38     	; 0x2bcc <SevSeg2x1_VidLoading+0x99e>
    2bf2:	14 c0       	rjmp	.+40     	; 0x2c1c <SevSeg2x1_VidLoading+0x9ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bf4:	6f 81       	ldd	r22, Y+7	; 0x07
    2bf6:	78 85       	ldd	r23, Y+8	; 0x08
    2bf8:	89 85       	ldd	r24, Y+9	; 0x09
    2bfa:	9a 85       	ldd	r25, Y+10	; 0x0a
    2bfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c00:	dc 01       	movw	r26, r24
    2c02:	cb 01       	movw	r24, r22
    2c04:	9e 83       	std	Y+6, r25	; 0x06
    2c06:	8d 83       	std	Y+5, r24	; 0x05
    2c08:	8d 81       	ldd	r24, Y+5	; 0x05
    2c0a:	9e 81       	ldd	r25, Y+6	; 0x06
    2c0c:	9a 83       	std	Y+2, r25	; 0x02
    2c0e:	89 83       	std	Y+1, r24	; 0x01
    2c10:	89 81       	ldd	r24, Y+1	; 0x01
    2c12:	9a 81       	ldd	r25, Y+2	; 0x02
    2c14:	01 97       	sbiw	r24, 0x01	; 1
    2c16:	f1 f7       	brne	.-4      	; 0x2c14 <SevSeg2x1_VidLoading+0x9e6>
    2c18:	9a 83       	std	Y+2, r25	; 0x02
    2c1a:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Disable); //Disable Right Seven Segment
    2c1c:	81 e0       	ldi	r24, 0x01	; 1
    2c1e:	61 e0       	ldi	r22, 0x01	; 1
    2c20:	40 e0       	ldi	r20, 0x00	; 0
    2c22:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
}
    2c26:	ce 58       	subi	r28, 0x8E	; 142
    2c28:	df 4f       	sbci	r29, 0xFF	; 255
    2c2a:	0f b6       	in	r0, 0x3f	; 63
    2c2c:	f8 94       	cli
    2c2e:	de bf       	out	0x3e, r29	; 62
    2c30:	0f be       	out	0x3f, r0	; 63
    2c32:	cd bf       	out	0x3d, r28	; 61
    2c34:	cf 91       	pop	r28
    2c36:	df 91       	pop	r29
    2c38:	1f 91       	pop	r17
    2c3a:	0f 91       	pop	r16
    2c3c:	08 95       	ret

00002c3e <main>:




int main (void)
{
    2c3e:	df 93       	push	r29
    2c40:	cf 93       	push	r28
    2c42:	cd b7       	in	r28, 0x3d	; 61
    2c44:	de b7       	in	r29, 0x3e	; 62
    2c46:	62 97       	sbiw	r28, 0x12	; 18
    2c48:	0f b6       	in	r0, 0x3f	; 63
    2c4a:	f8 94       	cli
    2c4c:	de bf       	out	0x3e, r29	; 62
    2c4e:	0f be       	out	0x3f, r0	; 63
    2c50:	cd bf       	out	0x3d, r28	; 61
	volatile u8* SW1 = 0;
    2c52:	1a 8a       	std	Y+18, r1	; 0x12
    2c54:	19 8a       	std	Y+17, r1	; 0x11
	volatile u8* SW2 = 0;
    2c56:	18 8a       	std	Y+16, r1	; 0x10
    2c58:	1f 86       	std	Y+15, r1	; 0x0f
	SevSeg2x1_VidInit();
    2c5a:	0e 94 ad 0d 	call	0x1b5a	; 0x1b5a <SevSeg2x1_VidInit>
	DIO_VidSetPinDirection(PORT_B, PIN6, INPUT); 			// SW1 as Input
    2c5e:	81 e0       	ldi	r24, 0x01	; 1
    2c60:	66 e0       	ldi	r22, 0x06	; 6
    2c62:	40 e0       	ldi	r20, 0x00	; 0
    2c64:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinValue(PORT_B, PIN6, OUT_HIGH);					// SW1 enable pull up resistor
    2c68:	81 e0       	ldi	r24, 0x01	; 1
    2c6a:	66 e0       	ldi	r22, 0x06	; 6
    2c6c:	41 e0       	ldi	r20, 0x01	; 1
    2c6e:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinDirection(PORT_B, PIN7, INPUT);			// SW2 as Input
    2c72:	81 e0       	ldi	r24, 0x01	; 1
    2c74:	67 e0       	ldi	r22, 0x07	; 7
    2c76:	40 e0       	ldi	r20, 0x00	; 0
    2c78:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinValue(PORT_B, PIN7, OUT_HIGH);					// SW2 enable pull up resistor
    2c7c:	81 e0       	ldi	r24, 0x01	; 1
    2c7e:	67 e0       	ldi	r22, 0x07	; 7
    2c80:	41 e0       	ldi	r20, 0x01	; 1
    2c82:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPortDirection(PORT_A, 0xff);														// LED Port direction as output
    2c86:	80 e0       	ldi	r24, 0x00	; 0
    2c88:	6f ef       	ldi	r22, 0xFF	; 255
    2c8a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPortDirection>
	while (1)
	{

		SW1 = DIO_u8GetPinValue(PORT_B, PIN6);
    2c8e:	81 e0       	ldi	r24, 0x01	; 1
    2c90:	66 e0       	ldi	r22, 0x06	; 6
    2c92:	0e 94 e5 08 	call	0x11ca	; 0x11ca <DIO_u8GetPinValue>
    2c96:	88 2f       	mov	r24, r24
    2c98:	90 e0       	ldi	r25, 0x00	; 0
    2c9a:	9a 8b       	std	Y+18, r25	; 0x12
    2c9c:	89 8b       	std	Y+17, r24	; 0x11
		SW2 = DIO_u8GetPinValue(PORT_B, PIN7);
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	67 e0       	ldi	r22, 0x07	; 7
    2ca2:	0e 94 e5 08 	call	0x11ca	; 0x11ca <DIO_u8GetPinValue>
    2ca6:	88 2f       	mov	r24, r24
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	98 8b       	std	Y+16, r25	; 0x10
    2cac:	8f 87       	std	Y+15, r24	; 0x0f
    2cae:	80 e0       	ldi	r24, 0x00	; 0
    2cb0:	90 e0       	ldi	r25, 0x00	; 0
    2cb2:	a0 e2       	ldi	r26, 0x20	; 32
    2cb4:	b1 e4       	ldi	r27, 0x41	; 65
    2cb6:	8b 87       	std	Y+11, r24	; 0x0b
    2cb8:	9c 87       	std	Y+12, r25	; 0x0c
    2cba:	ad 87       	std	Y+13, r26	; 0x0d
    2cbc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cbe:	6b 85       	ldd	r22, Y+11	; 0x0b
    2cc0:	7c 85       	ldd	r23, Y+12	; 0x0c
    2cc2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2cc4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2cc6:	20 e0       	ldi	r18, 0x00	; 0
    2cc8:	30 e0       	ldi	r19, 0x00	; 0
    2cca:	4a ef       	ldi	r20, 0xFA	; 250
    2ccc:	54 e4       	ldi	r21, 0x44	; 68
    2cce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cd2:	dc 01       	movw	r26, r24
    2cd4:	cb 01       	movw	r24, r22
    2cd6:	8f 83       	std	Y+7, r24	; 0x07
    2cd8:	98 87       	std	Y+8, r25	; 0x08
    2cda:	a9 87       	std	Y+9, r26	; 0x09
    2cdc:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2cde:	6f 81       	ldd	r22, Y+7	; 0x07
    2ce0:	78 85       	ldd	r23, Y+8	; 0x08
    2ce2:	89 85       	ldd	r24, Y+9	; 0x09
    2ce4:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	40 e8       	ldi	r20, 0x80	; 128
    2cec:	5f e3       	ldi	r21, 0x3F	; 63
    2cee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cf2:	88 23       	and	r24, r24
    2cf4:	2c f4       	brge	.+10     	; 0x2d00 <main+0xc2>
		__ticks = 1;
    2cf6:	81 e0       	ldi	r24, 0x01	; 1
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	9e 83       	std	Y+6, r25	; 0x06
    2cfc:	8d 83       	std	Y+5, r24	; 0x05
    2cfe:	3f c0       	rjmp	.+126    	; 0x2d7e <main+0x140>
	else if (__tmp > 65535)
    2d00:	6f 81       	ldd	r22, Y+7	; 0x07
    2d02:	78 85       	ldd	r23, Y+8	; 0x08
    2d04:	89 85       	ldd	r24, Y+9	; 0x09
    2d06:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d08:	20 e0       	ldi	r18, 0x00	; 0
    2d0a:	3f ef       	ldi	r19, 0xFF	; 255
    2d0c:	4f e7       	ldi	r20, 0x7F	; 127
    2d0e:	57 e4       	ldi	r21, 0x47	; 71
    2d10:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d14:	18 16       	cp	r1, r24
    2d16:	4c f5       	brge	.+82     	; 0x2d6a <main+0x12c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d18:	6b 85       	ldd	r22, Y+11	; 0x0b
    2d1a:	7c 85       	ldd	r23, Y+12	; 0x0c
    2d1c:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d1e:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d20:	20 e0       	ldi	r18, 0x00	; 0
    2d22:	30 e0       	ldi	r19, 0x00	; 0
    2d24:	40 e2       	ldi	r20, 0x20	; 32
    2d26:	51 e4       	ldi	r21, 0x41	; 65
    2d28:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d2c:	dc 01       	movw	r26, r24
    2d2e:	cb 01       	movw	r24, r22
    2d30:	bc 01       	movw	r22, r24
    2d32:	cd 01       	movw	r24, r26
    2d34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d38:	dc 01       	movw	r26, r24
    2d3a:	cb 01       	movw	r24, r22
    2d3c:	9e 83       	std	Y+6, r25	; 0x06
    2d3e:	8d 83       	std	Y+5, r24	; 0x05
    2d40:	0f c0       	rjmp	.+30     	; 0x2d60 <main+0x122>
    2d42:	88 ec       	ldi	r24, 0xC8	; 200
    2d44:	90 e0       	ldi	r25, 0x00	; 0
    2d46:	9c 83       	std	Y+4, r25	; 0x04
    2d48:	8b 83       	std	Y+3, r24	; 0x03
    2d4a:	8b 81       	ldd	r24, Y+3	; 0x03
    2d4c:	9c 81       	ldd	r25, Y+4	; 0x04
    2d4e:	01 97       	sbiw	r24, 0x01	; 1
    2d50:	f1 f7       	brne	.-4      	; 0x2d4e <main+0x110>
    2d52:	9c 83       	std	Y+4, r25	; 0x04
    2d54:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d56:	8d 81       	ldd	r24, Y+5	; 0x05
    2d58:	9e 81       	ldd	r25, Y+6	; 0x06
    2d5a:	01 97       	sbiw	r24, 0x01	; 1
    2d5c:	9e 83       	std	Y+6, r25	; 0x06
    2d5e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d60:	8d 81       	ldd	r24, Y+5	; 0x05
    2d62:	9e 81       	ldd	r25, Y+6	; 0x06
    2d64:	00 97       	sbiw	r24, 0x00	; 0
    2d66:	69 f7       	brne	.-38     	; 0x2d42 <main+0x104>
    2d68:	14 c0       	rjmp	.+40     	; 0x2d92 <main+0x154>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d6a:	6f 81       	ldd	r22, Y+7	; 0x07
    2d6c:	78 85       	ldd	r23, Y+8	; 0x08
    2d6e:	89 85       	ldd	r24, Y+9	; 0x09
    2d70:	9a 85       	ldd	r25, Y+10	; 0x0a
    2d72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d76:	dc 01       	movw	r26, r24
    2d78:	cb 01       	movw	r24, r22
    2d7a:	9e 83       	std	Y+6, r25	; 0x06
    2d7c:	8d 83       	std	Y+5, r24	; 0x05
    2d7e:	8d 81       	ldd	r24, Y+5	; 0x05
    2d80:	9e 81       	ldd	r25, Y+6	; 0x06
    2d82:	9a 83       	std	Y+2, r25	; 0x02
    2d84:	89 83       	std	Y+1, r24	; 0x01
    2d86:	89 81       	ldd	r24, Y+1	; 0x01
    2d88:	9a 81       	ldd	r25, Y+2	; 0x02
    2d8a:	01 97       	sbiw	r24, 0x01	; 1
    2d8c:	f1 f7       	brne	.-4      	; 0x2d8a <main+0x14c>
    2d8e:	9a 83       	std	Y+2, r25	; 0x02
    2d90:	89 83       	std	Y+1, r24	; 0x01

		SevSeg2x1_VidLoading(100);

		LED_VidButterFly(10,100);
		*/
			if (SW1==0 && SW2==0)
    2d92:	89 89       	ldd	r24, Y+17	; 0x11
    2d94:	9a 89       	ldd	r25, Y+18	; 0x12
    2d96:	00 97       	sbiw	r24, 0x00	; 0
    2d98:	49 f4       	brne	.+18     	; 0x2dac <main+0x16e>
    2d9a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2d9c:	98 89       	ldd	r25, Y+16	; 0x10
    2d9e:	00 97       	sbiw	r24, 0x00	; 0
    2da0:	29 f4       	brne	.+10     	; 0x2dac <main+0x16e>
		{
			SevSeg2x1_VidCountUp(0,99);
    2da2:	80 e0       	ldi	r24, 0x00	; 0
    2da4:	63 e6       	ldi	r22, 0x63	; 99
    2da6:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <SevSeg2x1_VidCountUp>
    2daa:	71 cf       	rjmp	.-286    	; 0x2c8e <main+0x50>
		}
		else if  ((SW1==1) && (SW2==0))
    2dac:	89 89       	ldd	r24, Y+17	; 0x11
    2dae:	9a 89       	ldd	r25, Y+18	; 0x12
    2db0:	81 30       	cpi	r24, 0x01	; 1
    2db2:	91 05       	cpc	r25, r1
    2db4:	49 f4       	brne	.+18     	; 0x2dc8 <main+0x18a>
    2db6:	8f 85       	ldd	r24, Y+15	; 0x0f
    2db8:	98 89       	ldd	r25, Y+16	; 0x10
    2dba:	00 97       	sbiw	r24, 0x00	; 0
    2dbc:	29 f4       	brne	.+10     	; 0x2dc8 <main+0x18a>
		{
			SevSeg2x1_VidCountDown(99,0);
    2dbe:	83 e6       	ldi	r24, 0x63	; 99
    2dc0:	60 e0       	ldi	r22, 0x00	; 0
    2dc2:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <SevSeg2x1_VidCountDown>
    2dc6:	63 cf       	rjmp	.-314    	; 0x2c8e <main+0x50>
		}
		else if  ((SW1==0) && (SW2==1))
    2dc8:	89 89       	ldd	r24, Y+17	; 0x11
    2dca:	9a 89       	ldd	r25, Y+18	; 0x12
    2dcc:	00 97       	sbiw	r24, 0x00	; 0
    2dce:	51 f4       	brne	.+20     	; 0x2de4 <main+0x1a6>
    2dd0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dd2:	98 89       	ldd	r25, Y+16	; 0x10
    2dd4:	81 30       	cpi	r24, 0x01	; 1
    2dd6:	91 05       	cpc	r25, r1
    2dd8:	29 f4       	brne	.+10     	; 0x2de4 <main+0x1a6>
		{
			SevSeg2x1_VidLoading(100);
    2dda:	84 e6       	ldi	r24, 0x64	; 100
    2ddc:	90 e0       	ldi	r25, 0x00	; 0
    2dde:	0e 94 17 11 	call	0x222e	; 0x222e <SevSeg2x1_VidLoading>
    2de2:	55 cf       	rjmp	.-342    	; 0x2c8e <main+0x50>
		}
		else if  ((SW1==1) && (SW2==1))
    2de4:	89 89       	ldd	r24, Y+17	; 0x11
    2de6:	9a 89       	ldd	r25, Y+18	; 0x12
    2de8:	81 30       	cpi	r24, 0x01	; 1
    2dea:	91 05       	cpc	r25, r1
    2dec:	09 f0       	breq	.+2      	; 0x2df0 <main+0x1b2>
    2dee:	4f cf       	rjmp	.-354    	; 0x2c8e <main+0x50>
    2df0:	8f 85       	ldd	r24, Y+15	; 0x0f
    2df2:	98 89       	ldd	r25, Y+16	; 0x10
    2df4:	81 30       	cpi	r24, 0x01	; 1
    2df6:	91 05       	cpc	r25, r1
    2df8:	09 f0       	breq	.+2      	; 0x2dfc <main+0x1be>
    2dfa:	49 cf       	rjmp	.-366    	; 0x2c8e <main+0x50>
		{
			LED_VidButterFly(10,100);
    2dfc:	8a e0       	ldi	r24, 0x0A	; 10
    2dfe:	64 e6       	ldi	r22, 0x64	; 100
    2e00:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_VidButterFly>
    2e04:	44 cf       	rjmp	.-376    	; 0x2c8e <main+0x50>

00002e06 <__udivmodqi4>:
    2e06:	99 1b       	sub	r25, r25
    2e08:	79 e0       	ldi	r23, 0x09	; 9
    2e0a:	04 c0       	rjmp	.+8      	; 0x2e14 <__udivmodqi4_ep>

00002e0c <__udivmodqi4_loop>:
    2e0c:	99 1f       	adc	r25, r25
    2e0e:	96 17       	cp	r25, r22
    2e10:	08 f0       	brcs	.+2      	; 0x2e14 <__udivmodqi4_ep>
    2e12:	96 1b       	sub	r25, r22

00002e14 <__udivmodqi4_ep>:
    2e14:	88 1f       	adc	r24, r24
    2e16:	7a 95       	dec	r23
    2e18:	c9 f7       	brne	.-14     	; 0x2e0c <__udivmodqi4_loop>
    2e1a:	80 95       	com	r24
    2e1c:	08 95       	ret

00002e1e <__divmodqi4>:
    2e1e:	87 fb       	bst	r24, 7
    2e20:	08 2e       	mov	r0, r24
    2e22:	06 26       	eor	r0, r22
    2e24:	87 fd       	sbrc	r24, 7
    2e26:	81 95       	neg	r24
    2e28:	67 fd       	sbrc	r22, 7
    2e2a:	61 95       	neg	r22
    2e2c:	ec df       	rcall	.-40     	; 0x2e06 <__udivmodqi4>
    2e2e:	0e f4       	brtc	.+2      	; 0x2e32 <__divmodqi4_1>
    2e30:	91 95       	neg	r25

00002e32 <__divmodqi4_1>:
    2e32:	07 fc       	sbrc	r0, 7
    2e34:	81 95       	neg	r24

00002e36 <__divmodqi4_exit>:
    2e36:	08 95       	ret

00002e38 <__prologue_saves__>:
    2e38:	2f 92       	push	r2
    2e3a:	3f 92       	push	r3
    2e3c:	4f 92       	push	r4
    2e3e:	5f 92       	push	r5
    2e40:	6f 92       	push	r6
    2e42:	7f 92       	push	r7
    2e44:	8f 92       	push	r8
    2e46:	9f 92       	push	r9
    2e48:	af 92       	push	r10
    2e4a:	bf 92       	push	r11
    2e4c:	cf 92       	push	r12
    2e4e:	df 92       	push	r13
    2e50:	ef 92       	push	r14
    2e52:	ff 92       	push	r15
    2e54:	0f 93       	push	r16
    2e56:	1f 93       	push	r17
    2e58:	cf 93       	push	r28
    2e5a:	df 93       	push	r29
    2e5c:	cd b7       	in	r28, 0x3d	; 61
    2e5e:	de b7       	in	r29, 0x3e	; 62
    2e60:	ca 1b       	sub	r28, r26
    2e62:	db 0b       	sbc	r29, r27
    2e64:	0f b6       	in	r0, 0x3f	; 63
    2e66:	f8 94       	cli
    2e68:	de bf       	out	0x3e, r29	; 62
    2e6a:	0f be       	out	0x3f, r0	; 63
    2e6c:	cd bf       	out	0x3d, r28	; 61
    2e6e:	09 94       	ijmp

00002e70 <__epilogue_restores__>:
    2e70:	2a 88       	ldd	r2, Y+18	; 0x12
    2e72:	39 88       	ldd	r3, Y+17	; 0x11
    2e74:	48 88       	ldd	r4, Y+16	; 0x10
    2e76:	5f 84       	ldd	r5, Y+15	; 0x0f
    2e78:	6e 84       	ldd	r6, Y+14	; 0x0e
    2e7a:	7d 84       	ldd	r7, Y+13	; 0x0d
    2e7c:	8c 84       	ldd	r8, Y+12	; 0x0c
    2e7e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2e80:	aa 84       	ldd	r10, Y+10	; 0x0a
    2e82:	b9 84       	ldd	r11, Y+9	; 0x09
    2e84:	c8 84       	ldd	r12, Y+8	; 0x08
    2e86:	df 80       	ldd	r13, Y+7	; 0x07
    2e88:	ee 80       	ldd	r14, Y+6	; 0x06
    2e8a:	fd 80       	ldd	r15, Y+5	; 0x05
    2e8c:	0c 81       	ldd	r16, Y+4	; 0x04
    2e8e:	1b 81       	ldd	r17, Y+3	; 0x03
    2e90:	aa 81       	ldd	r26, Y+2	; 0x02
    2e92:	b9 81       	ldd	r27, Y+1	; 0x01
    2e94:	ce 0f       	add	r28, r30
    2e96:	d1 1d       	adc	r29, r1
    2e98:	0f b6       	in	r0, 0x3f	; 63
    2e9a:	f8 94       	cli
    2e9c:	de bf       	out	0x3e, r29	; 62
    2e9e:	0f be       	out	0x3f, r0	; 63
    2ea0:	cd bf       	out	0x3d, r28	; 61
    2ea2:	ed 01       	movw	r28, r26
    2ea4:	08 95       	ret

00002ea6 <_exit>:
    2ea6:	f8 94       	cli

00002ea8 <__stop_program>:
    2ea8:	ff cf       	rjmp	.-2      	; 0x2ea8 <__stop_program>
