
LCD_16x2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003b3a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  00003b3a  00003bae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002c28  00000000  00000000  00003cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d6a  00000000  00000000  000068e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  00007652  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d3  00000000  00000000  000077d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000200f  00000000  00000000  000079a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001170  00000000  00000000  000099b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001001  00000000  00000000  0000ab24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  0000bb28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c1  00000000  00000000  0000bcc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000008ae  00000000  00000000  0000bf89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000c837  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e3       	ldi	r30, 0x3A	; 58
      68:	fb e3       	ldi	r31, 0x3B	; 59
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 bc 1c 	call	0x3978	; 0x3978 <main>
      7a:	0c 94 9b 1d 	jmp	0x3b36	; 0x3b36 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 64 1d 	jmp	0x3ac8	; 0x3ac8 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a8 e6       	ldi	r26, 0x68	; 104
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 80 1d 	jmp	0x3b00	; 0x3b00 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 8c 1d 	jmp	0x3b18	; 0x3b18 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 8c 1d 	jmp	0x3b18	; 0x3b18 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 64 1d 	jmp	0x3ac8	; 0x3ac8 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	88 e6       	ldi	r24, 0x68	; 104
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 80 1d 	jmp	0x3b00	; 0x3b00 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 8c 1d 	jmp	0x3b18	; 0x3b18 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 8c 1d 	jmp	0x3b18	; 0x3b18 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 70 1d 	jmp	0x3ae0	; 0x3ae0 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 0a 06 	call	0xc14	; 0xc14 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 8c 1d 	jmp	0x3b18	; 0x3b18 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 74 1d 	jmp	0x3ae8	; 0x3ae8 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 92 05 	call	0xb24	; 0xb24 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 90 1d 	jmp	0x3b20	; 0x3b20 <__epilogue_restores__+0x20>

000007ea <__floatunsisf>:
     7ea:	a8 e0       	ldi	r26, 0x08	; 8
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 6c 1d 	jmp	0x3ad8	; 0x3ad8 <__prologue_saves__+0x10>
     7f6:	7b 01       	movw	r14, r22
     7f8:	8c 01       	movw	r16, r24
     7fa:	61 15       	cp	r22, r1
     7fc:	71 05       	cpc	r23, r1
     7fe:	81 05       	cpc	r24, r1
     800:	91 05       	cpc	r25, r1
     802:	19 f4       	brne	.+6      	; 0x80a <__floatunsisf+0x20>
     804:	82 e0       	ldi	r24, 0x02	; 2
     806:	89 83       	std	Y+1, r24	; 0x01
     808:	60 c0       	rjmp	.+192    	; 0x8ca <__stack+0x6b>
     80a:	83 e0       	ldi	r24, 0x03	; 3
     80c:	89 83       	std	Y+1, r24	; 0x01
     80e:	8e e1       	ldi	r24, 0x1E	; 30
     810:	c8 2e       	mov	r12, r24
     812:	d1 2c       	mov	r13, r1
     814:	dc 82       	std	Y+4, r13	; 0x04
     816:	cb 82       	std	Y+3, r12	; 0x03
     818:	ed 82       	std	Y+5, r14	; 0x05
     81a:	fe 82       	std	Y+6, r15	; 0x06
     81c:	0f 83       	std	Y+7, r16	; 0x07
     81e:	18 87       	std	Y+8, r17	; 0x08
     820:	c8 01       	movw	r24, r16
     822:	b7 01       	movw	r22, r14
     824:	0e 94 6e 04 	call	0x8dc	; 0x8dc <__clzsi2>
     828:	fc 01       	movw	r30, r24
     82a:	31 97       	sbiw	r30, 0x01	; 1
     82c:	f7 ff       	sbrs	r31, 7
     82e:	3b c0       	rjmp	.+118    	; 0x8a6 <__stack+0x47>
     830:	22 27       	eor	r18, r18
     832:	33 27       	eor	r19, r19
     834:	2e 1b       	sub	r18, r30
     836:	3f 0b       	sbc	r19, r31
     838:	57 01       	movw	r10, r14
     83a:	68 01       	movw	r12, r16
     83c:	02 2e       	mov	r0, r18
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__floatunsisf+0x5e>
     840:	d6 94       	lsr	r13
     842:	c7 94       	ror	r12
     844:	b7 94       	ror	r11
     846:	a7 94       	ror	r10
     848:	0a 94       	dec	r0
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__floatunsisf+0x56>
     84c:	40 e0       	ldi	r20, 0x00	; 0
     84e:	50 e0       	ldi	r21, 0x00	; 0
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	81 e0       	ldi	r24, 0x01	; 1
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	a0 e0       	ldi	r26, 0x00	; 0
     85a:	b0 e0       	ldi	r27, 0x00	; 0
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	aa 1f       	adc	r26, r26
     864:	bb 1f       	adc	r27, r27
     866:	2a 95       	dec	r18
     868:	d2 f7       	brpl	.-12     	; 0x85e <__floatunsisf+0x74>
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	8e 21       	and	r24, r14
     872:	9f 21       	and	r25, r15
     874:	a0 23       	and	r26, r16
     876:	b1 23       	and	r27, r17
     878:	00 97       	sbiw	r24, 0x00	; 0
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	21 f0       	breq	.+8      	; 0x888 <__stack+0x29>
     880:	41 e0       	ldi	r20, 0x01	; 1
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	4a 29       	or	r20, r10
     88a:	5b 29       	or	r21, r11
     88c:	6c 29       	or	r22, r12
     88e:	7d 29       	or	r23, r13
     890:	4d 83       	std	Y+5, r20	; 0x05
     892:	5e 83       	std	Y+6, r21	; 0x06
     894:	6f 83       	std	Y+7, r22	; 0x07
     896:	78 87       	std	Y+8, r23	; 0x08
     898:	8e e1       	ldi	r24, 0x1E	; 30
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	8e 1b       	sub	r24, r30
     89e:	9f 0b       	sbc	r25, r31
     8a0:	9c 83       	std	Y+4, r25	; 0x04
     8a2:	8b 83       	std	Y+3, r24	; 0x03
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	30 97       	sbiw	r30, 0x00	; 0
     8a8:	81 f0       	breq	.+32     	; 0x8ca <__stack+0x6b>
     8aa:	0e 2e       	mov	r0, r30
     8ac:	04 c0       	rjmp	.+8      	; 0x8b6 <__stack+0x57>
     8ae:	ee 0c       	add	r14, r14
     8b0:	ff 1c       	adc	r15, r15
     8b2:	00 1f       	adc	r16, r16
     8b4:	11 1f       	adc	r17, r17
     8b6:	0a 94       	dec	r0
     8b8:	d2 f7       	brpl	.-12     	; 0x8ae <__stack+0x4f>
     8ba:	ed 82       	std	Y+5, r14	; 0x05
     8bc:	fe 82       	std	Y+6, r15	; 0x06
     8be:	0f 83       	std	Y+7, r16	; 0x07
     8c0:	18 87       	std	Y+8, r17	; 0x08
     8c2:	ce 1a       	sub	r12, r30
     8c4:	df 0a       	sbc	r13, r31
     8c6:	dc 82       	std	Y+4, r13	; 0x04
     8c8:	cb 82       	std	Y+3, r12	; 0x03
     8ca:	1a 82       	std	Y+2, r1	; 0x02
     8cc:	ce 01       	movw	r24, r28
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	0e 94 bd 04 	call	0x97a	; 0x97a <__pack_f>
     8d4:	28 96       	adiw	r28, 0x08	; 8
     8d6:	ea e0       	ldi	r30, 0x0A	; 10
     8d8:	0c 94 88 1d 	jmp	0x3b10	; 0x3b10 <__epilogue_restores__+0x10>

000008dc <__clzsi2>:
     8dc:	ef 92       	push	r14
     8de:	ff 92       	push	r15
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	7b 01       	movw	r14, r22
     8e6:	8c 01       	movw	r16, r24
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	e8 16       	cp	r14, r24
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	f8 06       	cpc	r15, r24
     8f0:	81 e0       	ldi	r24, 0x01	; 1
     8f2:	08 07       	cpc	r16, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	18 07       	cpc	r17, r24
     8f8:	88 f4       	brcc	.+34     	; 0x91c <__clzsi2+0x40>
     8fa:	8f ef       	ldi	r24, 0xFF	; 255
     8fc:	e8 16       	cp	r14, r24
     8fe:	f1 04       	cpc	r15, r1
     900:	01 05       	cpc	r16, r1
     902:	11 05       	cpc	r17, r1
     904:	31 f0       	breq	.+12     	; 0x912 <__clzsi2+0x36>
     906:	28 f0       	brcs	.+10     	; 0x912 <__clzsi2+0x36>
     908:	88 e0       	ldi	r24, 0x08	; 8
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	17 c0       	rjmp	.+46     	; 0x940 <__clzsi2+0x64>
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	12 c0       	rjmp	.+36     	; 0x940 <__clzsi2+0x64>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	e8 16       	cp	r14, r24
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	f8 06       	cpc	r15, r24
     924:	80 e0       	ldi	r24, 0x00	; 0
     926:	08 07       	cpc	r16, r24
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	18 07       	cpc	r17, r24
     92c:	28 f0       	brcs	.+10     	; 0x938 <__clzsi2+0x5c>
     92e:	88 e1       	ldi	r24, 0x18	; 24
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	04 c0       	rjmp	.+8      	; 0x940 <__clzsi2+0x64>
     938:	80 e1       	ldi	r24, 0x10	; 16
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	a0 e0       	ldi	r26, 0x00	; 0
     93e:	b0 e0       	ldi	r27, 0x00	; 0
     940:	20 e2       	ldi	r18, 0x20	; 32
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e0       	ldi	r20, 0x00	; 0
     946:	50 e0       	ldi	r21, 0x00	; 0
     948:	28 1b       	sub	r18, r24
     94a:	39 0b       	sbc	r19, r25
     94c:	4a 0b       	sbc	r20, r26
     94e:	5b 0b       	sbc	r21, r27
     950:	04 c0       	rjmp	.+8      	; 0x95a <__clzsi2+0x7e>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	8a 95       	dec	r24
     95c:	d2 f7       	brpl	.-12     	; 0x952 <__clzsi2+0x76>
     95e:	f7 01       	movw	r30, r14
     960:	e0 59       	subi	r30, 0x90	; 144
     962:	ff 4f       	sbci	r31, 0xFF	; 255
     964:	80 81       	ld	r24, Z
     966:	28 1b       	sub	r18, r24
     968:	31 09       	sbc	r19, r1
     96a:	41 09       	sbc	r20, r1
     96c:	51 09       	sbc	r21, r1
     96e:	c9 01       	movw	r24, r18
     970:	1f 91       	pop	r17
     972:	0f 91       	pop	r16
     974:	ff 90       	pop	r15
     976:	ef 90       	pop	r14
     978:	08 95       	ret

0000097a <__pack_f>:
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	fc 01       	movw	r30, r24
     986:	e4 80       	ldd	r14, Z+4	; 0x04
     988:	f5 80       	ldd	r15, Z+5	; 0x05
     98a:	06 81       	ldd	r16, Z+6	; 0x06
     98c:	17 81       	ldd	r17, Z+7	; 0x07
     98e:	d1 80       	ldd	r13, Z+1	; 0x01
     990:	80 81       	ld	r24, Z
     992:	82 30       	cpi	r24, 0x02	; 2
     994:	48 f4       	brcc	.+18     	; 0x9a8 <__pack_f+0x2e>
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	a0 e1       	ldi	r26, 0x10	; 16
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e8 2a       	or	r14, r24
     9a0:	f9 2a       	or	r15, r25
     9a2:	0a 2b       	or	r16, r26
     9a4:	1b 2b       	or	r17, r27
     9a6:	a5 c0       	rjmp	.+330    	; 0xaf2 <__pack_f+0x178>
     9a8:	84 30       	cpi	r24, 0x04	; 4
     9aa:	09 f4       	brne	.+2      	; 0x9ae <__pack_f+0x34>
     9ac:	9f c0       	rjmp	.+318    	; 0xaec <__pack_f+0x172>
     9ae:	82 30       	cpi	r24, 0x02	; 2
     9b0:	21 f4       	brne	.+8      	; 0x9ba <__pack_f+0x40>
     9b2:	ee 24       	eor	r14, r14
     9b4:	ff 24       	eor	r15, r15
     9b6:	87 01       	movw	r16, r14
     9b8:	05 c0       	rjmp	.+10     	; 0x9c4 <__pack_f+0x4a>
     9ba:	e1 14       	cp	r14, r1
     9bc:	f1 04       	cpc	r15, r1
     9be:	01 05       	cpc	r16, r1
     9c0:	11 05       	cpc	r17, r1
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__pack_f+0x50>
     9c4:	e0 e0       	ldi	r30, 0x00	; 0
     9c6:	f0 e0       	ldi	r31, 0x00	; 0
     9c8:	96 c0       	rjmp	.+300    	; 0xaf6 <__pack_f+0x17c>
     9ca:	62 81       	ldd	r22, Z+2	; 0x02
     9cc:	73 81       	ldd	r23, Z+3	; 0x03
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	62 38       	cpi	r22, 0x82	; 130
     9d2:	79 07       	cpc	r23, r25
     9d4:	0c f0       	brlt	.+2      	; 0x9d8 <__pack_f+0x5e>
     9d6:	5b c0       	rjmp	.+182    	; 0xa8e <__pack_f+0x114>
     9d8:	22 e8       	ldi	r18, 0x82	; 130
     9da:	3f ef       	ldi	r19, 0xFF	; 255
     9dc:	26 1b       	sub	r18, r22
     9de:	37 0b       	sbc	r19, r23
     9e0:	2a 31       	cpi	r18, 0x1A	; 26
     9e2:	31 05       	cpc	r19, r1
     9e4:	2c f0       	brlt	.+10     	; 0x9f0 <__pack_f+0x76>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	2a c0       	rjmp	.+84     	; 0xa44 <__pack_f+0xca>
     9f0:	b8 01       	movw	r22, r16
     9f2:	a7 01       	movw	r20, r14
     9f4:	02 2e       	mov	r0, r18
     9f6:	04 c0       	rjmp	.+8      	; 0xa00 <__pack_f+0x86>
     9f8:	76 95       	lsr	r23
     9fa:	67 95       	ror	r22
     9fc:	57 95       	ror	r21
     9fe:	47 95       	ror	r20
     a00:	0a 94       	dec	r0
     a02:	d2 f7       	brpl	.-12     	; 0x9f8 <__pack_f+0x7e>
     a04:	81 e0       	ldi	r24, 0x01	; 1
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	a0 e0       	ldi	r26, 0x00	; 0
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__pack_f+0x9c>
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	aa 1f       	adc	r26, r26
     a14:	bb 1f       	adc	r27, r27
     a16:	2a 95       	dec	r18
     a18:	d2 f7       	brpl	.-12     	; 0xa0e <__pack_f+0x94>
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	a1 09       	sbc	r26, r1
     a1e:	b1 09       	sbc	r27, r1
     a20:	8e 21       	and	r24, r14
     a22:	9f 21       	and	r25, r15
     a24:	a0 23       	and	r26, r16
     a26:	b1 23       	and	r27, r17
     a28:	00 97       	sbiw	r24, 0x00	; 0
     a2a:	a1 05       	cpc	r26, r1
     a2c:	b1 05       	cpc	r27, r1
     a2e:	21 f0       	breq	.+8      	; 0xa38 <__pack_f+0xbe>
     a30:	81 e0       	ldi	r24, 0x01	; 1
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	a0 e0       	ldi	r26, 0x00	; 0
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	9a 01       	movw	r18, r20
     a3a:	ab 01       	movw	r20, r22
     a3c:	28 2b       	or	r18, r24
     a3e:	39 2b       	or	r19, r25
     a40:	4a 2b       	or	r20, r26
     a42:	5b 2b       	or	r21, r27
     a44:	da 01       	movw	r26, r20
     a46:	c9 01       	movw	r24, r18
     a48:	8f 77       	andi	r24, 0x7F	; 127
     a4a:	90 70       	andi	r25, 0x00	; 0
     a4c:	a0 70       	andi	r26, 0x00	; 0
     a4e:	b0 70       	andi	r27, 0x00	; 0
     a50:	80 34       	cpi	r24, 0x40	; 64
     a52:	91 05       	cpc	r25, r1
     a54:	a1 05       	cpc	r26, r1
     a56:	b1 05       	cpc	r27, r1
     a58:	39 f4       	brne	.+14     	; 0xa68 <__pack_f+0xee>
     a5a:	27 ff       	sbrs	r18, 7
     a5c:	09 c0       	rjmp	.+18     	; 0xa70 <__pack_f+0xf6>
     a5e:	20 5c       	subi	r18, 0xC0	; 192
     a60:	3f 4f       	sbci	r19, 0xFF	; 255
     a62:	4f 4f       	sbci	r20, 0xFF	; 255
     a64:	5f 4f       	sbci	r21, 0xFF	; 255
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__pack_f+0xf6>
     a68:	21 5c       	subi	r18, 0xC1	; 193
     a6a:	3f 4f       	sbci	r19, 0xFF	; 255
     a6c:	4f 4f       	sbci	r20, 0xFF	; 255
     a6e:	5f 4f       	sbci	r21, 0xFF	; 255
     a70:	e0 e0       	ldi	r30, 0x00	; 0
     a72:	f0 e0       	ldi	r31, 0x00	; 0
     a74:	20 30       	cpi	r18, 0x00	; 0
     a76:	a0 e0       	ldi	r26, 0x00	; 0
     a78:	3a 07       	cpc	r19, r26
     a7a:	a0 e0       	ldi	r26, 0x00	; 0
     a7c:	4a 07       	cpc	r20, r26
     a7e:	a0 e4       	ldi	r26, 0x40	; 64
     a80:	5a 07       	cpc	r21, r26
     a82:	10 f0       	brcs	.+4      	; 0xa88 <__pack_f+0x10e>
     a84:	e1 e0       	ldi	r30, 0x01	; 1
     a86:	f0 e0       	ldi	r31, 0x00	; 0
     a88:	79 01       	movw	r14, r18
     a8a:	8a 01       	movw	r16, r20
     a8c:	27 c0       	rjmp	.+78     	; 0xadc <__pack_f+0x162>
     a8e:	60 38       	cpi	r22, 0x80	; 128
     a90:	71 05       	cpc	r23, r1
     a92:	64 f5       	brge	.+88     	; 0xaec <__pack_f+0x172>
     a94:	fb 01       	movw	r30, r22
     a96:	e1 58       	subi	r30, 0x81	; 129
     a98:	ff 4f       	sbci	r31, 0xFF	; 255
     a9a:	d8 01       	movw	r26, r16
     a9c:	c7 01       	movw	r24, r14
     a9e:	8f 77       	andi	r24, 0x7F	; 127
     aa0:	90 70       	andi	r25, 0x00	; 0
     aa2:	a0 70       	andi	r26, 0x00	; 0
     aa4:	b0 70       	andi	r27, 0x00	; 0
     aa6:	80 34       	cpi	r24, 0x40	; 64
     aa8:	91 05       	cpc	r25, r1
     aaa:	a1 05       	cpc	r26, r1
     aac:	b1 05       	cpc	r27, r1
     aae:	39 f4       	brne	.+14     	; 0xabe <__pack_f+0x144>
     ab0:	e7 fe       	sbrs	r14, 7
     ab2:	0d c0       	rjmp	.+26     	; 0xace <__pack_f+0x154>
     ab4:	80 e4       	ldi	r24, 0x40	; 64
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	04 c0       	rjmp	.+8      	; 0xac6 <__pack_f+0x14c>
     abe:	8f e3       	ldi	r24, 0x3F	; 63
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	a0 e0       	ldi	r26, 0x00	; 0
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e8 0e       	add	r14, r24
     ac8:	f9 1e       	adc	r15, r25
     aca:	0a 1f       	adc	r16, r26
     acc:	1b 1f       	adc	r17, r27
     ace:	17 ff       	sbrs	r17, 7
     ad0:	05 c0       	rjmp	.+10     	; 0xadc <__pack_f+0x162>
     ad2:	16 95       	lsr	r17
     ad4:	07 95       	ror	r16
     ad6:	f7 94       	ror	r15
     ad8:	e7 94       	ror	r14
     ada:	31 96       	adiw	r30, 0x01	; 1
     adc:	87 e0       	ldi	r24, 0x07	; 7
     ade:	16 95       	lsr	r17
     ae0:	07 95       	ror	r16
     ae2:	f7 94       	ror	r15
     ae4:	e7 94       	ror	r14
     ae6:	8a 95       	dec	r24
     ae8:	d1 f7       	brne	.-12     	; 0xade <__pack_f+0x164>
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x17c>
     aec:	ee 24       	eor	r14, r14
     aee:	ff 24       	eor	r15, r15
     af0:	87 01       	movw	r16, r14
     af2:	ef ef       	ldi	r30, 0xFF	; 255
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	6e 2f       	mov	r22, r30
     af8:	67 95       	ror	r22
     afa:	66 27       	eor	r22, r22
     afc:	67 95       	ror	r22
     afe:	90 2f       	mov	r25, r16
     b00:	9f 77       	andi	r25, 0x7F	; 127
     b02:	d7 94       	ror	r13
     b04:	dd 24       	eor	r13, r13
     b06:	d7 94       	ror	r13
     b08:	8e 2f       	mov	r24, r30
     b0a:	86 95       	lsr	r24
     b0c:	49 2f       	mov	r20, r25
     b0e:	46 2b       	or	r20, r22
     b10:	58 2f       	mov	r21, r24
     b12:	5d 29       	or	r21, r13
     b14:	b7 01       	movw	r22, r14
     b16:	ca 01       	movw	r24, r20
     b18:	1f 91       	pop	r17
     b1a:	0f 91       	pop	r16
     b1c:	ff 90       	pop	r15
     b1e:	ef 90       	pop	r14
     b20:	df 90       	pop	r13
     b22:	08 95       	ret

00000b24 <__unpack_f>:
     b24:	fc 01       	movw	r30, r24
     b26:	db 01       	movw	r26, r22
     b28:	40 81       	ld	r20, Z
     b2a:	51 81       	ldd	r21, Z+1	; 0x01
     b2c:	22 81       	ldd	r18, Z+2	; 0x02
     b2e:	62 2f       	mov	r22, r18
     b30:	6f 77       	andi	r22, 0x7F	; 127
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	22 1f       	adc	r18, r18
     b36:	22 27       	eor	r18, r18
     b38:	22 1f       	adc	r18, r18
     b3a:	93 81       	ldd	r25, Z+3	; 0x03
     b3c:	89 2f       	mov	r24, r25
     b3e:	88 0f       	add	r24, r24
     b40:	82 2b       	or	r24, r18
     b42:	28 2f       	mov	r18, r24
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	99 1f       	adc	r25, r25
     b48:	99 27       	eor	r25, r25
     b4a:	99 1f       	adc	r25, r25
     b4c:	11 96       	adiw	r26, 0x01	; 1
     b4e:	9c 93       	st	X, r25
     b50:	11 97       	sbiw	r26, 0x01	; 1
     b52:	21 15       	cp	r18, r1
     b54:	31 05       	cpc	r19, r1
     b56:	a9 f5       	brne	.+106    	; 0xbc2 <__unpack_f+0x9e>
     b58:	41 15       	cp	r20, r1
     b5a:	51 05       	cpc	r21, r1
     b5c:	61 05       	cpc	r22, r1
     b5e:	71 05       	cpc	r23, r1
     b60:	11 f4       	brne	.+4      	; 0xb66 <__unpack_f+0x42>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	37 c0       	rjmp	.+110    	; 0xbd4 <__unpack_f+0xb0>
     b66:	82 e8       	ldi	r24, 0x82	; 130
     b68:	9f ef       	ldi	r25, 0xFF	; 255
     b6a:	13 96       	adiw	r26, 0x03	; 3
     b6c:	9c 93       	st	X, r25
     b6e:	8e 93       	st	-X, r24
     b70:	12 97       	sbiw	r26, 0x02	; 2
     b72:	9a 01       	movw	r18, r20
     b74:	ab 01       	movw	r20, r22
     b76:	67 e0       	ldi	r22, 0x07	; 7
     b78:	22 0f       	add	r18, r18
     b7a:	33 1f       	adc	r19, r19
     b7c:	44 1f       	adc	r20, r20
     b7e:	55 1f       	adc	r21, r21
     b80:	6a 95       	dec	r22
     b82:	d1 f7       	brne	.-12     	; 0xb78 <__unpack_f+0x54>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	8c 93       	st	X, r24
     b88:	0d c0       	rjmp	.+26     	; 0xba4 <__unpack_f+0x80>
     b8a:	22 0f       	add	r18, r18
     b8c:	33 1f       	adc	r19, r19
     b8e:	44 1f       	adc	r20, r20
     b90:	55 1f       	adc	r21, r21
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	8d 91       	ld	r24, X+
     b96:	9c 91       	ld	r25, X
     b98:	13 97       	sbiw	r26, 0x03	; 3
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	13 96       	adiw	r26, 0x03	; 3
     b9e:	9c 93       	st	X, r25
     ba0:	8e 93       	st	-X, r24
     ba2:	12 97       	sbiw	r26, 0x02	; 2
     ba4:	20 30       	cpi	r18, 0x00	; 0
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	38 07       	cpc	r19, r24
     baa:	80 e0       	ldi	r24, 0x00	; 0
     bac:	48 07       	cpc	r20, r24
     bae:	80 e4       	ldi	r24, 0x40	; 64
     bb0:	58 07       	cpc	r21, r24
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__unpack_f+0x66>
     bb4:	14 96       	adiw	r26, 0x04	; 4
     bb6:	2d 93       	st	X+, r18
     bb8:	3d 93       	st	X+, r19
     bba:	4d 93       	st	X+, r20
     bbc:	5c 93       	st	X, r21
     bbe:	17 97       	sbiw	r26, 0x07	; 7
     bc0:	08 95       	ret
     bc2:	2f 3f       	cpi	r18, 0xFF	; 255
     bc4:	31 05       	cpc	r19, r1
     bc6:	79 f4       	brne	.+30     	; 0xbe6 <__unpack_f+0xc2>
     bc8:	41 15       	cp	r20, r1
     bca:	51 05       	cpc	r21, r1
     bcc:	61 05       	cpc	r22, r1
     bce:	71 05       	cpc	r23, r1
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__unpack_f+0xb4>
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	8c 93       	st	X, r24
     bd6:	08 95       	ret
     bd8:	64 ff       	sbrs	r22, 4
     bda:	03 c0       	rjmp	.+6      	; 0xbe2 <__unpack_f+0xbe>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	8c 93       	st	X, r24
     be0:	12 c0       	rjmp	.+36     	; 0xc06 <__unpack_f+0xe2>
     be2:	1c 92       	st	X, r1
     be4:	10 c0       	rjmp	.+32     	; 0xc06 <__unpack_f+0xe2>
     be6:	2f 57       	subi	r18, 0x7F	; 127
     be8:	30 40       	sbci	r19, 0x00	; 0
     bea:	13 96       	adiw	r26, 0x03	; 3
     bec:	3c 93       	st	X, r19
     bee:	2e 93       	st	-X, r18
     bf0:	12 97       	sbiw	r26, 0x02	; 2
     bf2:	83 e0       	ldi	r24, 0x03	; 3
     bf4:	8c 93       	st	X, r24
     bf6:	87 e0       	ldi	r24, 0x07	; 7
     bf8:	44 0f       	add	r20, r20
     bfa:	55 1f       	adc	r21, r21
     bfc:	66 1f       	adc	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	8a 95       	dec	r24
     c02:	d1 f7       	brne	.-12     	; 0xbf8 <__unpack_f+0xd4>
     c04:	70 64       	ori	r23, 0x40	; 64
     c06:	14 96       	adiw	r26, 0x04	; 4
     c08:	4d 93       	st	X+, r20
     c0a:	5d 93       	st	X+, r21
     c0c:	6d 93       	st	X+, r22
     c0e:	7c 93       	st	X, r23
     c10:	17 97       	sbiw	r26, 0x07	; 7
     c12:	08 95       	ret

00000c14 <__fpcmp_parts_f>:
     c14:	1f 93       	push	r17
     c16:	dc 01       	movw	r26, r24
     c18:	fb 01       	movw	r30, r22
     c1a:	9c 91       	ld	r25, X
     c1c:	92 30       	cpi	r25, 0x02	; 2
     c1e:	08 f4       	brcc	.+2      	; 0xc22 <__fpcmp_parts_f+0xe>
     c20:	47 c0       	rjmp	.+142    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c22:	80 81       	ld	r24, Z
     c24:	82 30       	cpi	r24, 0x02	; 2
     c26:	08 f4       	brcc	.+2      	; 0xc2a <__fpcmp_parts_f+0x16>
     c28:	43 c0       	rjmp	.+134    	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c2a:	94 30       	cpi	r25, 0x04	; 4
     c2c:	51 f4       	brne	.+20     	; 0xc42 <__fpcmp_parts_f+0x2e>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	84 30       	cpi	r24, 0x04	; 4
     c34:	99 f5       	brne	.+102    	; 0xc9c <__fpcmp_parts_f+0x88>
     c36:	81 81       	ldd	r24, Z+1	; 0x01
     c38:	68 2f       	mov	r22, r24
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	61 1b       	sub	r22, r17
     c3e:	71 09       	sbc	r23, r1
     c40:	3f c0       	rjmp	.+126    	; 0xcc0 <__fpcmp_parts_f+0xac>
     c42:	84 30       	cpi	r24, 0x04	; 4
     c44:	21 f0       	breq	.+8      	; 0xc4e <__fpcmp_parts_f+0x3a>
     c46:	92 30       	cpi	r25, 0x02	; 2
     c48:	31 f4       	brne	.+12     	; 0xc56 <__fpcmp_parts_f+0x42>
     c4a:	82 30       	cpi	r24, 0x02	; 2
     c4c:	b9 f1       	breq	.+110    	; 0xcbc <__fpcmp_parts_f+0xa8>
     c4e:	81 81       	ldd	r24, Z+1	; 0x01
     c50:	88 23       	and	r24, r24
     c52:	89 f1       	breq	.+98     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     c54:	2d c0       	rjmp	.+90     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     c56:	11 96       	adiw	r26, 0x01	; 1
     c58:	1c 91       	ld	r17, X
     c5a:	11 97       	sbiw	r26, 0x01	; 1
     c5c:	82 30       	cpi	r24, 0x02	; 2
     c5e:	f1 f0       	breq	.+60     	; 0xc9c <__fpcmp_parts_f+0x88>
     c60:	81 81       	ldd	r24, Z+1	; 0x01
     c62:	18 17       	cp	r17, r24
     c64:	d9 f4       	brne	.+54     	; 0xc9c <__fpcmp_parts_f+0x88>
     c66:	12 96       	adiw	r26, 0x02	; 2
     c68:	2d 91       	ld	r18, X+
     c6a:	3c 91       	ld	r19, X
     c6c:	13 97       	sbiw	r26, 0x03	; 3
     c6e:	82 81       	ldd	r24, Z+2	; 0x02
     c70:	93 81       	ldd	r25, Z+3	; 0x03
     c72:	82 17       	cp	r24, r18
     c74:	93 07       	cpc	r25, r19
     c76:	94 f0       	brlt	.+36     	; 0xc9c <__fpcmp_parts_f+0x88>
     c78:	28 17       	cp	r18, r24
     c7a:	39 07       	cpc	r19, r25
     c7c:	bc f0       	brlt	.+46     	; 0xcac <__fpcmp_parts_f+0x98>
     c7e:	14 96       	adiw	r26, 0x04	; 4
     c80:	8d 91       	ld	r24, X+
     c82:	9d 91       	ld	r25, X+
     c84:	0d 90       	ld	r0, X+
     c86:	bc 91       	ld	r27, X
     c88:	a0 2d       	mov	r26, r0
     c8a:	24 81       	ldd	r18, Z+4	; 0x04
     c8c:	35 81       	ldd	r19, Z+5	; 0x05
     c8e:	46 81       	ldd	r20, Z+6	; 0x06
     c90:	57 81       	ldd	r21, Z+7	; 0x07
     c92:	28 17       	cp	r18, r24
     c94:	39 07       	cpc	r19, r25
     c96:	4a 07       	cpc	r20, r26
     c98:	5b 07       	cpc	r21, r27
     c9a:	18 f4       	brcc	.+6      	; 0xca2 <__fpcmp_parts_f+0x8e>
     c9c:	11 23       	and	r17, r17
     c9e:	41 f0       	breq	.+16     	; 0xcb0 <__fpcmp_parts_f+0x9c>
     ca0:	0a c0       	rjmp	.+20     	; 0xcb6 <__fpcmp_parts_f+0xa2>
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a4 07       	cpc	r26, r20
     ca8:	b5 07       	cpc	r27, r21
     caa:	40 f4       	brcc	.+16     	; 0xcbc <__fpcmp_parts_f+0xa8>
     cac:	11 23       	and	r17, r17
     cae:	19 f0       	breq	.+6      	; 0xcb6 <__fpcmp_parts_f+0xa2>
     cb0:	61 e0       	ldi	r22, 0x01	; 1
     cb2:	70 e0       	ldi	r23, 0x00	; 0
     cb4:	05 c0       	rjmp	.+10     	; 0xcc0 <__fpcmp_parts_f+0xac>
     cb6:	6f ef       	ldi	r22, 0xFF	; 255
     cb8:	7f ef       	ldi	r23, 0xFF	; 255
     cba:	02 c0       	rjmp	.+4      	; 0xcc0 <__fpcmp_parts_f+0xac>
     cbc:	60 e0       	ldi	r22, 0x00	; 0
     cbe:	70 e0       	ldi	r23, 0x00	; 0
     cc0:	cb 01       	movw	r24, r22
     cc2:	1f 91       	pop	r17
     cc4:	08 95       	ret

00000cc6 <DIO_VidSetPinDirection>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>

void DIO_VidSetPinDirection	( u8 LOC_u8Port, u8 LOC_u8Pin, u8 LOC_u8State)
{
     cc6:	df 93       	push	r29
     cc8:	cf 93       	push	r28
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	27 97       	sbiw	r28, 0x07	; 7
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	6a 83       	std	Y+2, r22	; 0x02
     cde:	4b 83       	std	Y+3, r20	; 0x03
	if ( OUTPUT==LOC_u8State)
     ce0:	8b 81       	ldd	r24, Y+3	; 0x03
     ce2:	81 30       	cpi	r24, 0x01	; 1
     ce4:	09 f0       	breq	.+2      	; 0xce8 <DIO_VidSetPinDirection+0x22>
     ce6:	6f c0       	rjmp	.+222    	; 0xdc6 <DIO_VidSetPinDirection+0x100>
	{
		switch (LOC_u8Port)
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	28 2f       	mov	r18, r24
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	3f 83       	std	Y+7, r19	; 0x07
     cf0:	2e 83       	std	Y+6, r18	; 0x06
     cf2:	8e 81       	ldd	r24, Y+6	; 0x06
     cf4:	9f 81       	ldd	r25, Y+7	; 0x07
     cf6:	81 30       	cpi	r24, 0x01	; 1
     cf8:	91 05       	cpc	r25, r1
     cfa:	49 f1       	breq	.+82     	; 0xd4e <DIO_VidSetPinDirection+0x88>
     cfc:	2e 81       	ldd	r18, Y+6	; 0x06
     cfe:	3f 81       	ldd	r19, Y+7	; 0x07
     d00:	22 30       	cpi	r18, 0x02	; 2
     d02:	31 05       	cpc	r19, r1
     d04:	2c f4       	brge	.+10     	; 0xd10 <DIO_VidSetPinDirection+0x4a>
     d06:	8e 81       	ldd	r24, Y+6	; 0x06
     d08:	9f 81       	ldd	r25, Y+7	; 0x07
     d0a:	00 97       	sbiw	r24, 0x00	; 0
     d0c:	61 f0       	breq	.+24     	; 0xd26 <DIO_VidSetPinDirection+0x60>
     d0e:	d2 c0       	rjmp	.+420    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
     d10:	2e 81       	ldd	r18, Y+6	; 0x06
     d12:	3f 81       	ldd	r19, Y+7	; 0x07
     d14:	22 30       	cpi	r18, 0x02	; 2
     d16:	31 05       	cpc	r19, r1
     d18:	71 f1       	breq	.+92     	; 0xd76 <DIO_VidSetPinDirection+0xb0>
     d1a:	8e 81       	ldd	r24, Y+6	; 0x06
     d1c:	9f 81       	ldd	r25, Y+7	; 0x07
     d1e:	83 30       	cpi	r24, 0x03	; 3
     d20:	91 05       	cpc	r25, r1
     d22:	e9 f1       	breq	.+122    	; 0xd9e <DIO_VidSetPinDirection+0xd8>
     d24:	c7 c0       	rjmp	.+398    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		{
		case 0: SET_BIT(DDRA, LOC_u8Pin); break;
     d26:	aa e3       	ldi	r26, 0x3A	; 58
     d28:	b0 e0       	ldi	r27, 0x00	; 0
     d2a:	ea e3       	ldi	r30, 0x3A	; 58
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	80 81       	ld	r24, Z
     d30:	48 2f       	mov	r20, r24
     d32:	8a 81       	ldd	r24, Y+2	; 0x02
     d34:	28 2f       	mov	r18, r24
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	81 e0       	ldi	r24, 0x01	; 1
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	02 2e       	mov	r0, r18
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <DIO_VidSetPinDirection+0x7e>
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	0a 94       	dec	r0
     d46:	e2 f7       	brpl	.-8      	; 0xd40 <DIO_VidSetPinDirection+0x7a>
     d48:	84 2b       	or	r24, r20
     d4a:	8c 93       	st	X, r24
     d4c:	b3 c0       	rjmp	.+358    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 1: SET_BIT(DDRB, LOC_u8Pin); break;
     d4e:	a7 e3       	ldi	r26, 0x37	; 55
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	e7 e3       	ldi	r30, 0x37	; 55
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	80 81       	ld	r24, Z
     d58:	48 2f       	mov	r20, r24
     d5a:	8a 81       	ldd	r24, Y+2	; 0x02
     d5c:	28 2f       	mov	r18, r24
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	81 e0       	ldi	r24, 0x01	; 1
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	02 2e       	mov	r0, r18
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <DIO_VidSetPinDirection+0xa6>
     d68:	88 0f       	add	r24, r24
     d6a:	99 1f       	adc	r25, r25
     d6c:	0a 94       	dec	r0
     d6e:	e2 f7       	brpl	.-8      	; 0xd68 <DIO_VidSetPinDirection+0xa2>
     d70:	84 2b       	or	r24, r20
     d72:	8c 93       	st	X, r24
     d74:	9f c0       	rjmp	.+318    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 2: SET_BIT(DDRC, LOC_u8Pin); break;
     d76:	a4 e3       	ldi	r26, 0x34	; 52
     d78:	b0 e0       	ldi	r27, 0x00	; 0
     d7a:	e4 e3       	ldi	r30, 0x34	; 52
     d7c:	f0 e0       	ldi	r31, 0x00	; 0
     d7e:	80 81       	ld	r24, Z
     d80:	48 2f       	mov	r20, r24
     d82:	8a 81       	ldd	r24, Y+2	; 0x02
     d84:	28 2f       	mov	r18, r24
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	81 e0       	ldi	r24, 0x01	; 1
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	02 2e       	mov	r0, r18
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <DIO_VidSetPinDirection+0xce>
     d90:	88 0f       	add	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	0a 94       	dec	r0
     d96:	e2 f7       	brpl	.-8      	; 0xd90 <DIO_VidSetPinDirection+0xca>
     d98:	84 2b       	or	r24, r20
     d9a:	8c 93       	st	X, r24
     d9c:	8b c0       	rjmp	.+278    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 3: SET_BIT(DDRD, LOC_u8Pin); break;
     d9e:	a1 e3       	ldi	r26, 0x31	; 49
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	e1 e3       	ldi	r30, 0x31	; 49
     da4:	f0 e0       	ldi	r31, 0x00	; 0
     da6:	80 81       	ld	r24, Z
     da8:	48 2f       	mov	r20, r24
     daa:	8a 81       	ldd	r24, Y+2	; 0x02
     dac:	28 2f       	mov	r18, r24
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	02 2e       	mov	r0, r18
     db6:	02 c0       	rjmp	.+4      	; 0xdbc <DIO_VidSetPinDirection+0xf6>
     db8:	88 0f       	add	r24, r24
     dba:	99 1f       	adc	r25, r25
     dbc:	0a 94       	dec	r0
     dbe:	e2 f7       	brpl	.-8      	; 0xdb8 <DIO_VidSetPinDirection+0xf2>
     dc0:	84 2b       	or	r24, r20
     dc2:	8c 93       	st	X, r24
     dc4:	77 c0       	rjmp	.+238    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		}
	}
	else if (INPUT==LOC_u8State)
     dc6:	8b 81       	ldd	r24, Y+3	; 0x03
     dc8:	88 23       	and	r24, r24
     dca:	09 f0       	breq	.+2      	; 0xdce <DIO_VidSetPinDirection+0x108>
     dcc:	73 c0       	rjmp	.+230    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
	{
		switch (LOC_u8Port)
     dce:	89 81       	ldd	r24, Y+1	; 0x01
     dd0:	28 2f       	mov	r18, r24
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	3d 83       	std	Y+5, r19	; 0x05
     dd6:	2c 83       	std	Y+4, r18	; 0x04
     dd8:	8c 81       	ldd	r24, Y+4	; 0x04
     dda:	9d 81       	ldd	r25, Y+5	; 0x05
     ddc:	81 30       	cpi	r24, 0x01	; 1
     dde:	91 05       	cpc	r25, r1
     de0:	59 f1       	breq	.+86     	; 0xe38 <DIO_VidSetPinDirection+0x172>
     de2:	2c 81       	ldd	r18, Y+4	; 0x04
     de4:	3d 81       	ldd	r19, Y+5	; 0x05
     de6:	22 30       	cpi	r18, 0x02	; 2
     de8:	31 05       	cpc	r19, r1
     dea:	2c f4       	brge	.+10     	; 0xdf6 <DIO_VidSetPinDirection+0x130>
     dec:	8c 81       	ldd	r24, Y+4	; 0x04
     dee:	9d 81       	ldd	r25, Y+5	; 0x05
     df0:	00 97       	sbiw	r24, 0x00	; 0
     df2:	69 f0       	breq	.+26     	; 0xe0e <DIO_VidSetPinDirection+0x148>
     df4:	5f c0       	rjmp	.+190    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
     df6:	2c 81       	ldd	r18, Y+4	; 0x04
     df8:	3d 81       	ldd	r19, Y+5	; 0x05
     dfa:	22 30       	cpi	r18, 0x02	; 2
     dfc:	31 05       	cpc	r19, r1
     dfe:	89 f1       	breq	.+98     	; 0xe62 <DIO_VidSetPinDirection+0x19c>
     e00:	8c 81       	ldd	r24, Y+4	; 0x04
     e02:	9d 81       	ldd	r25, Y+5	; 0x05
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	91 05       	cpc	r25, r1
     e08:	09 f4       	brne	.+2      	; 0xe0c <DIO_VidSetPinDirection+0x146>
     e0a:	40 c0       	rjmp	.+128    	; 0xe8c <DIO_VidSetPinDirection+0x1c6>
     e0c:	53 c0       	rjmp	.+166    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		{
		case 0: CLR_BIT(DDRA, LOC_u8Pin); break;
     e0e:	aa e3       	ldi	r26, 0x3A	; 58
     e10:	b0 e0       	ldi	r27, 0x00	; 0
     e12:	ea e3       	ldi	r30, 0x3A	; 58
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	80 81       	ld	r24, Z
     e18:	48 2f       	mov	r20, r24
     e1a:	8a 81       	ldd	r24, Y+2	; 0x02
     e1c:	28 2f       	mov	r18, r24
     e1e:	30 e0       	ldi	r19, 0x00	; 0
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	02 2e       	mov	r0, r18
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <DIO_VidSetPinDirection+0x166>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	0a 94       	dec	r0
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <DIO_VidSetPinDirection+0x162>
     e30:	80 95       	com	r24
     e32:	84 23       	and	r24, r20
     e34:	8c 93       	st	X, r24
     e36:	3e c0       	rjmp	.+124    	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 1: CLR_BIT(DDRB, LOC_u8Pin); break;
     e38:	a7 e3       	ldi	r26, 0x37	; 55
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	e7 e3       	ldi	r30, 0x37	; 55
     e3e:	f0 e0       	ldi	r31, 0x00	; 0
     e40:	80 81       	ld	r24, Z
     e42:	48 2f       	mov	r20, r24
     e44:	8a 81       	ldd	r24, Y+2	; 0x02
     e46:	28 2f       	mov	r18, r24
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	81 e0       	ldi	r24, 0x01	; 1
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	02 2e       	mov	r0, r18
     e50:	02 c0       	rjmp	.+4      	; 0xe56 <DIO_VidSetPinDirection+0x190>
     e52:	88 0f       	add	r24, r24
     e54:	99 1f       	adc	r25, r25
     e56:	0a 94       	dec	r0
     e58:	e2 f7       	brpl	.-8      	; 0xe52 <DIO_VidSetPinDirection+0x18c>
     e5a:	80 95       	com	r24
     e5c:	84 23       	and	r24, r20
     e5e:	8c 93       	st	X, r24
     e60:	29 c0       	rjmp	.+82     	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 2: CLR_BIT(DDRC, LOC_u8Pin); break;
     e62:	a4 e3       	ldi	r26, 0x34	; 52
     e64:	b0 e0       	ldi	r27, 0x00	; 0
     e66:	e4 e3       	ldi	r30, 0x34	; 52
     e68:	f0 e0       	ldi	r31, 0x00	; 0
     e6a:	80 81       	ld	r24, Z
     e6c:	48 2f       	mov	r20, r24
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	28 2f       	mov	r18, r24
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	02 2e       	mov	r0, r18
     e7a:	02 c0       	rjmp	.+4      	; 0xe80 <DIO_VidSetPinDirection+0x1ba>
     e7c:	88 0f       	add	r24, r24
     e7e:	99 1f       	adc	r25, r25
     e80:	0a 94       	dec	r0
     e82:	e2 f7       	brpl	.-8      	; 0xe7c <DIO_VidSetPinDirection+0x1b6>
     e84:	80 95       	com	r24
     e86:	84 23       	and	r24, r20
     e88:	8c 93       	st	X, r24
     e8a:	14 c0       	rjmp	.+40     	; 0xeb4 <DIO_VidSetPinDirection+0x1ee>
		case 3: CLR_BIT(DDRD, LOC_u8Pin); break;
     e8c:	a1 e3       	ldi	r26, 0x31	; 49
     e8e:	b0 e0       	ldi	r27, 0x00	; 0
     e90:	e1 e3       	ldi	r30, 0x31	; 49
     e92:	f0 e0       	ldi	r31, 0x00	; 0
     e94:	80 81       	ld	r24, Z
     e96:	48 2f       	mov	r20, r24
     e98:	8a 81       	ldd	r24, Y+2	; 0x02
     e9a:	28 2f       	mov	r18, r24
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	81 e0       	ldi	r24, 0x01	; 1
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	02 2e       	mov	r0, r18
     ea4:	02 c0       	rjmp	.+4      	; 0xeaa <DIO_VidSetPinDirection+0x1e4>
     ea6:	88 0f       	add	r24, r24
     ea8:	99 1f       	adc	r25, r25
     eaa:	0a 94       	dec	r0
     eac:	e2 f7       	brpl	.-8      	; 0xea6 <DIO_VidSetPinDirection+0x1e0>
     eae:	80 95       	com	r24
     eb0:	84 23       	and	r24, r20
     eb2:	8c 93       	st	X, r24
		}
	}
}
     eb4:	27 96       	adiw	r28, 0x07	; 7
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	de bf       	out	0x3e, r29	; 62
     ebc:	0f be       	out	0x3f, r0	; 63
     ebe:	cd bf       	out	0x3d, r28	; 61
     ec0:	cf 91       	pop	r28
     ec2:	df 91       	pop	r29
     ec4:	08 95       	ret

00000ec6 <DIO_VidSetPinValue>:

void DIO_VidSetPinValue	( u8 LOC_u8Port, u8 LOC_u8Pin, u8 LOC_u8Value)
{
     ec6:	df 93       	push	r29
     ec8:	cf 93       	push	r28
     eca:	cd b7       	in	r28, 0x3d	; 61
     ecc:	de b7       	in	r29, 0x3e	; 62
     ece:	27 97       	sbiw	r28, 0x07	; 7
     ed0:	0f b6       	in	r0, 0x3f	; 63
     ed2:	f8 94       	cli
     ed4:	de bf       	out	0x3e, r29	; 62
     ed6:	0f be       	out	0x3f, r0	; 63
     ed8:	cd bf       	out	0x3d, r28	; 61
     eda:	89 83       	std	Y+1, r24	; 0x01
     edc:	6a 83       	std	Y+2, r22	; 0x02
     ede:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1==LOC_u8Value)
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	81 30       	cpi	r24, 0x01	; 1
     ee4:	09 f0       	breq	.+2      	; 0xee8 <DIO_VidSetPinValue+0x22>
     ee6:	6f c0       	rjmp	.+222    	; 0xfc6 <DIO_VidSetPinValue+0x100>
	{
		switch (LOC_u8Port)
     ee8:	89 81       	ldd	r24, Y+1	; 0x01
     eea:	28 2f       	mov	r18, r24
     eec:	30 e0       	ldi	r19, 0x00	; 0
     eee:	3f 83       	std	Y+7, r19	; 0x07
     ef0:	2e 83       	std	Y+6, r18	; 0x06
     ef2:	8e 81       	ldd	r24, Y+6	; 0x06
     ef4:	9f 81       	ldd	r25, Y+7	; 0x07
     ef6:	81 30       	cpi	r24, 0x01	; 1
     ef8:	91 05       	cpc	r25, r1
     efa:	49 f1       	breq	.+82     	; 0xf4e <DIO_VidSetPinValue+0x88>
     efc:	2e 81       	ldd	r18, Y+6	; 0x06
     efe:	3f 81       	ldd	r19, Y+7	; 0x07
     f00:	22 30       	cpi	r18, 0x02	; 2
     f02:	31 05       	cpc	r19, r1
     f04:	2c f4       	brge	.+10     	; 0xf10 <DIO_VidSetPinValue+0x4a>
     f06:	8e 81       	ldd	r24, Y+6	; 0x06
     f08:	9f 81       	ldd	r25, Y+7	; 0x07
     f0a:	00 97       	sbiw	r24, 0x00	; 0
     f0c:	61 f0       	breq	.+24     	; 0xf26 <DIO_VidSetPinValue+0x60>
     f0e:	d2 c0       	rjmp	.+420    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
     f10:	2e 81       	ldd	r18, Y+6	; 0x06
     f12:	3f 81       	ldd	r19, Y+7	; 0x07
     f14:	22 30       	cpi	r18, 0x02	; 2
     f16:	31 05       	cpc	r19, r1
     f18:	71 f1       	breq	.+92     	; 0xf76 <DIO_VidSetPinValue+0xb0>
     f1a:	8e 81       	ldd	r24, Y+6	; 0x06
     f1c:	9f 81       	ldd	r25, Y+7	; 0x07
     f1e:	83 30       	cpi	r24, 0x03	; 3
     f20:	91 05       	cpc	r25, r1
     f22:	e9 f1       	breq	.+122    	; 0xf9e <DIO_VidSetPinValue+0xd8>
     f24:	c7 c0       	rjmp	.+398    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		{
		case 0: SET_BIT(PORTA, LOC_u8Pin); break;
     f26:	ab e3       	ldi	r26, 0x3B	; 59
     f28:	b0 e0       	ldi	r27, 0x00	; 0
     f2a:	eb e3       	ldi	r30, 0x3B	; 59
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	80 81       	ld	r24, Z
     f30:	48 2f       	mov	r20, r24
     f32:	8a 81       	ldd	r24, Y+2	; 0x02
     f34:	28 2f       	mov	r18, r24
     f36:	30 e0       	ldi	r19, 0x00	; 0
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	02 2e       	mov	r0, r18
     f3e:	02 c0       	rjmp	.+4      	; 0xf44 <DIO_VidSetPinValue+0x7e>
     f40:	88 0f       	add	r24, r24
     f42:	99 1f       	adc	r25, r25
     f44:	0a 94       	dec	r0
     f46:	e2 f7       	brpl	.-8      	; 0xf40 <DIO_VidSetPinValue+0x7a>
     f48:	84 2b       	or	r24, r20
     f4a:	8c 93       	st	X, r24
     f4c:	b3 c0       	rjmp	.+358    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 1: SET_BIT(PORTB, LOC_u8Pin); break;
     f4e:	a8 e3       	ldi	r26, 0x38	; 56
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	e8 e3       	ldi	r30, 0x38	; 56
     f54:	f0 e0       	ldi	r31, 0x00	; 0
     f56:	80 81       	ld	r24, Z
     f58:	48 2f       	mov	r20, r24
     f5a:	8a 81       	ldd	r24, Y+2	; 0x02
     f5c:	28 2f       	mov	r18, r24
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	81 e0       	ldi	r24, 0x01	; 1
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	02 2e       	mov	r0, r18
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <DIO_VidSetPinValue+0xa6>
     f68:	88 0f       	add	r24, r24
     f6a:	99 1f       	adc	r25, r25
     f6c:	0a 94       	dec	r0
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <DIO_VidSetPinValue+0xa2>
     f70:	84 2b       	or	r24, r20
     f72:	8c 93       	st	X, r24
     f74:	9f c0       	rjmp	.+318    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 2: SET_BIT(PORTC, LOC_u8Pin); break;
     f76:	a5 e3       	ldi	r26, 0x35	; 53
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e5 e3       	ldi	r30, 0x35	; 53
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	48 2f       	mov	r20, r24
     f82:	8a 81       	ldd	r24, Y+2	; 0x02
     f84:	28 2f       	mov	r18, r24
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	02 2e       	mov	r0, r18
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <DIO_VidSetPinValue+0xce>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	0a 94       	dec	r0
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <DIO_VidSetPinValue+0xca>
     f98:	84 2b       	or	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	8b c0       	rjmp	.+278    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 3: SET_BIT(PORTD, LOC_u8Pin); break;
     f9e:	a2 e3       	ldi	r26, 0x32	; 50
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e2 e3       	ldi	r30, 0x32	; 50
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_VidSetPinValue+0xf6>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_VidSetPinValue+0xf2>
     fc0:	84 2b       	or	r24, r20
     fc2:	8c 93       	st	X, r24
     fc4:	77 c0       	rjmp	.+238    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		}
	}
	else if (0==LOC_u8Value)
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	88 23       	and	r24, r24
     fca:	09 f0       	breq	.+2      	; 0xfce <DIO_VidSetPinValue+0x108>
     fcc:	73 c0       	rjmp	.+230    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
	{
		switch (LOC_u8Port)
     fce:	89 81       	ldd	r24, Y+1	; 0x01
     fd0:	28 2f       	mov	r18, r24
     fd2:	30 e0       	ldi	r19, 0x00	; 0
     fd4:	3d 83       	std	Y+5, r19	; 0x05
     fd6:	2c 83       	std	Y+4, r18	; 0x04
     fd8:	8c 81       	ldd	r24, Y+4	; 0x04
     fda:	9d 81       	ldd	r25, Y+5	; 0x05
     fdc:	81 30       	cpi	r24, 0x01	; 1
     fde:	91 05       	cpc	r25, r1
     fe0:	59 f1       	breq	.+86     	; 0x1038 <DIO_VidSetPinValue+0x172>
     fe2:	2c 81       	ldd	r18, Y+4	; 0x04
     fe4:	3d 81       	ldd	r19, Y+5	; 0x05
     fe6:	22 30       	cpi	r18, 0x02	; 2
     fe8:	31 05       	cpc	r19, r1
     fea:	2c f4       	brge	.+10     	; 0xff6 <DIO_VidSetPinValue+0x130>
     fec:	8c 81       	ldd	r24, Y+4	; 0x04
     fee:	9d 81       	ldd	r25, Y+5	; 0x05
     ff0:	00 97       	sbiw	r24, 0x00	; 0
     ff2:	69 f0       	breq	.+26     	; 0x100e <DIO_VidSetPinValue+0x148>
     ff4:	5f c0       	rjmp	.+190    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
     ff6:	2c 81       	ldd	r18, Y+4	; 0x04
     ff8:	3d 81       	ldd	r19, Y+5	; 0x05
     ffa:	22 30       	cpi	r18, 0x02	; 2
     ffc:	31 05       	cpc	r19, r1
     ffe:	89 f1       	breq	.+98     	; 0x1062 <DIO_VidSetPinValue+0x19c>
    1000:	8c 81       	ldd	r24, Y+4	; 0x04
    1002:	9d 81       	ldd	r25, Y+5	; 0x05
    1004:	83 30       	cpi	r24, 0x03	; 3
    1006:	91 05       	cpc	r25, r1
    1008:	09 f4       	brne	.+2      	; 0x100c <DIO_VidSetPinValue+0x146>
    100a:	40 c0       	rjmp	.+128    	; 0x108c <DIO_VidSetPinValue+0x1c6>
    100c:	53 c0       	rjmp	.+166    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		{
		case 0: CLR_BIT(PORTA, LOC_u8Pin); break;
    100e:	ab e3       	ldi	r26, 0x3B	; 59
    1010:	b0 e0       	ldi	r27, 0x00	; 0
    1012:	eb e3       	ldi	r30, 0x3B	; 59
    1014:	f0 e0       	ldi	r31, 0x00	; 0
    1016:	80 81       	ld	r24, Z
    1018:	48 2f       	mov	r20, r24
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	28 2f       	mov	r18, r24
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	81 e0       	ldi	r24, 0x01	; 1
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	02 2e       	mov	r0, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <DIO_VidSetPinValue+0x166>
    1028:	88 0f       	add	r24, r24
    102a:	99 1f       	adc	r25, r25
    102c:	0a 94       	dec	r0
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <DIO_VidSetPinValue+0x162>
    1030:	80 95       	com	r24
    1032:	84 23       	and	r24, r20
    1034:	8c 93       	st	X, r24
    1036:	3e c0       	rjmp	.+124    	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 1: CLR_BIT(PORTB, LOC_u8Pin); break;
    1038:	a8 e3       	ldi	r26, 0x38	; 56
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e8 e3       	ldi	r30, 0x38	; 56
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	48 2f       	mov	r20, r24
    1044:	8a 81       	ldd	r24, Y+2	; 0x02
    1046:	28 2f       	mov	r18, r24
    1048:	30 e0       	ldi	r19, 0x00	; 0
    104a:	81 e0       	ldi	r24, 0x01	; 1
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	02 2e       	mov	r0, r18
    1050:	02 c0       	rjmp	.+4      	; 0x1056 <DIO_VidSetPinValue+0x190>
    1052:	88 0f       	add	r24, r24
    1054:	99 1f       	adc	r25, r25
    1056:	0a 94       	dec	r0
    1058:	e2 f7       	brpl	.-8      	; 0x1052 <DIO_VidSetPinValue+0x18c>
    105a:	80 95       	com	r24
    105c:	84 23       	and	r24, r20
    105e:	8c 93       	st	X, r24
    1060:	29 c0       	rjmp	.+82     	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 2: CLR_BIT(PORTC, LOC_u8Pin); break;
    1062:	a5 e3       	ldi	r26, 0x35	; 53
    1064:	b0 e0       	ldi	r27, 0x00	; 0
    1066:	e5 e3       	ldi	r30, 0x35	; 53
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	28 2f       	mov	r18, r24
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	02 2e       	mov	r0, r18
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_VidSetPinValue+0x1ba>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	0a 94       	dec	r0
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_VidSetPinValue+0x1b6>
    1084:	80 95       	com	r24
    1086:	84 23       	and	r24, r20
    1088:	8c 93       	st	X, r24
    108a:	14 c0       	rjmp	.+40     	; 0x10b4 <DIO_VidSetPinValue+0x1ee>
		case 3: CLR_BIT(PORTD, LOC_u8Pin); break;
    108c:	a2 e3       	ldi	r26, 0x32	; 50
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	e2 e3       	ldi	r30, 0x32	; 50
    1092:	f0 e0       	ldi	r31, 0x00	; 0
    1094:	80 81       	ld	r24, Z
    1096:	48 2f       	mov	r20, r24
    1098:	8a 81       	ldd	r24, Y+2	; 0x02
    109a:	28 2f       	mov	r18, r24
    109c:	30 e0       	ldi	r19, 0x00	; 0
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	02 2e       	mov	r0, r18
    10a4:	02 c0       	rjmp	.+4      	; 0x10aa <DIO_VidSetPinValue+0x1e4>
    10a6:	88 0f       	add	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	0a 94       	dec	r0
    10ac:	e2 f7       	brpl	.-8      	; 0x10a6 <DIO_VidSetPinValue+0x1e0>
    10ae:	80 95       	com	r24
    10b0:	84 23       	and	r24, r20
    10b2:	8c 93       	st	X, r24
		}
	}
}
    10b4:	27 96       	adiw	r28, 0x07	; 7
    10b6:	0f b6       	in	r0, 0x3f	; 63
    10b8:	f8 94       	cli
    10ba:	de bf       	out	0x3e, r29	; 62
    10bc:	0f be       	out	0x3f, r0	; 63
    10be:	cd bf       	out	0x3d, r28	; 61
    10c0:	cf 91       	pop	r28
    10c2:	df 91       	pop	r29
    10c4:	08 95       	ret

000010c6 <DIO_VidSetPortDirection>:

void DIO_VidSetPortDirection	( u8 LOC_u8Port, u8 LOC_u8Value)
{
    10c6:	df 93       	push	r29
    10c8:	cf 93       	push	r28
    10ca:	00 d0       	rcall	.+0      	; 0x10cc <DIO_VidSetPortDirection+0x6>
    10cc:	00 d0       	rcall	.+0      	; 0x10ce <DIO_VidSetPortDirection+0x8>
    10ce:	cd b7       	in	r28, 0x3d	; 61
    10d0:	de b7       	in	r29, 0x3e	; 62
    10d2:	89 83       	std	Y+1, r24	; 0x01
    10d4:	6a 83       	std	Y+2, r22	; 0x02
	switch (LOC_u8Port)
    10d6:	89 81       	ldd	r24, Y+1	; 0x01
    10d8:	28 2f       	mov	r18, r24
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	3c 83       	std	Y+4, r19	; 0x04
    10de:	2b 83       	std	Y+3, r18	; 0x03
    10e0:	8b 81       	ldd	r24, Y+3	; 0x03
    10e2:	9c 81       	ldd	r25, Y+4	; 0x04
    10e4:	81 30       	cpi	r24, 0x01	; 1
    10e6:	91 05       	cpc	r25, r1
    10e8:	d1 f0       	breq	.+52     	; 0x111e <DIO_VidSetPortDirection+0x58>
    10ea:	2b 81       	ldd	r18, Y+3	; 0x03
    10ec:	3c 81       	ldd	r19, Y+4	; 0x04
    10ee:	22 30       	cpi	r18, 0x02	; 2
    10f0:	31 05       	cpc	r19, r1
    10f2:	2c f4       	brge	.+10     	; 0x10fe <DIO_VidSetPortDirection+0x38>
    10f4:	8b 81       	ldd	r24, Y+3	; 0x03
    10f6:	9c 81       	ldd	r25, Y+4	; 0x04
    10f8:	00 97       	sbiw	r24, 0x00	; 0
    10fa:	61 f0       	breq	.+24     	; 0x1114 <DIO_VidSetPortDirection+0x4e>
    10fc:	1e c0       	rjmp	.+60     	; 0x113a <DIO_VidSetPortDirection+0x74>
    10fe:	2b 81       	ldd	r18, Y+3	; 0x03
    1100:	3c 81       	ldd	r19, Y+4	; 0x04
    1102:	22 30       	cpi	r18, 0x02	; 2
    1104:	31 05       	cpc	r19, r1
    1106:	81 f0       	breq	.+32     	; 0x1128 <DIO_VidSetPortDirection+0x62>
    1108:	8b 81       	ldd	r24, Y+3	; 0x03
    110a:	9c 81       	ldd	r25, Y+4	; 0x04
    110c:	83 30       	cpi	r24, 0x03	; 3
    110e:	91 05       	cpc	r25, r1
    1110:	81 f0       	breq	.+32     	; 0x1132 <DIO_VidSetPortDirection+0x6c>
    1112:	13 c0       	rjmp	.+38     	; 0x113a <DIO_VidSetPortDirection+0x74>
	{
	case 0: DDRA = LOC_u8Value; break;
    1114:	ea e3       	ldi	r30, 0x3A	; 58
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	80 83       	st	Z, r24
    111c:	0e c0       	rjmp	.+28     	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 1: DDRB = LOC_u8Value; break;
    111e:	e7 e3       	ldi	r30, 0x37	; 55
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	80 83       	st	Z, r24
    1126:	09 c0       	rjmp	.+18     	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 2: DDRC = LOC_u8Value; break;
    1128:	e4 e3       	ldi	r30, 0x34	; 52
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	8a 81       	ldd	r24, Y+2	; 0x02
    112e:	80 83       	st	Z, r24
    1130:	04 c0       	rjmp	.+8      	; 0x113a <DIO_VidSetPortDirection+0x74>
	case 3: DDRD = LOC_u8Value; break;
    1132:	e1 e3       	ldi	r30, 0x31	; 49
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	8a 81       	ldd	r24, Y+2	; 0x02
    1138:	80 83       	st	Z, r24
	}
}
    113a:	0f 90       	pop	r0
    113c:	0f 90       	pop	r0
    113e:	0f 90       	pop	r0
    1140:	0f 90       	pop	r0
    1142:	cf 91       	pop	r28
    1144:	df 91       	pop	r29
    1146:	08 95       	ret

00001148 <DIO_VidSetPortValue>:

void DIO_VidSetPortValue	( u8 LOC_u8Port, u8 LOC_u8Value)
{
    1148:	df 93       	push	r29
    114a:	cf 93       	push	r28
    114c:	00 d0       	rcall	.+0      	; 0x114e <DIO_VidSetPortValue+0x6>
    114e:	00 d0       	rcall	.+0      	; 0x1150 <DIO_VidSetPortValue+0x8>
    1150:	cd b7       	in	r28, 0x3d	; 61
    1152:	de b7       	in	r29, 0x3e	; 62
    1154:	89 83       	std	Y+1, r24	; 0x01
    1156:	6a 83       	std	Y+2, r22	; 0x02
	switch (LOC_u8Port)
    1158:	89 81       	ldd	r24, Y+1	; 0x01
    115a:	28 2f       	mov	r18, r24
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	3c 83       	std	Y+4, r19	; 0x04
    1160:	2b 83       	std	Y+3, r18	; 0x03
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	9c 81       	ldd	r25, Y+4	; 0x04
    1166:	81 30       	cpi	r24, 0x01	; 1
    1168:	91 05       	cpc	r25, r1
    116a:	d1 f0       	breq	.+52     	; 0x11a0 <DIO_VidSetPortValue+0x58>
    116c:	2b 81       	ldd	r18, Y+3	; 0x03
    116e:	3c 81       	ldd	r19, Y+4	; 0x04
    1170:	22 30       	cpi	r18, 0x02	; 2
    1172:	31 05       	cpc	r19, r1
    1174:	2c f4       	brge	.+10     	; 0x1180 <DIO_VidSetPortValue+0x38>
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	9c 81       	ldd	r25, Y+4	; 0x04
    117a:	00 97       	sbiw	r24, 0x00	; 0
    117c:	61 f0       	breq	.+24     	; 0x1196 <DIO_VidSetPortValue+0x4e>
    117e:	1e c0       	rjmp	.+60     	; 0x11bc <DIO_VidSetPortValue+0x74>
    1180:	2b 81       	ldd	r18, Y+3	; 0x03
    1182:	3c 81       	ldd	r19, Y+4	; 0x04
    1184:	22 30       	cpi	r18, 0x02	; 2
    1186:	31 05       	cpc	r19, r1
    1188:	81 f0       	breq	.+32     	; 0x11aa <DIO_VidSetPortValue+0x62>
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	9c 81       	ldd	r25, Y+4	; 0x04
    118e:	83 30       	cpi	r24, 0x03	; 3
    1190:	91 05       	cpc	r25, r1
    1192:	81 f0       	breq	.+32     	; 0x11b4 <DIO_VidSetPortValue+0x6c>
    1194:	13 c0       	rjmp	.+38     	; 0x11bc <DIO_VidSetPortValue+0x74>
	{
	case 0: PORTA = LOC_u8Value; break;
    1196:	eb e3       	ldi	r30, 0x3B	; 59
    1198:	f0 e0       	ldi	r31, 0x00	; 0
    119a:	8a 81       	ldd	r24, Y+2	; 0x02
    119c:	80 83       	st	Z, r24
    119e:	0e c0       	rjmp	.+28     	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 1: PORTB = LOC_u8Value; break;
    11a0:	e8 e3       	ldi	r30, 0x38	; 56
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	80 83       	st	Z, r24
    11a8:	09 c0       	rjmp	.+18     	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 2: PORTC = LOC_u8Value; break;
    11aa:	e5 e3       	ldi	r30, 0x35	; 53
    11ac:	f0 e0       	ldi	r31, 0x00	; 0
    11ae:	8a 81       	ldd	r24, Y+2	; 0x02
    11b0:	80 83       	st	Z, r24
    11b2:	04 c0       	rjmp	.+8      	; 0x11bc <DIO_VidSetPortValue+0x74>
	case 3: PORTD = LOC_u8Value; break;
    11b4:	e2 e3       	ldi	r30, 0x32	; 50
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	8a 81       	ldd	r24, Y+2	; 0x02
    11ba:	80 83       	st	Z, r24
	}
}
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	cf 91       	pop	r28
    11c6:	df 91       	pop	r29
    11c8:	08 95       	ret

000011ca <DIO_u8GetPinValue>:

u8 	 DIO_u8GetPinValue	( u8 LOC_u8Port, u8 LOC_u8Pin)
{
    11ca:	df 93       	push	r29
    11cc:	cf 93       	push	r28
    11ce:	00 d0       	rcall	.+0      	; 0x11d0 <DIO_u8GetPinValue+0x6>
    11d0:	00 d0       	rcall	.+0      	; 0x11d2 <DIO_u8GetPinValue+0x8>
    11d2:	0f 92       	push	r0
    11d4:	cd b7       	in	r28, 0x3d	; 61
    11d6:	de b7       	in	r29, 0x3e	; 62
    11d8:	8a 83       	std	Y+2, r24	; 0x02
    11da:	6b 83       	std	Y+3, r22	; 0x03
	u8 value;
	switch (LOC_u8Port)
    11dc:	8a 81       	ldd	r24, Y+2	; 0x02
    11de:	28 2f       	mov	r18, r24
    11e0:	30 e0       	ldi	r19, 0x00	; 0
    11e2:	3d 83       	std	Y+5, r19	; 0x05
    11e4:	2c 83       	std	Y+4, r18	; 0x04
    11e6:	4c 81       	ldd	r20, Y+4	; 0x04
    11e8:	5d 81       	ldd	r21, Y+5	; 0x05
    11ea:	41 30       	cpi	r20, 0x01	; 1
    11ec:	51 05       	cpc	r21, r1
    11ee:	41 f1       	breq	.+80     	; 0x1240 <DIO_u8GetPinValue+0x76>
    11f0:	8c 81       	ldd	r24, Y+4	; 0x04
    11f2:	9d 81       	ldd	r25, Y+5	; 0x05
    11f4:	82 30       	cpi	r24, 0x02	; 2
    11f6:	91 05       	cpc	r25, r1
    11f8:	34 f4       	brge	.+12     	; 0x1206 <DIO_u8GetPinValue+0x3c>
    11fa:	2c 81       	ldd	r18, Y+4	; 0x04
    11fc:	3d 81       	ldd	r19, Y+5	; 0x05
    11fe:	21 15       	cp	r18, r1
    1200:	31 05       	cpc	r19, r1
    1202:	61 f0       	breq	.+24     	; 0x121c <DIO_u8GetPinValue+0x52>
    1204:	52 c0       	rjmp	.+164    	; 0x12aa <DIO_u8GetPinValue+0xe0>
    1206:	4c 81       	ldd	r20, Y+4	; 0x04
    1208:	5d 81       	ldd	r21, Y+5	; 0x05
    120a:	42 30       	cpi	r20, 0x02	; 2
    120c:	51 05       	cpc	r21, r1
    120e:	51 f1       	breq	.+84     	; 0x1264 <DIO_u8GetPinValue+0x9a>
    1210:	8c 81       	ldd	r24, Y+4	; 0x04
    1212:	9d 81       	ldd	r25, Y+5	; 0x05
    1214:	83 30       	cpi	r24, 0x03	; 3
    1216:	91 05       	cpc	r25, r1
    1218:	b9 f1       	breq	.+110    	; 0x1288 <DIO_u8GetPinValue+0xbe>
    121a:	47 c0       	rjmp	.+142    	; 0x12aa <DIO_u8GetPinValue+0xe0>
	{
	case 0: value = GET_BIT(PINA, LOC_u8Pin); break;
    121c:	e9 e3       	ldi	r30, 0x39	; 57
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	28 2f       	mov	r18, r24
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	8b 81       	ldd	r24, Y+3	; 0x03
    1228:	88 2f       	mov	r24, r24
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	a9 01       	movw	r20, r18
    122e:	02 c0       	rjmp	.+4      	; 0x1234 <DIO_u8GetPinValue+0x6a>
    1230:	55 95       	asr	r21
    1232:	47 95       	ror	r20
    1234:	8a 95       	dec	r24
    1236:	e2 f7       	brpl	.-8      	; 0x1230 <DIO_u8GetPinValue+0x66>
    1238:	ca 01       	movw	r24, r20
    123a:	81 70       	andi	r24, 0x01	; 1
    123c:	89 83       	std	Y+1, r24	; 0x01
    123e:	35 c0       	rjmp	.+106    	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 1: value = GET_BIT(PINB, LOC_u8Pin); break;
    1240:	e6 e3       	ldi	r30, 0x36	; 54
    1242:	f0 e0       	ldi	r31, 0x00	; 0
    1244:	80 81       	ld	r24, Z
    1246:	28 2f       	mov	r18, r24
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	8b 81       	ldd	r24, Y+3	; 0x03
    124c:	88 2f       	mov	r24, r24
    124e:	90 e0       	ldi	r25, 0x00	; 0
    1250:	a9 01       	movw	r20, r18
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <DIO_u8GetPinValue+0x8e>
    1254:	55 95       	asr	r21
    1256:	47 95       	ror	r20
    1258:	8a 95       	dec	r24
    125a:	e2 f7       	brpl	.-8      	; 0x1254 <DIO_u8GetPinValue+0x8a>
    125c:	ca 01       	movw	r24, r20
    125e:	81 70       	andi	r24, 0x01	; 1
    1260:	89 83       	std	Y+1, r24	; 0x01
    1262:	23 c0       	rjmp	.+70     	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 2: value = GET_BIT(PINC, LOC_u8Pin); break;
    1264:	e3 e3       	ldi	r30, 0x33	; 51
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	80 81       	ld	r24, Z
    126a:	28 2f       	mov	r18, r24
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	8b 81       	ldd	r24, Y+3	; 0x03
    1270:	88 2f       	mov	r24, r24
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	a9 01       	movw	r20, r18
    1276:	02 c0       	rjmp	.+4      	; 0x127c <DIO_u8GetPinValue+0xb2>
    1278:	55 95       	asr	r21
    127a:	47 95       	ror	r20
    127c:	8a 95       	dec	r24
    127e:	e2 f7       	brpl	.-8      	; 0x1278 <DIO_u8GetPinValue+0xae>
    1280:	ca 01       	movw	r24, r20
    1282:	81 70       	andi	r24, 0x01	; 1
    1284:	89 83       	std	Y+1, r24	; 0x01
    1286:	11 c0       	rjmp	.+34     	; 0x12aa <DIO_u8GetPinValue+0xe0>
	case 3: value = GET_BIT(PIND, LOC_u8Pin); break;
    1288:	e0 e3       	ldi	r30, 0x30	; 48
    128a:	f0 e0       	ldi	r31, 0x00	; 0
    128c:	80 81       	ld	r24, Z
    128e:	28 2f       	mov	r18, r24
    1290:	30 e0       	ldi	r19, 0x00	; 0
    1292:	8b 81       	ldd	r24, Y+3	; 0x03
    1294:	88 2f       	mov	r24, r24
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	a9 01       	movw	r20, r18
    129a:	02 c0       	rjmp	.+4      	; 0x12a0 <DIO_u8GetPinValue+0xd6>
    129c:	55 95       	asr	r21
    129e:	47 95       	ror	r20
    12a0:	8a 95       	dec	r24
    12a2:	e2 f7       	brpl	.-8      	; 0x129c <DIO_u8GetPinValue+0xd2>
    12a4:	ca 01       	movw	r24, r20
    12a6:	81 70       	andi	r24, 0x01	; 1
    12a8:	89 83       	std	Y+1, r24	; 0x01
	}
	return value;
    12aa:	89 81       	ldd	r24, Y+1	; 0x01
}
    12ac:	0f 90       	pop	r0
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	cf 91       	pop	r28
    12b8:	df 91       	pop	r29
    12ba:	08 95       	ret

000012bc <DIO_u8ReadPortValue>:

u8 	 DIO_u8ReadPortValue		( u8 LOC_u8Port)
{
    12bc:	df 93       	push	r29
    12be:	cf 93       	push	r28
    12c0:	00 d0       	rcall	.+0      	; 0x12c2 <DIO_u8ReadPortValue+0x6>
    12c2:	00 d0       	rcall	.+0      	; 0x12c4 <DIO_u8ReadPortValue+0x8>
    12c4:	cd b7       	in	r28, 0x3d	; 61
    12c6:	de b7       	in	r29, 0x3e	; 62
    12c8:	8a 83       	std	Y+2, r24	; 0x02
	u8 value;
	switch (LOC_u8Port)
    12ca:	8a 81       	ldd	r24, Y+2	; 0x02
    12cc:	28 2f       	mov	r18, r24
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	3c 83       	std	Y+4, r19	; 0x04
    12d2:	2b 83       	std	Y+3, r18	; 0x03
    12d4:	8b 81       	ldd	r24, Y+3	; 0x03
    12d6:	9c 81       	ldd	r25, Y+4	; 0x04
    12d8:	81 30       	cpi	r24, 0x01	; 1
    12da:	91 05       	cpc	r25, r1
    12dc:	d1 f0       	breq	.+52     	; 0x1312 <DIO_u8ReadPortValue+0x56>
    12de:	2b 81       	ldd	r18, Y+3	; 0x03
    12e0:	3c 81       	ldd	r19, Y+4	; 0x04
    12e2:	22 30       	cpi	r18, 0x02	; 2
    12e4:	31 05       	cpc	r19, r1
    12e6:	2c f4       	brge	.+10     	; 0x12f2 <DIO_u8ReadPortValue+0x36>
    12e8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ea:	9c 81       	ldd	r25, Y+4	; 0x04
    12ec:	00 97       	sbiw	r24, 0x00	; 0
    12ee:	61 f0       	breq	.+24     	; 0x1308 <DIO_u8ReadPortValue+0x4c>
    12f0:	1e c0       	rjmp	.+60     	; 0x132e <DIO_u8ReadPortValue+0x72>
    12f2:	2b 81       	ldd	r18, Y+3	; 0x03
    12f4:	3c 81       	ldd	r19, Y+4	; 0x04
    12f6:	22 30       	cpi	r18, 0x02	; 2
    12f8:	31 05       	cpc	r19, r1
    12fa:	81 f0       	breq	.+32     	; 0x131c <DIO_u8ReadPortValue+0x60>
    12fc:	8b 81       	ldd	r24, Y+3	; 0x03
    12fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1300:	83 30       	cpi	r24, 0x03	; 3
    1302:	91 05       	cpc	r25, r1
    1304:	81 f0       	breq	.+32     	; 0x1326 <DIO_u8ReadPortValue+0x6a>
    1306:	13 c0       	rjmp	.+38     	; 0x132e <DIO_u8ReadPortValue+0x72>
	{
	case 0: value = PORTA; break;
    1308:	eb e3       	ldi	r30, 0x3B	; 59
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	80 81       	ld	r24, Z
    130e:	89 83       	std	Y+1, r24	; 0x01
    1310:	0e c0       	rjmp	.+28     	; 0x132e <DIO_u8ReadPortValue+0x72>
	case 1: value = PORTB; break;
    1312:	e8 e3       	ldi	r30, 0x38	; 56
    1314:	f0 e0       	ldi	r31, 0x00	; 0
    1316:	80 81       	ld	r24, Z
    1318:	89 83       	std	Y+1, r24	; 0x01
    131a:	09 c0       	rjmp	.+18     	; 0x132e <DIO_u8ReadPortValue+0x72>
	case 2: value = PORTC; break;
    131c:	e5 e3       	ldi	r30, 0x35	; 53
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	80 81       	ld	r24, Z
    1322:	89 83       	std	Y+1, r24	; 0x01
    1324:	04 c0       	rjmp	.+8      	; 0x132e <DIO_u8ReadPortValue+0x72>
	case 3: value = PORTD; break;
    1326:	e2 e3       	ldi	r30, 0x32	; 50
    1328:	f0 e0       	ldi	r31, 0x00	; 0
    132a:	80 81       	ld	r24, Z
    132c:	89 83       	std	Y+1, r24	; 0x01
	}
	return value;
    132e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1330:	0f 90       	pop	r0
    1332:	0f 90       	pop	r0
    1334:	0f 90       	pop	r0
    1336:	0f 90       	pop	r0
    1338:	cf 91       	pop	r28
    133a:	df 91       	pop	r29
    133c:	08 95       	ret

0000133e <LCD_VidInit>:
#include "LCD_Interface.h"

#include <util/delay.h>

void LCD_VidInit(void)
{
    133e:	df 93       	push	r29
    1340:	cf 93       	push	r28
    1342:	cd b7       	in	r28, 0x3d	; 61
    1344:	de b7       	in	r29, 0x3e	; 62
    1346:	e8 97       	sbiw	r28, 0x38	; 56
    1348:	0f b6       	in	r0, 0x3f	; 63
    134a:	f8 94       	cli
    134c:	de bf       	out	0x3e, r29	; 62
    134e:	0f be       	out	0x3f, r0	; 63
    1350:	cd bf       	out	0x3d, r28	; 61
    1352:	80 e0       	ldi	r24, 0x00	; 0
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	a8 e4       	ldi	r26, 0x48	; 72
    1358:	b2 e4       	ldi	r27, 0x42	; 66
    135a:	8d ab       	std	Y+53, r24	; 0x35
    135c:	9e ab       	std	Y+54, r25	; 0x36
    135e:	af ab       	std	Y+55, r26	; 0x37
    1360:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1362:	6d a9       	ldd	r22, Y+53	; 0x35
    1364:	7e a9       	ldd	r23, Y+54	; 0x36
    1366:	8f a9       	ldd	r24, Y+55	; 0x37
    1368:	98 ad       	ldd	r25, Y+56	; 0x38
    136a:	20 e0       	ldi	r18, 0x00	; 0
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	4a ef       	ldi	r20, 0xFA	; 250
    1370:	54 e4       	ldi	r21, 0x44	; 68
    1372:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1376:	dc 01       	movw	r26, r24
    1378:	cb 01       	movw	r24, r22
    137a:	89 ab       	std	Y+49, r24	; 0x31
    137c:	9a ab       	std	Y+50, r25	; 0x32
    137e:	ab ab       	std	Y+51, r26	; 0x33
    1380:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1382:	69 a9       	ldd	r22, Y+49	; 0x31
    1384:	7a a9       	ldd	r23, Y+50	; 0x32
    1386:	8b a9       	ldd	r24, Y+51	; 0x33
    1388:	9c a9       	ldd	r25, Y+52	; 0x34
    138a:	20 e0       	ldi	r18, 0x00	; 0
    138c:	30 e0       	ldi	r19, 0x00	; 0
    138e:	40 e8       	ldi	r20, 0x80	; 128
    1390:	5f e3       	ldi	r21, 0x3F	; 63
    1392:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1396:	88 23       	and	r24, r24
    1398:	2c f4       	brge	.+10     	; 0x13a4 <LCD_VidInit+0x66>
		__ticks = 1;
    139a:	81 e0       	ldi	r24, 0x01	; 1
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	98 ab       	std	Y+48, r25	; 0x30
    13a0:	8f a7       	std	Y+47, r24	; 0x2f
    13a2:	3f c0       	rjmp	.+126    	; 0x1422 <LCD_VidInit+0xe4>
	else if (__tmp > 65535)
    13a4:	69 a9       	ldd	r22, Y+49	; 0x31
    13a6:	7a a9       	ldd	r23, Y+50	; 0x32
    13a8:	8b a9       	ldd	r24, Y+51	; 0x33
    13aa:	9c a9       	ldd	r25, Y+52	; 0x34
    13ac:	20 e0       	ldi	r18, 0x00	; 0
    13ae:	3f ef       	ldi	r19, 0xFF	; 255
    13b0:	4f e7       	ldi	r20, 0x7F	; 127
    13b2:	57 e4       	ldi	r21, 0x47	; 71
    13b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13b8:	18 16       	cp	r1, r24
    13ba:	4c f5       	brge	.+82     	; 0x140e <LCD_VidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13bc:	6d a9       	ldd	r22, Y+53	; 0x35
    13be:	7e a9       	ldd	r23, Y+54	; 0x36
    13c0:	8f a9       	ldd	r24, Y+55	; 0x37
    13c2:	98 ad       	ldd	r25, Y+56	; 0x38
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	40 e2       	ldi	r20, 0x20	; 32
    13ca:	51 e4       	ldi	r21, 0x41	; 65
    13cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13d0:	dc 01       	movw	r26, r24
    13d2:	cb 01       	movw	r24, r22
    13d4:	bc 01       	movw	r22, r24
    13d6:	cd 01       	movw	r24, r26
    13d8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13dc:	dc 01       	movw	r26, r24
    13de:	cb 01       	movw	r24, r22
    13e0:	98 ab       	std	Y+48, r25	; 0x30
    13e2:	8f a7       	std	Y+47, r24	; 0x2f
    13e4:	0f c0       	rjmp	.+30     	; 0x1404 <LCD_VidInit+0xc6>
    13e6:	88 ec       	ldi	r24, 0xC8	; 200
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	9e a7       	std	Y+46, r25	; 0x2e
    13ec:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    13ee:	8d a5       	ldd	r24, Y+45	; 0x2d
    13f0:	9e a5       	ldd	r25, Y+46	; 0x2e
    13f2:	01 97       	sbiw	r24, 0x01	; 1
    13f4:	f1 f7       	brne	.-4      	; 0x13f2 <LCD_VidInit+0xb4>
    13f6:	9e a7       	std	Y+46, r25	; 0x2e
    13f8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13fa:	8f a5       	ldd	r24, Y+47	; 0x2f
    13fc:	98 a9       	ldd	r25, Y+48	; 0x30
    13fe:	01 97       	sbiw	r24, 0x01	; 1
    1400:	98 ab       	std	Y+48, r25	; 0x30
    1402:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1404:	8f a5       	ldd	r24, Y+47	; 0x2f
    1406:	98 a9       	ldd	r25, Y+48	; 0x30
    1408:	00 97       	sbiw	r24, 0x00	; 0
    140a:	69 f7       	brne	.-38     	; 0x13e6 <LCD_VidInit+0xa8>
    140c:	14 c0       	rjmp	.+40     	; 0x1436 <LCD_VidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    140e:	69 a9       	ldd	r22, Y+49	; 0x31
    1410:	7a a9       	ldd	r23, Y+50	; 0x32
    1412:	8b a9       	ldd	r24, Y+51	; 0x33
    1414:	9c a9       	ldd	r25, Y+52	; 0x34
    1416:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    141a:	dc 01       	movw	r26, r24
    141c:	cb 01       	movw	r24, r22
    141e:	98 ab       	std	Y+48, r25	; 0x30
    1420:	8f a7       	std	Y+47, r24	; 0x2f
    1422:	8f a5       	ldd	r24, Y+47	; 0x2f
    1424:	98 a9       	ldd	r25, Y+48	; 0x30
    1426:	9c a7       	std	Y+44, r25	; 0x2c
    1428:	8b a7       	std	Y+43, r24	; 0x2b
    142a:	8b a5       	ldd	r24, Y+43	; 0x2b
    142c:	9c a5       	ldd	r25, Y+44	; 0x2c
    142e:	01 97       	sbiw	r24, 0x01	; 1
    1430:	f1 f7       	brne	.-4      	; 0x142e <LCD_VidInit+0xf0>
    1432:	9c a7       	std	Y+44, r25	; 0x2c
    1434:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(50); // wait for LCD to initialize
	DIO_VidSetPortDirection(LCD_DataPort, 0xFF ); //Data port direction output
    1436:	83 e0       	ldi	r24, 0x03	; 3
    1438:	6f ef       	ldi	r22, 0xFF	; 255
    143a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPortDirection>
	DIO_VidSetPinDirection(LCD_CTRLPort,  LCD_RS_PIN, OUTPUT); //RS
    143e:	81 e0       	ldi	r24, 0x01	; 1
    1440:	63 e0       	ldi	r22, 0x03	; 3
    1442:	41 e0       	ldi	r20, 0x01	; 1
    1444:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CTRLPort,  LCD_RW_PIN, OUTPUT); //RW
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	64 e0       	ldi	r22, 0x04	; 4
    144c:	41 e0       	ldi	r20, 0x01	; 1
    144e:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(LCD_CTRLPort,  LCD_Enb_PIN, OUTPUT); //Enb    CTRL PINS direction output
    1452:	81 e0       	ldi	r24, 0x01	; 1
    1454:	65 e0       	ldi	r22, 0x05	; 5
    1456:	41 e0       	ldi	r20, 0x01	; 1
    1458:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_HIGH);  //Enable = 1 high rise edge
		_delay_ms(1);	// required by LCD Datasheet
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_LOW);  //Enable = 0  Falling edge
		_delay_ms(1); // give the LCD time to wite / display
*/
	LCD_VidWriteCommand(FunctionSet_4bit); 	//function set
    145c:	88 e2       	ldi	r24, 0x28	; 40
    145e:	0e 94 96 0b 	call	0x172c	; 0x172c <LCD_VidWriteCommand>
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	a0 e8       	ldi	r26, 0x80	; 128
    1468:	bf e3       	ldi	r27, 0x3F	; 63
    146a:	8f a3       	std	Y+39, r24	; 0x27
    146c:	98 a7       	std	Y+40, r25	; 0x28
    146e:	a9 a7       	std	Y+41, r26	; 0x29
    1470:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1472:	6f a1       	ldd	r22, Y+39	; 0x27
    1474:	78 a5       	ldd	r23, Y+40	; 0x28
    1476:	89 a5       	ldd	r24, Y+41	; 0x29
    1478:	9a a5       	ldd	r25, Y+42	; 0x2a
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	4a ef       	ldi	r20, 0xFA	; 250
    1480:	54 e4       	ldi	r21, 0x44	; 68
    1482:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1486:	dc 01       	movw	r26, r24
    1488:	cb 01       	movw	r24, r22
    148a:	8b a3       	std	Y+35, r24	; 0x23
    148c:	9c a3       	std	Y+36, r25	; 0x24
    148e:	ad a3       	std	Y+37, r26	; 0x25
    1490:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1492:	6b a1       	ldd	r22, Y+35	; 0x23
    1494:	7c a1       	ldd	r23, Y+36	; 0x24
    1496:	8d a1       	ldd	r24, Y+37	; 0x25
    1498:	9e a1       	ldd	r25, Y+38	; 0x26
    149a:	20 e0       	ldi	r18, 0x00	; 0
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	40 e8       	ldi	r20, 0x80	; 128
    14a0:	5f e3       	ldi	r21, 0x3F	; 63
    14a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14a6:	88 23       	and	r24, r24
    14a8:	2c f4       	brge	.+10     	; 0x14b4 <LCD_VidInit+0x176>
		__ticks = 1;
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	9a a3       	std	Y+34, r25	; 0x22
    14b0:	89 a3       	std	Y+33, r24	; 0x21
    14b2:	3f c0       	rjmp	.+126    	; 0x1532 <LCD_VidInit+0x1f4>
	else if (__tmp > 65535)
    14b4:	6b a1       	ldd	r22, Y+35	; 0x23
    14b6:	7c a1       	ldd	r23, Y+36	; 0x24
    14b8:	8d a1       	ldd	r24, Y+37	; 0x25
    14ba:	9e a1       	ldd	r25, Y+38	; 0x26
    14bc:	20 e0       	ldi	r18, 0x00	; 0
    14be:	3f ef       	ldi	r19, 0xFF	; 255
    14c0:	4f e7       	ldi	r20, 0x7F	; 127
    14c2:	57 e4       	ldi	r21, 0x47	; 71
    14c4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14c8:	18 16       	cp	r1, r24
    14ca:	4c f5       	brge	.+82     	; 0x151e <LCD_VidInit+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14cc:	6f a1       	ldd	r22, Y+39	; 0x27
    14ce:	78 a5       	ldd	r23, Y+40	; 0x28
    14d0:	89 a5       	ldd	r24, Y+41	; 0x29
    14d2:	9a a5       	ldd	r25, Y+42	; 0x2a
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	40 e2       	ldi	r20, 0x20	; 32
    14da:	51 e4       	ldi	r21, 0x41	; 65
    14dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	bc 01       	movw	r22, r24
    14e6:	cd 01       	movw	r24, r26
    14e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14ec:	dc 01       	movw	r26, r24
    14ee:	cb 01       	movw	r24, r22
    14f0:	9a a3       	std	Y+34, r25	; 0x22
    14f2:	89 a3       	std	Y+33, r24	; 0x21
    14f4:	0f c0       	rjmp	.+30     	; 0x1514 <LCD_VidInit+0x1d6>
    14f6:	88 ec       	ldi	r24, 0xC8	; 200
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	98 a3       	std	Y+32, r25	; 0x20
    14fc:	8f 8f       	std	Y+31, r24	; 0x1f
    14fe:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1500:	98 a1       	ldd	r25, Y+32	; 0x20
    1502:	01 97       	sbiw	r24, 0x01	; 1
    1504:	f1 f7       	brne	.-4      	; 0x1502 <LCD_VidInit+0x1c4>
    1506:	98 a3       	std	Y+32, r25	; 0x20
    1508:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    150a:	89 a1       	ldd	r24, Y+33	; 0x21
    150c:	9a a1       	ldd	r25, Y+34	; 0x22
    150e:	01 97       	sbiw	r24, 0x01	; 1
    1510:	9a a3       	std	Y+34, r25	; 0x22
    1512:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1514:	89 a1       	ldd	r24, Y+33	; 0x21
    1516:	9a a1       	ldd	r25, Y+34	; 0x22
    1518:	00 97       	sbiw	r24, 0x00	; 0
    151a:	69 f7       	brne	.-38     	; 0x14f6 <LCD_VidInit+0x1b8>
    151c:	14 c0       	rjmp	.+40     	; 0x1546 <LCD_VidInit+0x208>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    151e:	6b a1       	ldd	r22, Y+35	; 0x23
    1520:	7c a1       	ldd	r23, Y+36	; 0x24
    1522:	8d a1       	ldd	r24, Y+37	; 0x25
    1524:	9e a1       	ldd	r25, Y+38	; 0x26
    1526:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    152a:	dc 01       	movw	r26, r24
    152c:	cb 01       	movw	r24, r22
    152e:	9a a3       	std	Y+34, r25	; 0x22
    1530:	89 a3       	std	Y+33, r24	; 0x21
    1532:	89 a1       	ldd	r24, Y+33	; 0x21
    1534:	9a a1       	ldd	r25, Y+34	; 0x22
    1536:	9e 8f       	std	Y+30, r25	; 0x1e
    1538:	8d 8f       	std	Y+29, r24	; 0x1d
    153a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    153c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    153e:	01 97       	sbiw	r24, 0x01	; 1
    1540:	f1 f7       	brne	.-4      	; 0x153e <LCD_VidInit+0x200>
    1542:	9e 8f       	std	Y+30, r25	; 0x1e
    1544:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); // wait for LCD to Function set
	LCD_VidWriteCommand(DisplayOn);	//Display On
    1546:	8c e0       	ldi	r24, 0x0C	; 12
    1548:	0e 94 96 0b 	call	0x172c	; 0x172c <LCD_VidWriteCommand>
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	a0 e8       	ldi	r26, 0x80	; 128
    1552:	bf e3       	ldi	r27, 0x3F	; 63
    1554:	89 8f       	std	Y+25, r24	; 0x19
    1556:	9a 8f       	std	Y+26, r25	; 0x1a
    1558:	ab 8f       	std	Y+27, r26	; 0x1b
    155a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    155c:	69 8d       	ldd	r22, Y+25	; 0x19
    155e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1560:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1562:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1564:	20 e0       	ldi	r18, 0x00	; 0
    1566:	30 e0       	ldi	r19, 0x00	; 0
    1568:	4a ef       	ldi	r20, 0xFA	; 250
    156a:	54 e4       	ldi	r21, 0x44	; 68
    156c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1570:	dc 01       	movw	r26, r24
    1572:	cb 01       	movw	r24, r22
    1574:	8d 8b       	std	Y+21, r24	; 0x15
    1576:	9e 8b       	std	Y+22, r25	; 0x16
    1578:	af 8b       	std	Y+23, r26	; 0x17
    157a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    157c:	6d 89       	ldd	r22, Y+21	; 0x15
    157e:	7e 89       	ldd	r23, Y+22	; 0x16
    1580:	8f 89       	ldd	r24, Y+23	; 0x17
    1582:	98 8d       	ldd	r25, Y+24	; 0x18
    1584:	20 e0       	ldi	r18, 0x00	; 0
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	40 e8       	ldi	r20, 0x80	; 128
    158a:	5f e3       	ldi	r21, 0x3F	; 63
    158c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1590:	88 23       	and	r24, r24
    1592:	2c f4       	brge	.+10     	; 0x159e <LCD_VidInit+0x260>
		__ticks = 1;
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	90 e0       	ldi	r25, 0x00	; 0
    1598:	9c 8b       	std	Y+20, r25	; 0x14
    159a:	8b 8b       	std	Y+19, r24	; 0x13
    159c:	3f c0       	rjmp	.+126    	; 0x161c <LCD_VidInit+0x2de>
	else if (__tmp > 65535)
    159e:	6d 89       	ldd	r22, Y+21	; 0x15
    15a0:	7e 89       	ldd	r23, Y+22	; 0x16
    15a2:	8f 89       	ldd	r24, Y+23	; 0x17
    15a4:	98 8d       	ldd	r25, Y+24	; 0x18
    15a6:	20 e0       	ldi	r18, 0x00	; 0
    15a8:	3f ef       	ldi	r19, 0xFF	; 255
    15aa:	4f e7       	ldi	r20, 0x7F	; 127
    15ac:	57 e4       	ldi	r21, 0x47	; 71
    15ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15b2:	18 16       	cp	r1, r24
    15b4:	4c f5       	brge	.+82     	; 0x1608 <LCD_VidInit+0x2ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15b6:	69 8d       	ldd	r22, Y+25	; 0x19
    15b8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    15ba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    15bc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    15be:	20 e0       	ldi	r18, 0x00	; 0
    15c0:	30 e0       	ldi	r19, 0x00	; 0
    15c2:	40 e2       	ldi	r20, 0x20	; 32
    15c4:	51 e4       	ldi	r21, 0x41	; 65
    15c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ca:	dc 01       	movw	r26, r24
    15cc:	cb 01       	movw	r24, r22
    15ce:	bc 01       	movw	r22, r24
    15d0:	cd 01       	movw	r24, r26
    15d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15d6:	dc 01       	movw	r26, r24
    15d8:	cb 01       	movw	r24, r22
    15da:	9c 8b       	std	Y+20, r25	; 0x14
    15dc:	8b 8b       	std	Y+19, r24	; 0x13
    15de:	0f c0       	rjmp	.+30     	; 0x15fe <LCD_VidInit+0x2c0>
    15e0:	88 ec       	ldi	r24, 0xC8	; 200
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	9a 8b       	std	Y+18, r25	; 0x12
    15e6:	89 8b       	std	Y+17, r24	; 0x11
    15e8:	89 89       	ldd	r24, Y+17	; 0x11
    15ea:	9a 89       	ldd	r25, Y+18	; 0x12
    15ec:	01 97       	sbiw	r24, 0x01	; 1
    15ee:	f1 f7       	brne	.-4      	; 0x15ec <LCD_VidInit+0x2ae>
    15f0:	9a 8b       	std	Y+18, r25	; 0x12
    15f2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15f4:	8b 89       	ldd	r24, Y+19	; 0x13
    15f6:	9c 89       	ldd	r25, Y+20	; 0x14
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	9c 8b       	std	Y+20, r25	; 0x14
    15fc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15fe:	8b 89       	ldd	r24, Y+19	; 0x13
    1600:	9c 89       	ldd	r25, Y+20	; 0x14
    1602:	00 97       	sbiw	r24, 0x00	; 0
    1604:	69 f7       	brne	.-38     	; 0x15e0 <LCD_VidInit+0x2a2>
    1606:	14 c0       	rjmp	.+40     	; 0x1630 <LCD_VidInit+0x2f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1608:	6d 89       	ldd	r22, Y+21	; 0x15
    160a:	7e 89       	ldd	r23, Y+22	; 0x16
    160c:	8f 89       	ldd	r24, Y+23	; 0x17
    160e:	98 8d       	ldd	r25, Y+24	; 0x18
    1610:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1614:	dc 01       	movw	r26, r24
    1616:	cb 01       	movw	r24, r22
    1618:	9c 8b       	std	Y+20, r25	; 0x14
    161a:	8b 8b       	std	Y+19, r24	; 0x13
    161c:	8b 89       	ldd	r24, Y+19	; 0x13
    161e:	9c 89       	ldd	r25, Y+20	; 0x14
    1620:	98 8b       	std	Y+16, r25	; 0x10
    1622:	8f 87       	std	Y+15, r24	; 0x0f
    1624:	8f 85       	ldd	r24, Y+15	; 0x0f
    1626:	98 89       	ldd	r25, Y+16	; 0x10
    1628:	01 97       	sbiw	r24, 0x01	; 1
    162a:	f1 f7       	brne	.-4      	; 0x1628 <LCD_VidInit+0x2ea>
    162c:	98 8b       	std	Y+16, r25	; 0x10
    162e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1); // wait for LCD to Display On
	LCD_VidWriteCommand(CLRDisplay);	//Clear Display
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	0e 94 96 0b 	call	0x172c	; 0x172c <LCD_VidWriteCommand>
    1636:	80 e0       	ldi	r24, 0x00	; 0
    1638:	90 e0       	ldi	r25, 0x00	; 0
    163a:	a0 e0       	ldi	r26, 0x00	; 0
    163c:	b0 e4       	ldi	r27, 0x40	; 64
    163e:	8b 87       	std	Y+11, r24	; 0x0b
    1640:	9c 87       	std	Y+12, r25	; 0x0c
    1642:	ad 87       	std	Y+13, r26	; 0x0d
    1644:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1646:	6b 85       	ldd	r22, Y+11	; 0x0b
    1648:	7c 85       	ldd	r23, Y+12	; 0x0c
    164a:	8d 85       	ldd	r24, Y+13	; 0x0d
    164c:	9e 85       	ldd	r25, Y+14	; 0x0e
    164e:	20 e0       	ldi	r18, 0x00	; 0
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	4a ef       	ldi	r20, 0xFA	; 250
    1654:	54 e4       	ldi	r21, 0x44	; 68
    1656:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    165a:	dc 01       	movw	r26, r24
    165c:	cb 01       	movw	r24, r22
    165e:	8f 83       	std	Y+7, r24	; 0x07
    1660:	98 87       	std	Y+8, r25	; 0x08
    1662:	a9 87       	std	Y+9, r26	; 0x09
    1664:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1666:	6f 81       	ldd	r22, Y+7	; 0x07
    1668:	78 85       	ldd	r23, Y+8	; 0x08
    166a:	89 85       	ldd	r24, Y+9	; 0x09
    166c:	9a 85       	ldd	r25, Y+10	; 0x0a
    166e:	20 e0       	ldi	r18, 0x00	; 0
    1670:	30 e0       	ldi	r19, 0x00	; 0
    1672:	40 e8       	ldi	r20, 0x80	; 128
    1674:	5f e3       	ldi	r21, 0x3F	; 63
    1676:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    167a:	88 23       	and	r24, r24
    167c:	2c f4       	brge	.+10     	; 0x1688 <LCD_VidInit+0x34a>
		__ticks = 1;
    167e:	81 e0       	ldi	r24, 0x01	; 1
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	9e 83       	std	Y+6, r25	; 0x06
    1684:	8d 83       	std	Y+5, r24	; 0x05
    1686:	3f c0       	rjmp	.+126    	; 0x1706 <LCD_VidInit+0x3c8>
	else if (__tmp > 65535)
    1688:	6f 81       	ldd	r22, Y+7	; 0x07
    168a:	78 85       	ldd	r23, Y+8	; 0x08
    168c:	89 85       	ldd	r24, Y+9	; 0x09
    168e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1690:	20 e0       	ldi	r18, 0x00	; 0
    1692:	3f ef       	ldi	r19, 0xFF	; 255
    1694:	4f e7       	ldi	r20, 0x7F	; 127
    1696:	57 e4       	ldi	r21, 0x47	; 71
    1698:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    169c:	18 16       	cp	r1, r24
    169e:	4c f5       	brge	.+82     	; 0x16f2 <LCD_VidInit+0x3b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a0:	6b 85       	ldd	r22, Y+11	; 0x0b
    16a2:	7c 85       	ldd	r23, Y+12	; 0x0c
    16a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    16a6:	9e 85       	ldd	r25, Y+14	; 0x0e
    16a8:	20 e0       	ldi	r18, 0x00	; 0
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	40 e2       	ldi	r20, 0x20	; 32
    16ae:	51 e4       	ldi	r21, 0x41	; 65
    16b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16b4:	dc 01       	movw	r26, r24
    16b6:	cb 01       	movw	r24, r22
    16b8:	bc 01       	movw	r22, r24
    16ba:	cd 01       	movw	r24, r26
    16bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	9e 83       	std	Y+6, r25	; 0x06
    16c6:	8d 83       	std	Y+5, r24	; 0x05
    16c8:	0f c0       	rjmp	.+30     	; 0x16e8 <LCD_VidInit+0x3aa>
    16ca:	88 ec       	ldi	r24, 0xC8	; 200
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	9c 83       	std	Y+4, r25	; 0x04
    16d0:	8b 83       	std	Y+3, r24	; 0x03
    16d2:	8b 81       	ldd	r24, Y+3	; 0x03
    16d4:	9c 81       	ldd	r25, Y+4	; 0x04
    16d6:	01 97       	sbiw	r24, 0x01	; 1
    16d8:	f1 f7       	brne	.-4      	; 0x16d6 <LCD_VidInit+0x398>
    16da:	9c 83       	std	Y+4, r25	; 0x04
    16dc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    16de:	8d 81       	ldd	r24, Y+5	; 0x05
    16e0:	9e 81       	ldd	r25, Y+6	; 0x06
    16e2:	01 97       	sbiw	r24, 0x01	; 1
    16e4:	9e 83       	std	Y+6, r25	; 0x06
    16e6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    16e8:	8d 81       	ldd	r24, Y+5	; 0x05
    16ea:	9e 81       	ldd	r25, Y+6	; 0x06
    16ec:	00 97       	sbiw	r24, 0x00	; 0
    16ee:	69 f7       	brne	.-38     	; 0x16ca <LCD_VidInit+0x38c>
    16f0:	14 c0       	rjmp	.+40     	; 0x171a <LCD_VidInit+0x3dc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    16f2:	6f 81       	ldd	r22, Y+7	; 0x07
    16f4:	78 85       	ldd	r23, Y+8	; 0x08
    16f6:	89 85       	ldd	r24, Y+9	; 0x09
    16f8:	9a 85       	ldd	r25, Y+10	; 0x0a
    16fa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16fe:	dc 01       	movw	r26, r24
    1700:	cb 01       	movw	r24, r22
    1702:	9e 83       	std	Y+6, r25	; 0x06
    1704:	8d 83       	std	Y+5, r24	; 0x05
    1706:	8d 81       	ldd	r24, Y+5	; 0x05
    1708:	9e 81       	ldd	r25, Y+6	; 0x06
    170a:	9a 83       	std	Y+2, r25	; 0x02
    170c:	89 83       	std	Y+1, r24	; 0x01
    170e:	89 81       	ldd	r24, Y+1	; 0x01
    1710:	9a 81       	ldd	r25, Y+2	; 0x02
    1712:	01 97       	sbiw	r24, 0x01	; 1
    1714:	f1 f7       	brne	.-4      	; 0x1712 <LCD_VidInit+0x3d4>
    1716:	9a 83       	std	Y+2, r25	; 0x02
    1718:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2); // wait for LCD to Clear Display
}
    171a:	e8 96       	adiw	r28, 0x38	; 56
    171c:	0f b6       	in	r0, 0x3f	; 63
    171e:	f8 94       	cli
    1720:	de bf       	out	0x3e, r29	; 62
    1722:	0f be       	out	0x3f, r0	; 63
    1724:	cd bf       	out	0x3d, r28	; 61
    1726:	cf 91       	pop	r28
    1728:	df 91       	pop	r29
    172a:	08 95       	ret

0000172c <LCD_VidWriteCommand>:

void LCD_VidWriteCommand(u8 LOC_u8Command)
{
    172c:	1f 93       	push	r17
    172e:	df 93       	push	r29
    1730:	cf 93       	push	r28
    1732:	cd b7       	in	r28, 0x3d	; 61
    1734:	de b7       	in	r29, 0x3e	; 62
    1736:	ea 97       	sbiw	r28, 0x3a	; 58
    1738:	0f b6       	in	r0, 0x3f	; 63
    173a:	f8 94       	cli
    173c:	de bf       	out	0x3e, r29	; 62
    173e:	0f be       	out	0x3f, r0	; 63
    1740:	cd bf       	out	0x3d, r28	; 61
    1742:	8a af       	std	Y+58, r24	; 0x3a

	DIO_VidSetPinValue(LCD_CTRLPort, LCD_RS_PIN, OUT_LOW);  //RS = 0   register selection
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	63 e0       	ldi	r22, 0x03	; 3
    1748:	40 e0       	ldi	r20, 0x00	; 0
    174a:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_RW_PIN, OUT_LOW);  //RW = 0
    174e:	81 e0       	ldi	r24, 0x01	; 1
    1750:	64 e0       	ldi	r22, 0x04	; 4
    1752:	40 e0       	ldi	r20, 0x00	; 0
    1754:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	// to send 1st 4bits
	u8 LOC_u8Command4Bit = (LOC_u8Command & 0xf0) | (DIO_u8ReadPortValue(LCD_DataPort) & 0x0f) ;
    1758:	8a ad       	ldd	r24, Y+58	; 0x3a
    175a:	18 2f       	mov	r17, r24
    175c:	10 7f       	andi	r17, 0xF0	; 240
    175e:	83 e0       	ldi	r24, 0x03	; 3
    1760:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8ReadPortValue>
    1764:	8f 70       	andi	r24, 0x0F	; 15
    1766:	81 2b       	or	r24, r17
    1768:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPortValue(LCD_DataPort, LOC_u8Command4Bit);  // Write Command
    176a:	83 e0       	ldi	r24, 0x03	; 3
    176c:	69 ad       	ldd	r22, Y+57	; 0x39
    176e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_HIGH);  //Enable = 1 high rise edge
    1772:	81 e0       	ldi	r24, 0x01	; 1
    1774:	65 e0       	ldi	r22, 0x05	; 5
    1776:	41 e0       	ldi	r20, 0x01	; 1
    1778:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    177c:	80 e0       	ldi	r24, 0x00	; 0
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	a0 e8       	ldi	r26, 0x80	; 128
    1782:	bf e3       	ldi	r27, 0x3F	; 63
    1784:	8d ab       	std	Y+53, r24	; 0x35
    1786:	9e ab       	std	Y+54, r25	; 0x36
    1788:	af ab       	std	Y+55, r26	; 0x37
    178a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    178c:	6d a9       	ldd	r22, Y+53	; 0x35
    178e:	7e a9       	ldd	r23, Y+54	; 0x36
    1790:	8f a9       	ldd	r24, Y+55	; 0x37
    1792:	98 ad       	ldd	r25, Y+56	; 0x38
    1794:	20 e0       	ldi	r18, 0x00	; 0
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	4a ef       	ldi	r20, 0xFA	; 250
    179a:	54 e4       	ldi	r21, 0x44	; 68
    179c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17a0:	dc 01       	movw	r26, r24
    17a2:	cb 01       	movw	r24, r22
    17a4:	89 ab       	std	Y+49, r24	; 0x31
    17a6:	9a ab       	std	Y+50, r25	; 0x32
    17a8:	ab ab       	std	Y+51, r26	; 0x33
    17aa:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    17ac:	69 a9       	ldd	r22, Y+49	; 0x31
    17ae:	7a a9       	ldd	r23, Y+50	; 0x32
    17b0:	8b a9       	ldd	r24, Y+51	; 0x33
    17b2:	9c a9       	ldd	r25, Y+52	; 0x34
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	40 e8       	ldi	r20, 0x80	; 128
    17ba:	5f e3       	ldi	r21, 0x3F	; 63
    17bc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17c0:	88 23       	and	r24, r24
    17c2:	2c f4       	brge	.+10     	; 0x17ce <LCD_VidWriteCommand+0xa2>
		__ticks = 1;
    17c4:	81 e0       	ldi	r24, 0x01	; 1
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	98 ab       	std	Y+48, r25	; 0x30
    17ca:	8f a7       	std	Y+47, r24	; 0x2f
    17cc:	3f c0       	rjmp	.+126    	; 0x184c <LCD_VidWriteCommand+0x120>
	else if (__tmp > 65535)
    17ce:	69 a9       	ldd	r22, Y+49	; 0x31
    17d0:	7a a9       	ldd	r23, Y+50	; 0x32
    17d2:	8b a9       	ldd	r24, Y+51	; 0x33
    17d4:	9c a9       	ldd	r25, Y+52	; 0x34
    17d6:	20 e0       	ldi	r18, 0x00	; 0
    17d8:	3f ef       	ldi	r19, 0xFF	; 255
    17da:	4f e7       	ldi	r20, 0x7F	; 127
    17dc:	57 e4       	ldi	r21, 0x47	; 71
    17de:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17e2:	18 16       	cp	r1, r24
    17e4:	4c f5       	brge	.+82     	; 0x1838 <LCD_VidWriteCommand+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17e6:	6d a9       	ldd	r22, Y+53	; 0x35
    17e8:	7e a9       	ldd	r23, Y+54	; 0x36
    17ea:	8f a9       	ldd	r24, Y+55	; 0x37
    17ec:	98 ad       	ldd	r25, Y+56	; 0x38
    17ee:	20 e0       	ldi	r18, 0x00	; 0
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	40 e2       	ldi	r20, 0x20	; 32
    17f4:	51 e4       	ldi	r21, 0x41	; 65
    17f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17fa:	dc 01       	movw	r26, r24
    17fc:	cb 01       	movw	r24, r22
    17fe:	bc 01       	movw	r22, r24
    1800:	cd 01       	movw	r24, r26
    1802:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1806:	dc 01       	movw	r26, r24
    1808:	cb 01       	movw	r24, r22
    180a:	98 ab       	std	Y+48, r25	; 0x30
    180c:	8f a7       	std	Y+47, r24	; 0x2f
    180e:	0f c0       	rjmp	.+30     	; 0x182e <LCD_VidWriteCommand+0x102>
    1810:	88 ec       	ldi	r24, 0xC8	; 200
    1812:	90 e0       	ldi	r25, 0x00	; 0
    1814:	9e a7       	std	Y+46, r25	; 0x2e
    1816:	8d a7       	std	Y+45, r24	; 0x2d
    1818:	8d a5       	ldd	r24, Y+45	; 0x2d
    181a:	9e a5       	ldd	r25, Y+46	; 0x2e
    181c:	01 97       	sbiw	r24, 0x01	; 1
    181e:	f1 f7       	brne	.-4      	; 0x181c <LCD_VidWriteCommand+0xf0>
    1820:	9e a7       	std	Y+46, r25	; 0x2e
    1822:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1824:	8f a5       	ldd	r24, Y+47	; 0x2f
    1826:	98 a9       	ldd	r25, Y+48	; 0x30
    1828:	01 97       	sbiw	r24, 0x01	; 1
    182a:	98 ab       	std	Y+48, r25	; 0x30
    182c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    182e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1830:	98 a9       	ldd	r25, Y+48	; 0x30
    1832:	00 97       	sbiw	r24, 0x00	; 0
    1834:	69 f7       	brne	.-38     	; 0x1810 <LCD_VidWriteCommand+0xe4>
    1836:	14 c0       	rjmp	.+40     	; 0x1860 <LCD_VidWriteCommand+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1838:	69 a9       	ldd	r22, Y+49	; 0x31
    183a:	7a a9       	ldd	r23, Y+50	; 0x32
    183c:	8b a9       	ldd	r24, Y+51	; 0x33
    183e:	9c a9       	ldd	r25, Y+52	; 0x34
    1840:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1844:	dc 01       	movw	r26, r24
    1846:	cb 01       	movw	r24, r22
    1848:	98 ab       	std	Y+48, r25	; 0x30
    184a:	8f a7       	std	Y+47, r24	; 0x2f
    184c:	8f a5       	ldd	r24, Y+47	; 0x2f
    184e:	98 a9       	ldd	r25, Y+48	; 0x30
    1850:	9c a7       	std	Y+44, r25	; 0x2c
    1852:	8b a7       	std	Y+43, r24	; 0x2b
    1854:	8b a5       	ldd	r24, Y+43	; 0x2b
    1856:	9c a5       	ldd	r25, Y+44	; 0x2c
    1858:	01 97       	sbiw	r24, 0x01	; 1
    185a:	f1 f7       	brne	.-4      	; 0x1858 <LCD_VidWriteCommand+0x12c>
    185c:	9c a7       	std	Y+44, r25	; 0x2c
    185e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);	// required by LCD Datasheet
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_LOW);  //Enable = 0  Falling edge
    1860:	81 e0       	ldi	r24, 0x01	; 1
    1862:	65 e0       	ldi	r22, 0x05	; 5
    1864:	40 e0       	ldi	r20, 0x00	; 0
    1866:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    186a:	80 e0       	ldi	r24, 0x00	; 0
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	a0 e8       	ldi	r26, 0x80	; 128
    1870:	bf e3       	ldi	r27, 0x3F	; 63
    1872:	8f a3       	std	Y+39, r24	; 0x27
    1874:	98 a7       	std	Y+40, r25	; 0x28
    1876:	a9 a7       	std	Y+41, r26	; 0x29
    1878:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    187a:	6f a1       	ldd	r22, Y+39	; 0x27
    187c:	78 a5       	ldd	r23, Y+40	; 0x28
    187e:	89 a5       	ldd	r24, Y+41	; 0x29
    1880:	9a a5       	ldd	r25, Y+42	; 0x2a
    1882:	20 e0       	ldi	r18, 0x00	; 0
    1884:	30 e0       	ldi	r19, 0x00	; 0
    1886:	4a ef       	ldi	r20, 0xFA	; 250
    1888:	54 e4       	ldi	r21, 0x44	; 68
    188a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    188e:	dc 01       	movw	r26, r24
    1890:	cb 01       	movw	r24, r22
    1892:	8b a3       	std	Y+35, r24	; 0x23
    1894:	9c a3       	std	Y+36, r25	; 0x24
    1896:	ad a3       	std	Y+37, r26	; 0x25
    1898:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    189a:	6b a1       	ldd	r22, Y+35	; 0x23
    189c:	7c a1       	ldd	r23, Y+36	; 0x24
    189e:	8d a1       	ldd	r24, Y+37	; 0x25
    18a0:	9e a1       	ldd	r25, Y+38	; 0x26
    18a2:	20 e0       	ldi	r18, 0x00	; 0
    18a4:	30 e0       	ldi	r19, 0x00	; 0
    18a6:	40 e8       	ldi	r20, 0x80	; 128
    18a8:	5f e3       	ldi	r21, 0x3F	; 63
    18aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18ae:	88 23       	and	r24, r24
    18b0:	2c f4       	brge	.+10     	; 0x18bc <LCD_VidWriteCommand+0x190>
		__ticks = 1;
    18b2:	81 e0       	ldi	r24, 0x01	; 1
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	9a a3       	std	Y+34, r25	; 0x22
    18b8:	89 a3       	std	Y+33, r24	; 0x21
    18ba:	3f c0       	rjmp	.+126    	; 0x193a <LCD_VidWriteCommand+0x20e>
	else if (__tmp > 65535)
    18bc:	6b a1       	ldd	r22, Y+35	; 0x23
    18be:	7c a1       	ldd	r23, Y+36	; 0x24
    18c0:	8d a1       	ldd	r24, Y+37	; 0x25
    18c2:	9e a1       	ldd	r25, Y+38	; 0x26
    18c4:	20 e0       	ldi	r18, 0x00	; 0
    18c6:	3f ef       	ldi	r19, 0xFF	; 255
    18c8:	4f e7       	ldi	r20, 0x7F	; 127
    18ca:	57 e4       	ldi	r21, 0x47	; 71
    18cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18d0:	18 16       	cp	r1, r24
    18d2:	4c f5       	brge	.+82     	; 0x1926 <LCD_VidWriteCommand+0x1fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18d4:	6f a1       	ldd	r22, Y+39	; 0x27
    18d6:	78 a5       	ldd	r23, Y+40	; 0x28
    18d8:	89 a5       	ldd	r24, Y+41	; 0x29
    18da:	9a a5       	ldd	r25, Y+42	; 0x2a
    18dc:	20 e0       	ldi	r18, 0x00	; 0
    18de:	30 e0       	ldi	r19, 0x00	; 0
    18e0:	40 e2       	ldi	r20, 0x20	; 32
    18e2:	51 e4       	ldi	r21, 0x41	; 65
    18e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18e8:	dc 01       	movw	r26, r24
    18ea:	cb 01       	movw	r24, r22
    18ec:	bc 01       	movw	r22, r24
    18ee:	cd 01       	movw	r24, r26
    18f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18f4:	dc 01       	movw	r26, r24
    18f6:	cb 01       	movw	r24, r22
    18f8:	9a a3       	std	Y+34, r25	; 0x22
    18fa:	89 a3       	std	Y+33, r24	; 0x21
    18fc:	0f c0       	rjmp	.+30     	; 0x191c <LCD_VidWriteCommand+0x1f0>
    18fe:	88 ec       	ldi	r24, 0xC8	; 200
    1900:	90 e0       	ldi	r25, 0x00	; 0
    1902:	98 a3       	std	Y+32, r25	; 0x20
    1904:	8f 8f       	std	Y+31, r24	; 0x1f
    1906:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1908:	98 a1       	ldd	r25, Y+32	; 0x20
    190a:	01 97       	sbiw	r24, 0x01	; 1
    190c:	f1 f7       	brne	.-4      	; 0x190a <LCD_VidWriteCommand+0x1de>
    190e:	98 a3       	std	Y+32, r25	; 0x20
    1910:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1912:	89 a1       	ldd	r24, Y+33	; 0x21
    1914:	9a a1       	ldd	r25, Y+34	; 0x22
    1916:	01 97       	sbiw	r24, 0x01	; 1
    1918:	9a a3       	std	Y+34, r25	; 0x22
    191a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    191c:	89 a1       	ldd	r24, Y+33	; 0x21
    191e:	9a a1       	ldd	r25, Y+34	; 0x22
    1920:	00 97       	sbiw	r24, 0x00	; 0
    1922:	69 f7       	brne	.-38     	; 0x18fe <LCD_VidWriteCommand+0x1d2>
    1924:	14 c0       	rjmp	.+40     	; 0x194e <LCD_VidWriteCommand+0x222>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1926:	6b a1       	ldd	r22, Y+35	; 0x23
    1928:	7c a1       	ldd	r23, Y+36	; 0x24
    192a:	8d a1       	ldd	r24, Y+37	; 0x25
    192c:	9e a1       	ldd	r25, Y+38	; 0x26
    192e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1932:	dc 01       	movw	r26, r24
    1934:	cb 01       	movw	r24, r22
    1936:	9a a3       	std	Y+34, r25	; 0x22
    1938:	89 a3       	std	Y+33, r24	; 0x21
    193a:	89 a1       	ldd	r24, Y+33	; 0x21
    193c:	9a a1       	ldd	r25, Y+34	; 0x22
    193e:	9e 8f       	std	Y+30, r25	; 0x1e
    1940:	8d 8f       	std	Y+29, r24	; 0x1d
    1942:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1944:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1946:	01 97       	sbiw	r24, 0x01	; 1
    1948:	f1 f7       	brne	.-4      	; 0x1946 <LCD_VidWriteCommand+0x21a>
    194a:	9e 8f       	std	Y+30, r25	; 0x1e
    194c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); // give the LCD time to wite / display
	// to send 2nd 4bits
	LOC_u8Command4Bit =( (LOC_u8Command & 0x0f)<<4) | (DIO_u8ReadPortValue(LCD_DataPort) & 0x0f) ;
    194e:	8a ad       	ldd	r24, Y+58	; 0x3a
    1950:	88 2f       	mov	r24, r24
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	82 95       	swap	r24
    1956:	92 95       	swap	r25
    1958:	90 7f       	andi	r25, 0xF0	; 240
    195a:	98 27       	eor	r25, r24
    195c:	80 7f       	andi	r24, 0xF0	; 240
    195e:	98 27       	eor	r25, r24
    1960:	18 2f       	mov	r17, r24
    1962:	83 e0       	ldi	r24, 0x03	; 3
    1964:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8ReadPortValue>
    1968:	8f 70       	andi	r24, 0x0F	; 15
    196a:	81 2b       	or	r24, r17
    196c:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPortValue(LCD_DataPort, LOC_u8Command4Bit);  // Write Command
    196e:	83 e0       	ldi	r24, 0x03	; 3
    1970:	69 ad       	ldd	r22, Y+57	; 0x39
    1972:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_HIGH);  //Enable = 1 high rise edge
    1976:	81 e0       	ldi	r24, 0x01	; 1
    1978:	65 e0       	ldi	r22, 0x05	; 5
    197a:	41 e0       	ldi	r20, 0x01	; 1
    197c:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1980:	80 e0       	ldi	r24, 0x00	; 0
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	a0 e8       	ldi	r26, 0x80	; 128
    1986:	bf e3       	ldi	r27, 0x3F	; 63
    1988:	89 8f       	std	Y+25, r24	; 0x19
    198a:	9a 8f       	std	Y+26, r25	; 0x1a
    198c:	ab 8f       	std	Y+27, r26	; 0x1b
    198e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1990:	69 8d       	ldd	r22, Y+25	; 0x19
    1992:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1994:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1996:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1998:	20 e0       	ldi	r18, 0x00	; 0
    199a:	30 e0       	ldi	r19, 0x00	; 0
    199c:	4a ef       	ldi	r20, 0xFA	; 250
    199e:	54 e4       	ldi	r21, 0x44	; 68
    19a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19a4:	dc 01       	movw	r26, r24
    19a6:	cb 01       	movw	r24, r22
    19a8:	8d 8b       	std	Y+21, r24	; 0x15
    19aa:	9e 8b       	std	Y+22, r25	; 0x16
    19ac:	af 8b       	std	Y+23, r26	; 0x17
    19ae:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    19b0:	6d 89       	ldd	r22, Y+21	; 0x15
    19b2:	7e 89       	ldd	r23, Y+22	; 0x16
    19b4:	8f 89       	ldd	r24, Y+23	; 0x17
    19b6:	98 8d       	ldd	r25, Y+24	; 0x18
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	30 e0       	ldi	r19, 0x00	; 0
    19bc:	40 e8       	ldi	r20, 0x80	; 128
    19be:	5f e3       	ldi	r21, 0x3F	; 63
    19c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19c4:	88 23       	and	r24, r24
    19c6:	2c f4       	brge	.+10     	; 0x19d2 <LCD_VidWriteCommand+0x2a6>
		__ticks = 1;
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	9c 8b       	std	Y+20, r25	; 0x14
    19ce:	8b 8b       	std	Y+19, r24	; 0x13
    19d0:	3f c0       	rjmp	.+126    	; 0x1a50 <LCD_VidWriteCommand+0x324>
	else if (__tmp > 65535)
    19d2:	6d 89       	ldd	r22, Y+21	; 0x15
    19d4:	7e 89       	ldd	r23, Y+22	; 0x16
    19d6:	8f 89       	ldd	r24, Y+23	; 0x17
    19d8:	98 8d       	ldd	r25, Y+24	; 0x18
    19da:	20 e0       	ldi	r18, 0x00	; 0
    19dc:	3f ef       	ldi	r19, 0xFF	; 255
    19de:	4f e7       	ldi	r20, 0x7F	; 127
    19e0:	57 e4       	ldi	r21, 0x47	; 71
    19e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19e6:	18 16       	cp	r1, r24
    19e8:	4c f5       	brge	.+82     	; 0x1a3c <LCD_VidWriteCommand+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19ea:	69 8d       	ldd	r22, Y+25	; 0x19
    19ec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19ee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19f0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	30 e0       	ldi	r19, 0x00	; 0
    19f6:	40 e2       	ldi	r20, 0x20	; 32
    19f8:	51 e4       	ldi	r21, 0x41	; 65
    19fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19fe:	dc 01       	movw	r26, r24
    1a00:	cb 01       	movw	r24, r22
    1a02:	bc 01       	movw	r22, r24
    1a04:	cd 01       	movw	r24, r26
    1a06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a0a:	dc 01       	movw	r26, r24
    1a0c:	cb 01       	movw	r24, r22
    1a0e:	9c 8b       	std	Y+20, r25	; 0x14
    1a10:	8b 8b       	std	Y+19, r24	; 0x13
    1a12:	0f c0       	rjmp	.+30     	; 0x1a32 <LCD_VidWriteCommand+0x306>
    1a14:	88 ec       	ldi	r24, 0xC8	; 200
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	9a 8b       	std	Y+18, r25	; 0x12
    1a1a:	89 8b       	std	Y+17, r24	; 0x11
    1a1c:	89 89       	ldd	r24, Y+17	; 0x11
    1a1e:	9a 89       	ldd	r25, Y+18	; 0x12
    1a20:	01 97       	sbiw	r24, 0x01	; 1
    1a22:	f1 f7       	brne	.-4      	; 0x1a20 <LCD_VidWriteCommand+0x2f4>
    1a24:	9a 8b       	std	Y+18, r25	; 0x12
    1a26:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a28:	8b 89       	ldd	r24, Y+19	; 0x13
    1a2a:	9c 89       	ldd	r25, Y+20	; 0x14
    1a2c:	01 97       	sbiw	r24, 0x01	; 1
    1a2e:	9c 8b       	std	Y+20, r25	; 0x14
    1a30:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a32:	8b 89       	ldd	r24, Y+19	; 0x13
    1a34:	9c 89       	ldd	r25, Y+20	; 0x14
    1a36:	00 97       	sbiw	r24, 0x00	; 0
    1a38:	69 f7       	brne	.-38     	; 0x1a14 <LCD_VidWriteCommand+0x2e8>
    1a3a:	14 c0       	rjmp	.+40     	; 0x1a64 <LCD_VidWriteCommand+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a3c:	6d 89       	ldd	r22, Y+21	; 0x15
    1a3e:	7e 89       	ldd	r23, Y+22	; 0x16
    1a40:	8f 89       	ldd	r24, Y+23	; 0x17
    1a42:	98 8d       	ldd	r25, Y+24	; 0x18
    1a44:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a48:	dc 01       	movw	r26, r24
    1a4a:	cb 01       	movw	r24, r22
    1a4c:	9c 8b       	std	Y+20, r25	; 0x14
    1a4e:	8b 8b       	std	Y+19, r24	; 0x13
    1a50:	8b 89       	ldd	r24, Y+19	; 0x13
    1a52:	9c 89       	ldd	r25, Y+20	; 0x14
    1a54:	98 8b       	std	Y+16, r25	; 0x10
    1a56:	8f 87       	std	Y+15, r24	; 0x0f
    1a58:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a5a:	98 89       	ldd	r25, Y+16	; 0x10
    1a5c:	01 97       	sbiw	r24, 0x01	; 1
    1a5e:	f1 f7       	brne	.-4      	; 0x1a5c <LCD_VidWriteCommand+0x330>
    1a60:	98 8b       	std	Y+16, r25	; 0x10
    1a62:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);	// required by LCD Datasheet
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_LOW);  //Enable = 0  Falling edge
    1a64:	81 e0       	ldi	r24, 0x01	; 1
    1a66:	65 e0       	ldi	r22, 0x05	; 5
    1a68:	40 e0       	ldi	r20, 0x00	; 0
    1a6a:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1a6e:	80 e0       	ldi	r24, 0x00	; 0
    1a70:	90 e0       	ldi	r25, 0x00	; 0
    1a72:	a0 e8       	ldi	r26, 0x80	; 128
    1a74:	bf e3       	ldi	r27, 0x3F	; 63
    1a76:	8b 87       	std	Y+11, r24	; 0x0b
    1a78:	9c 87       	std	Y+12, r25	; 0x0c
    1a7a:	ad 87       	std	Y+13, r26	; 0x0d
    1a7c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a7e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a80:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a82:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a84:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a86:	20 e0       	ldi	r18, 0x00	; 0
    1a88:	30 e0       	ldi	r19, 0x00	; 0
    1a8a:	4a ef       	ldi	r20, 0xFA	; 250
    1a8c:	54 e4       	ldi	r21, 0x44	; 68
    1a8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a92:	dc 01       	movw	r26, r24
    1a94:	cb 01       	movw	r24, r22
    1a96:	8f 83       	std	Y+7, r24	; 0x07
    1a98:	98 87       	std	Y+8, r25	; 0x08
    1a9a:	a9 87       	std	Y+9, r26	; 0x09
    1a9c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a9e:	6f 81       	ldd	r22, Y+7	; 0x07
    1aa0:	78 85       	ldd	r23, Y+8	; 0x08
    1aa2:	89 85       	ldd	r24, Y+9	; 0x09
    1aa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aa6:	20 e0       	ldi	r18, 0x00	; 0
    1aa8:	30 e0       	ldi	r19, 0x00	; 0
    1aaa:	40 e8       	ldi	r20, 0x80	; 128
    1aac:	5f e3       	ldi	r21, 0x3F	; 63
    1aae:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ab2:	88 23       	and	r24, r24
    1ab4:	2c f4       	brge	.+10     	; 0x1ac0 <LCD_VidWriteCommand+0x394>
		__ticks = 1;
    1ab6:	81 e0       	ldi	r24, 0x01	; 1
    1ab8:	90 e0       	ldi	r25, 0x00	; 0
    1aba:	9e 83       	std	Y+6, r25	; 0x06
    1abc:	8d 83       	std	Y+5, r24	; 0x05
    1abe:	3f c0       	rjmp	.+126    	; 0x1b3e <LCD_VidWriteCommand+0x412>
	else if (__tmp > 65535)
    1ac0:	6f 81       	ldd	r22, Y+7	; 0x07
    1ac2:	78 85       	ldd	r23, Y+8	; 0x08
    1ac4:	89 85       	ldd	r24, Y+9	; 0x09
    1ac6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	3f ef       	ldi	r19, 0xFF	; 255
    1acc:	4f e7       	ldi	r20, 0x7F	; 127
    1ace:	57 e4       	ldi	r21, 0x47	; 71
    1ad0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1ad4:	18 16       	cp	r1, r24
    1ad6:	4c f5       	brge	.+82     	; 0x1b2a <LCD_VidWriteCommand+0x3fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ad8:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ada:	7c 85       	ldd	r23, Y+12	; 0x0c
    1adc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ade:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ae0:	20 e0       	ldi	r18, 0x00	; 0
    1ae2:	30 e0       	ldi	r19, 0x00	; 0
    1ae4:	40 e2       	ldi	r20, 0x20	; 32
    1ae6:	51 e4       	ldi	r21, 0x41	; 65
    1ae8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1aec:	dc 01       	movw	r26, r24
    1aee:	cb 01       	movw	r24, r22
    1af0:	bc 01       	movw	r22, r24
    1af2:	cd 01       	movw	r24, r26
    1af4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1af8:	dc 01       	movw	r26, r24
    1afa:	cb 01       	movw	r24, r22
    1afc:	9e 83       	std	Y+6, r25	; 0x06
    1afe:	8d 83       	std	Y+5, r24	; 0x05
    1b00:	0f c0       	rjmp	.+30     	; 0x1b20 <LCD_VidWriteCommand+0x3f4>
    1b02:	88 ec       	ldi	r24, 0xC8	; 200
    1b04:	90 e0       	ldi	r25, 0x00	; 0
    1b06:	9c 83       	std	Y+4, r25	; 0x04
    1b08:	8b 83       	std	Y+3, r24	; 0x03
    1b0a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b0c:	9c 81       	ldd	r25, Y+4	; 0x04
    1b0e:	01 97       	sbiw	r24, 0x01	; 1
    1b10:	f1 f7       	brne	.-4      	; 0x1b0e <LCD_VidWriteCommand+0x3e2>
    1b12:	9c 83       	std	Y+4, r25	; 0x04
    1b14:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b16:	8d 81       	ldd	r24, Y+5	; 0x05
    1b18:	9e 81       	ldd	r25, Y+6	; 0x06
    1b1a:	01 97       	sbiw	r24, 0x01	; 1
    1b1c:	9e 83       	std	Y+6, r25	; 0x06
    1b1e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b20:	8d 81       	ldd	r24, Y+5	; 0x05
    1b22:	9e 81       	ldd	r25, Y+6	; 0x06
    1b24:	00 97       	sbiw	r24, 0x00	; 0
    1b26:	69 f7       	brne	.-38     	; 0x1b02 <LCD_VidWriteCommand+0x3d6>
    1b28:	14 c0       	rjmp	.+40     	; 0x1b52 <LCD_VidWriteCommand+0x426>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b2a:	6f 81       	ldd	r22, Y+7	; 0x07
    1b2c:	78 85       	ldd	r23, Y+8	; 0x08
    1b2e:	89 85       	ldd	r24, Y+9	; 0x09
    1b30:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b36:	dc 01       	movw	r26, r24
    1b38:	cb 01       	movw	r24, r22
    1b3a:	9e 83       	std	Y+6, r25	; 0x06
    1b3c:	8d 83       	std	Y+5, r24	; 0x05
    1b3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b40:	9e 81       	ldd	r25, Y+6	; 0x06
    1b42:	9a 83       	std	Y+2, r25	; 0x02
    1b44:	89 83       	std	Y+1, r24	; 0x01
    1b46:	89 81       	ldd	r24, Y+1	; 0x01
    1b48:	9a 81       	ldd	r25, Y+2	; 0x02
    1b4a:	01 97       	sbiw	r24, 0x01	; 1
    1b4c:	f1 f7       	brne	.-4      	; 0x1b4a <LCD_VidWriteCommand+0x41e>
    1b4e:	9a 83       	std	Y+2, r25	; 0x02
    1b50:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); // give the LCD time to wite / display

}
    1b52:	ea 96       	adiw	r28, 0x3a	; 58
    1b54:	0f b6       	in	r0, 0x3f	; 63
    1b56:	f8 94       	cli
    1b58:	de bf       	out	0x3e, r29	; 62
    1b5a:	0f be       	out	0x3f, r0	; 63
    1b5c:	cd bf       	out	0x3d, r28	; 61
    1b5e:	cf 91       	pop	r28
    1b60:	df 91       	pop	r29
    1b62:	1f 91       	pop	r17
    1b64:	08 95       	ret

00001b66 <LCD_VidWriteData>:

void LCD_VidWriteData(u8 LOC_u8Data)
{
    1b66:	1f 93       	push	r17
    1b68:	df 93       	push	r29
    1b6a:	cf 93       	push	r28
    1b6c:	cd b7       	in	r28, 0x3d	; 61
    1b6e:	de b7       	in	r29, 0x3e	; 62
    1b70:	ea 97       	sbiw	r28, 0x3a	; 58
    1b72:	0f b6       	in	r0, 0x3f	; 63
    1b74:	f8 94       	cli
    1b76:	de bf       	out	0x3e, r29	; 62
    1b78:	0f be       	out	0x3f, r0	; 63
    1b7a:	cd bf       	out	0x3d, r28	; 61
    1b7c:	8a af       	std	Y+58, r24	; 0x3a
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_RS_PIN, OUT_HIGH);  //RS = 1
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	63 e0       	ldi	r22, 0x03	; 3
    1b82:	41 e0       	ldi	r20, 0x01	; 1
    1b84:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_RW_PIN, OUT_LOW);  //RW = 0
    1b88:	81 e0       	ldi	r24, 0x01	; 1
    1b8a:	64 e0       	ldi	r22, 0x04	; 4
    1b8c:	40 e0       	ldi	r20, 0x00	; 0
    1b8e:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	// to send 1st 4bits
	u8 LOC_u8Data4Bit = (LOC_u8Data & 0xf0) | (DIO_u8ReadPortValue(LCD_DataPort) & 0x0f) ;
    1b92:	8a ad       	ldd	r24, Y+58	; 0x3a
    1b94:	18 2f       	mov	r17, r24
    1b96:	10 7f       	andi	r17, 0xF0	; 240
    1b98:	83 e0       	ldi	r24, 0x03	; 3
    1b9a:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8ReadPortValue>
    1b9e:	8f 70       	andi	r24, 0x0F	; 15
    1ba0:	81 2b       	or	r24, r17
    1ba2:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPortValue(LCD_DataPort, LOC_u8Data);  // Write data
    1ba4:	83 e0       	ldi	r24, 0x03	; 3
    1ba6:	6a ad       	ldd	r22, Y+58	; 0x3a
    1ba8:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_HIGH);  //Enable = 1 high rise edge
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	65 e0       	ldi	r22, 0x05	; 5
    1bb0:	41 e0       	ldi	r20, 0x01	; 1
    1bb2:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1bb6:	80 e0       	ldi	r24, 0x00	; 0
    1bb8:	90 e0       	ldi	r25, 0x00	; 0
    1bba:	a0 e8       	ldi	r26, 0x80	; 128
    1bbc:	bf e3       	ldi	r27, 0x3F	; 63
    1bbe:	8d ab       	std	Y+53, r24	; 0x35
    1bc0:	9e ab       	std	Y+54, r25	; 0x36
    1bc2:	af ab       	std	Y+55, r26	; 0x37
    1bc4:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bc6:	6d a9       	ldd	r22, Y+53	; 0x35
    1bc8:	7e a9       	ldd	r23, Y+54	; 0x36
    1bca:	8f a9       	ldd	r24, Y+55	; 0x37
    1bcc:	98 ad       	ldd	r25, Y+56	; 0x38
    1bce:	20 e0       	ldi	r18, 0x00	; 0
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	4a ef       	ldi	r20, 0xFA	; 250
    1bd4:	54 e4       	ldi	r21, 0x44	; 68
    1bd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bda:	dc 01       	movw	r26, r24
    1bdc:	cb 01       	movw	r24, r22
    1bde:	89 ab       	std	Y+49, r24	; 0x31
    1be0:	9a ab       	std	Y+50, r25	; 0x32
    1be2:	ab ab       	std	Y+51, r26	; 0x33
    1be4:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1be6:	69 a9       	ldd	r22, Y+49	; 0x31
    1be8:	7a a9       	ldd	r23, Y+50	; 0x32
    1bea:	8b a9       	ldd	r24, Y+51	; 0x33
    1bec:	9c a9       	ldd	r25, Y+52	; 0x34
    1bee:	20 e0       	ldi	r18, 0x00	; 0
    1bf0:	30 e0       	ldi	r19, 0x00	; 0
    1bf2:	40 e8       	ldi	r20, 0x80	; 128
    1bf4:	5f e3       	ldi	r21, 0x3F	; 63
    1bf6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bfa:	88 23       	and	r24, r24
    1bfc:	2c f4       	brge	.+10     	; 0x1c08 <LCD_VidWriteData+0xa2>
		__ticks = 1;
    1bfe:	81 e0       	ldi	r24, 0x01	; 1
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	98 ab       	std	Y+48, r25	; 0x30
    1c04:	8f a7       	std	Y+47, r24	; 0x2f
    1c06:	3f c0       	rjmp	.+126    	; 0x1c86 <LCD_VidWriteData+0x120>
	else if (__tmp > 65535)
    1c08:	69 a9       	ldd	r22, Y+49	; 0x31
    1c0a:	7a a9       	ldd	r23, Y+50	; 0x32
    1c0c:	8b a9       	ldd	r24, Y+51	; 0x33
    1c0e:	9c a9       	ldd	r25, Y+52	; 0x34
    1c10:	20 e0       	ldi	r18, 0x00	; 0
    1c12:	3f ef       	ldi	r19, 0xFF	; 255
    1c14:	4f e7       	ldi	r20, 0x7F	; 127
    1c16:	57 e4       	ldi	r21, 0x47	; 71
    1c18:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c1c:	18 16       	cp	r1, r24
    1c1e:	4c f5       	brge	.+82     	; 0x1c72 <LCD_VidWriteData+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c20:	6d a9       	ldd	r22, Y+53	; 0x35
    1c22:	7e a9       	ldd	r23, Y+54	; 0x36
    1c24:	8f a9       	ldd	r24, Y+55	; 0x37
    1c26:	98 ad       	ldd	r25, Y+56	; 0x38
    1c28:	20 e0       	ldi	r18, 0x00	; 0
    1c2a:	30 e0       	ldi	r19, 0x00	; 0
    1c2c:	40 e2       	ldi	r20, 0x20	; 32
    1c2e:	51 e4       	ldi	r21, 0x41	; 65
    1c30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c34:	dc 01       	movw	r26, r24
    1c36:	cb 01       	movw	r24, r22
    1c38:	bc 01       	movw	r22, r24
    1c3a:	cd 01       	movw	r24, r26
    1c3c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c40:	dc 01       	movw	r26, r24
    1c42:	cb 01       	movw	r24, r22
    1c44:	98 ab       	std	Y+48, r25	; 0x30
    1c46:	8f a7       	std	Y+47, r24	; 0x2f
    1c48:	0f c0       	rjmp	.+30     	; 0x1c68 <LCD_VidWriteData+0x102>
    1c4a:	88 ec       	ldi	r24, 0xC8	; 200
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	9e a7       	std	Y+46, r25	; 0x2e
    1c50:	8d a7       	std	Y+45, r24	; 0x2d
    1c52:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c54:	9e a5       	ldd	r25, Y+46	; 0x2e
    1c56:	01 97       	sbiw	r24, 0x01	; 1
    1c58:	f1 f7       	brne	.-4      	; 0x1c56 <LCD_VidWriteData+0xf0>
    1c5a:	9e a7       	std	Y+46, r25	; 0x2e
    1c5c:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c5e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c60:	98 a9       	ldd	r25, Y+48	; 0x30
    1c62:	01 97       	sbiw	r24, 0x01	; 1
    1c64:	98 ab       	std	Y+48, r25	; 0x30
    1c66:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c68:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c6a:	98 a9       	ldd	r25, Y+48	; 0x30
    1c6c:	00 97       	sbiw	r24, 0x00	; 0
    1c6e:	69 f7       	brne	.-38     	; 0x1c4a <LCD_VidWriteData+0xe4>
    1c70:	14 c0       	rjmp	.+40     	; 0x1c9a <LCD_VidWriteData+0x134>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c72:	69 a9       	ldd	r22, Y+49	; 0x31
    1c74:	7a a9       	ldd	r23, Y+50	; 0x32
    1c76:	8b a9       	ldd	r24, Y+51	; 0x33
    1c78:	9c a9       	ldd	r25, Y+52	; 0x34
    1c7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c7e:	dc 01       	movw	r26, r24
    1c80:	cb 01       	movw	r24, r22
    1c82:	98 ab       	std	Y+48, r25	; 0x30
    1c84:	8f a7       	std	Y+47, r24	; 0x2f
    1c86:	8f a5       	ldd	r24, Y+47	; 0x2f
    1c88:	98 a9       	ldd	r25, Y+48	; 0x30
    1c8a:	9c a7       	std	Y+44, r25	; 0x2c
    1c8c:	8b a7       	std	Y+43, r24	; 0x2b
    1c8e:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c90:	9c a5       	ldd	r25, Y+44	; 0x2c
    1c92:	01 97       	sbiw	r24, 0x01	; 1
    1c94:	f1 f7       	brne	.-4      	; 0x1c92 <LCD_VidWriteData+0x12c>
    1c96:	9c a7       	std	Y+44, r25	; 0x2c
    1c98:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);	// required by LCD Datasheet
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_LOW);  //Enable = 0  Falling edge
    1c9a:	81 e0       	ldi	r24, 0x01	; 1
    1c9c:	65 e0       	ldi	r22, 0x05	; 5
    1c9e:	40 e0       	ldi	r20, 0x00	; 0
    1ca0:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1ca4:	80 e0       	ldi	r24, 0x00	; 0
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	a0 e8       	ldi	r26, 0x80	; 128
    1caa:	bf e3       	ldi	r27, 0x3F	; 63
    1cac:	8f a3       	std	Y+39, r24	; 0x27
    1cae:	98 a7       	std	Y+40, r25	; 0x28
    1cb0:	a9 a7       	std	Y+41, r26	; 0x29
    1cb2:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cb4:	6f a1       	ldd	r22, Y+39	; 0x27
    1cb6:	78 a5       	ldd	r23, Y+40	; 0x28
    1cb8:	89 a5       	ldd	r24, Y+41	; 0x29
    1cba:	9a a5       	ldd	r25, Y+42	; 0x2a
    1cbc:	20 e0       	ldi	r18, 0x00	; 0
    1cbe:	30 e0       	ldi	r19, 0x00	; 0
    1cc0:	4a ef       	ldi	r20, 0xFA	; 250
    1cc2:	54 e4       	ldi	r21, 0x44	; 68
    1cc4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cc8:	dc 01       	movw	r26, r24
    1cca:	cb 01       	movw	r24, r22
    1ccc:	8b a3       	std	Y+35, r24	; 0x23
    1cce:	9c a3       	std	Y+36, r25	; 0x24
    1cd0:	ad a3       	std	Y+37, r26	; 0x25
    1cd2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1cd4:	6b a1       	ldd	r22, Y+35	; 0x23
    1cd6:	7c a1       	ldd	r23, Y+36	; 0x24
    1cd8:	8d a1       	ldd	r24, Y+37	; 0x25
    1cda:	9e a1       	ldd	r25, Y+38	; 0x26
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	40 e8       	ldi	r20, 0x80	; 128
    1ce2:	5f e3       	ldi	r21, 0x3F	; 63
    1ce4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ce8:	88 23       	and	r24, r24
    1cea:	2c f4       	brge	.+10     	; 0x1cf6 <LCD_VidWriteData+0x190>
		__ticks = 1;
    1cec:	81 e0       	ldi	r24, 0x01	; 1
    1cee:	90 e0       	ldi	r25, 0x00	; 0
    1cf0:	9a a3       	std	Y+34, r25	; 0x22
    1cf2:	89 a3       	std	Y+33, r24	; 0x21
    1cf4:	3f c0       	rjmp	.+126    	; 0x1d74 <LCD_VidWriteData+0x20e>
	else if (__tmp > 65535)
    1cf6:	6b a1       	ldd	r22, Y+35	; 0x23
    1cf8:	7c a1       	ldd	r23, Y+36	; 0x24
    1cfa:	8d a1       	ldd	r24, Y+37	; 0x25
    1cfc:	9e a1       	ldd	r25, Y+38	; 0x26
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	3f ef       	ldi	r19, 0xFF	; 255
    1d02:	4f e7       	ldi	r20, 0x7F	; 127
    1d04:	57 e4       	ldi	r21, 0x47	; 71
    1d06:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d0a:	18 16       	cp	r1, r24
    1d0c:	4c f5       	brge	.+82     	; 0x1d60 <LCD_VidWriteData+0x1fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d0e:	6f a1       	ldd	r22, Y+39	; 0x27
    1d10:	78 a5       	ldd	r23, Y+40	; 0x28
    1d12:	89 a5       	ldd	r24, Y+41	; 0x29
    1d14:	9a a5       	ldd	r25, Y+42	; 0x2a
    1d16:	20 e0       	ldi	r18, 0x00	; 0
    1d18:	30 e0       	ldi	r19, 0x00	; 0
    1d1a:	40 e2       	ldi	r20, 0x20	; 32
    1d1c:	51 e4       	ldi	r21, 0x41	; 65
    1d1e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d22:	dc 01       	movw	r26, r24
    1d24:	cb 01       	movw	r24, r22
    1d26:	bc 01       	movw	r22, r24
    1d28:	cd 01       	movw	r24, r26
    1d2a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d2e:	dc 01       	movw	r26, r24
    1d30:	cb 01       	movw	r24, r22
    1d32:	9a a3       	std	Y+34, r25	; 0x22
    1d34:	89 a3       	std	Y+33, r24	; 0x21
    1d36:	0f c0       	rjmp	.+30     	; 0x1d56 <LCD_VidWriteData+0x1f0>
    1d38:	88 ec       	ldi	r24, 0xC8	; 200
    1d3a:	90 e0       	ldi	r25, 0x00	; 0
    1d3c:	98 a3       	std	Y+32, r25	; 0x20
    1d3e:	8f 8f       	std	Y+31, r24	; 0x1f
    1d40:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1d42:	98 a1       	ldd	r25, Y+32	; 0x20
    1d44:	01 97       	sbiw	r24, 0x01	; 1
    1d46:	f1 f7       	brne	.-4      	; 0x1d44 <LCD_VidWriteData+0x1de>
    1d48:	98 a3       	std	Y+32, r25	; 0x20
    1d4a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d4c:	89 a1       	ldd	r24, Y+33	; 0x21
    1d4e:	9a a1       	ldd	r25, Y+34	; 0x22
    1d50:	01 97       	sbiw	r24, 0x01	; 1
    1d52:	9a a3       	std	Y+34, r25	; 0x22
    1d54:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d56:	89 a1       	ldd	r24, Y+33	; 0x21
    1d58:	9a a1       	ldd	r25, Y+34	; 0x22
    1d5a:	00 97       	sbiw	r24, 0x00	; 0
    1d5c:	69 f7       	brne	.-38     	; 0x1d38 <LCD_VidWriteData+0x1d2>
    1d5e:	14 c0       	rjmp	.+40     	; 0x1d88 <LCD_VidWriteData+0x222>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d60:	6b a1       	ldd	r22, Y+35	; 0x23
    1d62:	7c a1       	ldd	r23, Y+36	; 0x24
    1d64:	8d a1       	ldd	r24, Y+37	; 0x25
    1d66:	9e a1       	ldd	r25, Y+38	; 0x26
    1d68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d6c:	dc 01       	movw	r26, r24
    1d6e:	cb 01       	movw	r24, r22
    1d70:	9a a3       	std	Y+34, r25	; 0x22
    1d72:	89 a3       	std	Y+33, r24	; 0x21
    1d74:	89 a1       	ldd	r24, Y+33	; 0x21
    1d76:	9a a1       	ldd	r25, Y+34	; 0x22
    1d78:	9e 8f       	std	Y+30, r25	; 0x1e
    1d7a:	8d 8f       	std	Y+29, r24	; 0x1d
    1d7c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1d7e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1d80:	01 97       	sbiw	r24, 0x01	; 1
    1d82:	f1 f7       	brne	.-4      	; 0x1d80 <LCD_VidWriteData+0x21a>
    1d84:	9e 8f       	std	Y+30, r25	; 0x1e
    1d86:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); // give the LCD time to wite / display
	// to send 2nd 4bits
	LOC_u8Data4Bit = (LOC_u8Data & 0x0f) | (DIO_u8ReadPortValue(LCD_DataPort) & 0x0f) ;
    1d88:	83 e0       	ldi	r24, 0x03	; 3
    1d8a:	0e 94 5e 09 	call	0x12bc	; 0x12bc <DIO_u8ReadPortValue>
    1d8e:	98 2f       	mov	r25, r24
    1d90:	8a ad       	ldd	r24, Y+58	; 0x3a
    1d92:	89 2b       	or	r24, r25
    1d94:	8f 70       	andi	r24, 0x0F	; 15
    1d96:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPortValue(LCD_DataPort, LOC_u8Data);  // Write data
    1d98:	83 e0       	ldi	r24, 0x03	; 3
    1d9a:	6a ad       	ldd	r22, Y+58	; 0x3a
    1d9c:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_HIGH);  //Enable = 1 high rise edge
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	65 e0       	ldi	r22, 0x05	; 5
    1da4:	41 e0       	ldi	r20, 0x01	; 1
    1da6:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	a0 e8       	ldi	r26, 0x80	; 128
    1db0:	bf e3       	ldi	r27, 0x3F	; 63
    1db2:	89 8f       	std	Y+25, r24	; 0x19
    1db4:	9a 8f       	std	Y+26, r25	; 0x1a
    1db6:	ab 8f       	std	Y+27, r26	; 0x1b
    1db8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dba:	69 8d       	ldd	r22, Y+25	; 0x19
    1dbc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dbe:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1dc0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1dc2:	20 e0       	ldi	r18, 0x00	; 0
    1dc4:	30 e0       	ldi	r19, 0x00	; 0
    1dc6:	4a ef       	ldi	r20, 0xFA	; 250
    1dc8:	54 e4       	ldi	r21, 0x44	; 68
    1dca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1dce:	dc 01       	movw	r26, r24
    1dd0:	cb 01       	movw	r24, r22
    1dd2:	8d 8b       	std	Y+21, r24	; 0x15
    1dd4:	9e 8b       	std	Y+22, r25	; 0x16
    1dd6:	af 8b       	std	Y+23, r26	; 0x17
    1dd8:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1dda:	6d 89       	ldd	r22, Y+21	; 0x15
    1ddc:	7e 89       	ldd	r23, Y+22	; 0x16
    1dde:	8f 89       	ldd	r24, Y+23	; 0x17
    1de0:	98 8d       	ldd	r25, Y+24	; 0x18
    1de2:	20 e0       	ldi	r18, 0x00	; 0
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	40 e8       	ldi	r20, 0x80	; 128
    1de8:	5f e3       	ldi	r21, 0x3F	; 63
    1dea:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1dee:	88 23       	and	r24, r24
    1df0:	2c f4       	brge	.+10     	; 0x1dfc <LCD_VidWriteData+0x296>
		__ticks = 1;
    1df2:	81 e0       	ldi	r24, 0x01	; 1
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	9c 8b       	std	Y+20, r25	; 0x14
    1df8:	8b 8b       	std	Y+19, r24	; 0x13
    1dfa:	3f c0       	rjmp	.+126    	; 0x1e7a <LCD_VidWriteData+0x314>
	else if (__tmp > 65535)
    1dfc:	6d 89       	ldd	r22, Y+21	; 0x15
    1dfe:	7e 89       	ldd	r23, Y+22	; 0x16
    1e00:	8f 89       	ldd	r24, Y+23	; 0x17
    1e02:	98 8d       	ldd	r25, Y+24	; 0x18
    1e04:	20 e0       	ldi	r18, 0x00	; 0
    1e06:	3f ef       	ldi	r19, 0xFF	; 255
    1e08:	4f e7       	ldi	r20, 0x7F	; 127
    1e0a:	57 e4       	ldi	r21, 0x47	; 71
    1e0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e10:	18 16       	cp	r1, r24
    1e12:	4c f5       	brge	.+82     	; 0x1e66 <LCD_VidWriteData+0x300>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e14:	69 8d       	ldd	r22, Y+25	; 0x19
    1e16:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1e18:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1e1a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1e1c:	20 e0       	ldi	r18, 0x00	; 0
    1e1e:	30 e0       	ldi	r19, 0x00	; 0
    1e20:	40 e2       	ldi	r20, 0x20	; 32
    1e22:	51 e4       	ldi	r21, 0x41	; 65
    1e24:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e28:	dc 01       	movw	r26, r24
    1e2a:	cb 01       	movw	r24, r22
    1e2c:	bc 01       	movw	r22, r24
    1e2e:	cd 01       	movw	r24, r26
    1e30:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e34:	dc 01       	movw	r26, r24
    1e36:	cb 01       	movw	r24, r22
    1e38:	9c 8b       	std	Y+20, r25	; 0x14
    1e3a:	8b 8b       	std	Y+19, r24	; 0x13
    1e3c:	0f c0       	rjmp	.+30     	; 0x1e5c <LCD_VidWriteData+0x2f6>
    1e3e:	88 ec       	ldi	r24, 0xC8	; 200
    1e40:	90 e0       	ldi	r25, 0x00	; 0
    1e42:	9a 8b       	std	Y+18, r25	; 0x12
    1e44:	89 8b       	std	Y+17, r24	; 0x11
    1e46:	89 89       	ldd	r24, Y+17	; 0x11
    1e48:	9a 89       	ldd	r25, Y+18	; 0x12
    1e4a:	01 97       	sbiw	r24, 0x01	; 1
    1e4c:	f1 f7       	brne	.-4      	; 0x1e4a <LCD_VidWriteData+0x2e4>
    1e4e:	9a 8b       	std	Y+18, r25	; 0x12
    1e50:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e52:	8b 89       	ldd	r24, Y+19	; 0x13
    1e54:	9c 89       	ldd	r25, Y+20	; 0x14
    1e56:	01 97       	sbiw	r24, 0x01	; 1
    1e58:	9c 8b       	std	Y+20, r25	; 0x14
    1e5a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e5c:	8b 89       	ldd	r24, Y+19	; 0x13
    1e5e:	9c 89       	ldd	r25, Y+20	; 0x14
    1e60:	00 97       	sbiw	r24, 0x00	; 0
    1e62:	69 f7       	brne	.-38     	; 0x1e3e <LCD_VidWriteData+0x2d8>
    1e64:	14 c0       	rjmp	.+40     	; 0x1e8e <LCD_VidWriteData+0x328>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e66:	6d 89       	ldd	r22, Y+21	; 0x15
    1e68:	7e 89       	ldd	r23, Y+22	; 0x16
    1e6a:	8f 89       	ldd	r24, Y+23	; 0x17
    1e6c:	98 8d       	ldd	r25, Y+24	; 0x18
    1e6e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e72:	dc 01       	movw	r26, r24
    1e74:	cb 01       	movw	r24, r22
    1e76:	9c 8b       	std	Y+20, r25	; 0x14
    1e78:	8b 8b       	std	Y+19, r24	; 0x13
    1e7a:	8b 89       	ldd	r24, Y+19	; 0x13
    1e7c:	9c 89       	ldd	r25, Y+20	; 0x14
    1e7e:	98 8b       	std	Y+16, r25	; 0x10
    1e80:	8f 87       	std	Y+15, r24	; 0x0f
    1e82:	8f 85       	ldd	r24, Y+15	; 0x0f
    1e84:	98 89       	ldd	r25, Y+16	; 0x10
    1e86:	01 97       	sbiw	r24, 0x01	; 1
    1e88:	f1 f7       	brne	.-4      	; 0x1e86 <LCD_VidWriteData+0x320>
    1e8a:	98 8b       	std	Y+16, r25	; 0x10
    1e8c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);	// required by LCD Datasheet
	DIO_VidSetPinValue(LCD_CTRLPort, LCD_Enb_PIN, OUT_LOW);  //Enable = 0  Falling edge
    1e8e:	81 e0       	ldi	r24, 0x01	; 1
    1e90:	65 e0       	ldi	r22, 0x05	; 5
    1e92:	40 e0       	ldi	r20, 0x00	; 0
    1e94:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
    1e98:	80 e0       	ldi	r24, 0x00	; 0
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	a0 e8       	ldi	r26, 0x80	; 128
    1e9e:	bf e3       	ldi	r27, 0x3F	; 63
    1ea0:	8b 87       	std	Y+11, r24	; 0x0b
    1ea2:	9c 87       	std	Y+12, r25	; 0x0c
    1ea4:	ad 87       	std	Y+13, r26	; 0x0d
    1ea6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ea8:	6b 85       	ldd	r22, Y+11	; 0x0b
    1eaa:	7c 85       	ldd	r23, Y+12	; 0x0c
    1eac:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eae:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eb0:	20 e0       	ldi	r18, 0x00	; 0
    1eb2:	30 e0       	ldi	r19, 0x00	; 0
    1eb4:	4a ef       	ldi	r20, 0xFA	; 250
    1eb6:	54 e4       	ldi	r21, 0x44	; 68
    1eb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ebc:	dc 01       	movw	r26, r24
    1ebe:	cb 01       	movw	r24, r22
    1ec0:	8f 83       	std	Y+7, r24	; 0x07
    1ec2:	98 87       	std	Y+8, r25	; 0x08
    1ec4:	a9 87       	std	Y+9, r26	; 0x09
    1ec6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ec8:	6f 81       	ldd	r22, Y+7	; 0x07
    1eca:	78 85       	ldd	r23, Y+8	; 0x08
    1ecc:	89 85       	ldd	r24, Y+9	; 0x09
    1ece:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ed0:	20 e0       	ldi	r18, 0x00	; 0
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	40 e8       	ldi	r20, 0x80	; 128
    1ed6:	5f e3       	ldi	r21, 0x3F	; 63
    1ed8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1edc:	88 23       	and	r24, r24
    1ede:	2c f4       	brge	.+10     	; 0x1eea <LCD_VidWriteData+0x384>
		__ticks = 1;
    1ee0:	81 e0       	ldi	r24, 0x01	; 1
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	9e 83       	std	Y+6, r25	; 0x06
    1ee6:	8d 83       	std	Y+5, r24	; 0x05
    1ee8:	3f c0       	rjmp	.+126    	; 0x1f68 <LCD_VidWriteData+0x402>
	else if (__tmp > 65535)
    1eea:	6f 81       	ldd	r22, Y+7	; 0x07
    1eec:	78 85       	ldd	r23, Y+8	; 0x08
    1eee:	89 85       	ldd	r24, Y+9	; 0x09
    1ef0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ef2:	20 e0       	ldi	r18, 0x00	; 0
    1ef4:	3f ef       	ldi	r19, 0xFF	; 255
    1ef6:	4f e7       	ldi	r20, 0x7F	; 127
    1ef8:	57 e4       	ldi	r21, 0x47	; 71
    1efa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1efe:	18 16       	cp	r1, r24
    1f00:	4c f5       	brge	.+82     	; 0x1f54 <LCD_VidWriteData+0x3ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f02:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f04:	7c 85       	ldd	r23, Y+12	; 0x0c
    1f06:	8d 85       	ldd	r24, Y+13	; 0x0d
    1f08:	9e 85       	ldd	r25, Y+14	; 0x0e
    1f0a:	20 e0       	ldi	r18, 0x00	; 0
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	40 e2       	ldi	r20, 0x20	; 32
    1f10:	51 e4       	ldi	r21, 0x41	; 65
    1f12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f16:	dc 01       	movw	r26, r24
    1f18:	cb 01       	movw	r24, r22
    1f1a:	bc 01       	movw	r22, r24
    1f1c:	cd 01       	movw	r24, r26
    1f1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f22:	dc 01       	movw	r26, r24
    1f24:	cb 01       	movw	r24, r22
    1f26:	9e 83       	std	Y+6, r25	; 0x06
    1f28:	8d 83       	std	Y+5, r24	; 0x05
    1f2a:	0f c0       	rjmp	.+30     	; 0x1f4a <LCD_VidWriteData+0x3e4>
    1f2c:	88 ec       	ldi	r24, 0xC8	; 200
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	9c 83       	std	Y+4, r25	; 0x04
    1f32:	8b 83       	std	Y+3, r24	; 0x03
    1f34:	8b 81       	ldd	r24, Y+3	; 0x03
    1f36:	9c 81       	ldd	r25, Y+4	; 0x04
    1f38:	01 97       	sbiw	r24, 0x01	; 1
    1f3a:	f1 f7       	brne	.-4      	; 0x1f38 <LCD_VidWriteData+0x3d2>
    1f3c:	9c 83       	std	Y+4, r25	; 0x04
    1f3e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f40:	8d 81       	ldd	r24, Y+5	; 0x05
    1f42:	9e 81       	ldd	r25, Y+6	; 0x06
    1f44:	01 97       	sbiw	r24, 0x01	; 1
    1f46:	9e 83       	std	Y+6, r25	; 0x06
    1f48:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f4a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f4c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f4e:	00 97       	sbiw	r24, 0x00	; 0
    1f50:	69 f7       	brne	.-38     	; 0x1f2c <LCD_VidWriteData+0x3c6>
    1f52:	14 c0       	rjmp	.+40     	; 0x1f7c <LCD_VidWriteData+0x416>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f54:	6f 81       	ldd	r22, Y+7	; 0x07
    1f56:	78 85       	ldd	r23, Y+8	; 0x08
    1f58:	89 85       	ldd	r24, Y+9	; 0x09
    1f5a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f60:	dc 01       	movw	r26, r24
    1f62:	cb 01       	movw	r24, r22
    1f64:	9e 83       	std	Y+6, r25	; 0x06
    1f66:	8d 83       	std	Y+5, r24	; 0x05
    1f68:	8d 81       	ldd	r24, Y+5	; 0x05
    1f6a:	9e 81       	ldd	r25, Y+6	; 0x06
    1f6c:	9a 83       	std	Y+2, r25	; 0x02
    1f6e:	89 83       	std	Y+1, r24	; 0x01
    1f70:	89 81       	ldd	r24, Y+1	; 0x01
    1f72:	9a 81       	ldd	r25, Y+2	; 0x02
    1f74:	01 97       	sbiw	r24, 0x01	; 1
    1f76:	f1 f7       	brne	.-4      	; 0x1f74 <LCD_VidWriteData+0x40e>
    1f78:	9a 83       	std	Y+2, r25	; 0x02
    1f7a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); // give the LCD time to wite / display

}
    1f7c:	ea 96       	adiw	r28, 0x3a	; 58
    1f7e:	0f b6       	in	r0, 0x3f	; 63
    1f80:	f8 94       	cli
    1f82:	de bf       	out	0x3e, r29	; 62
    1f84:	0f be       	out	0x3f, r0	; 63
    1f86:	cd bf       	out	0x3d, r28	; 61
    1f88:	cf 91       	pop	r28
    1f8a:	df 91       	pop	r29
    1f8c:	1f 91       	pop	r17
    1f8e:	08 95       	ret

00001f90 <LCD_VidWriteString>:

void LCD_VidWriteString(u8 LOC_u8String[])
{
    1f90:	df 93       	push	r29
    1f92:	cf 93       	push	r28
    1f94:	00 d0       	rcall	.+0      	; 0x1f96 <LCD_VidWriteString+0x6>
    1f96:	0f 92       	push	r0
    1f98:	cd b7       	in	r28, 0x3d	; 61
    1f9a:	de b7       	in	r29, 0x3e	; 62
    1f9c:	9b 83       	std	Y+3, r25	; 0x03
    1f9e:	8a 83       	std	Y+2, r24	; 0x02


	for (u8 i=0; LOC_u8String[i] != '\0'; i++)
    1fa0:	19 82       	std	Y+1, r1	; 0x01
    1fa2:	18 c0       	rjmp	.+48     	; 0x1fd4 <LCD_VidWriteString+0x44>
	{
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_RS_PIN, OUT_HIGH);  //RS = 1
    1fa4:	81 e0       	ldi	r24, 0x01	; 1
    1fa6:	63 e0       	ldi	r22, 0x03	; 3
    1fa8:	41 e0       	ldi	r20, 0x01	; 1
    1faa:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_RW_PIN, OUT_LOW);  //RW = 0
    1fae:	81 e0       	ldi	r24, 0x01	; 1
    1fb0:	64 e0       	ldi	r22, 0x04	; 4
    1fb2:	40 e0       	ldi	r20, 0x00	; 0
    1fb4:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
		LCD_VidWriteData (LOC_u8String[i]);
    1fb8:	89 81       	ldd	r24, Y+1	; 0x01
    1fba:	28 2f       	mov	r18, r24
    1fbc:	30 e0       	ldi	r19, 0x00	; 0
    1fbe:	8a 81       	ldd	r24, Y+2	; 0x02
    1fc0:	9b 81       	ldd	r25, Y+3	; 0x03
    1fc2:	fc 01       	movw	r30, r24
    1fc4:	e2 0f       	add	r30, r18
    1fc6:	f3 1f       	adc	r31, r19
    1fc8:	80 81       	ld	r24, Z
    1fca:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <LCD_VidWriteData>

void LCD_VidWriteString(u8 LOC_u8String[])
{


	for (u8 i=0; LOC_u8String[i] != '\0'; i++)
    1fce:	89 81       	ldd	r24, Y+1	; 0x01
    1fd0:	8f 5f       	subi	r24, 0xFF	; 255
    1fd2:	89 83       	std	Y+1, r24	; 0x01
    1fd4:	89 81       	ldd	r24, Y+1	; 0x01
    1fd6:	28 2f       	mov	r18, r24
    1fd8:	30 e0       	ldi	r19, 0x00	; 0
    1fda:	8a 81       	ldd	r24, Y+2	; 0x02
    1fdc:	9b 81       	ldd	r25, Y+3	; 0x03
    1fde:	fc 01       	movw	r30, r24
    1fe0:	e2 0f       	add	r30, r18
    1fe2:	f3 1f       	adc	r31, r19
    1fe4:	80 81       	ld	r24, Z
    1fe6:	88 23       	and	r24, r24
    1fe8:	e9 f6       	brne	.-70     	; 0x1fa4 <LCD_VidWriteString+0x14>
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_RS_PIN, OUT_HIGH);  //RS = 1
		DIO_VidSetPinValue(LCD_CTRLPort, LCD_RW_PIN, OUT_LOW);  //RW = 0
		LCD_VidWriteData (LOC_u8String[i]);

	}
}
    1fea:	0f 90       	pop	r0
    1fec:	0f 90       	pop	r0
    1fee:	0f 90       	pop	r0
    1ff0:	cf 91       	pop	r28
    1ff2:	df 91       	pop	r29
    1ff4:	08 95       	ret

00001ff6 <LED_VidButterFly>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>

void LED_VidButterFly(u8 LOC_u8Cycles, u8 LOC_u8Speed)
{
    1ff6:	0f 93       	push	r16
    1ff8:	1f 93       	push	r17
    1ffa:	df 93       	push	r29
    1ffc:	cf 93       	push	r28
    1ffe:	cd b7       	in	r28, 0x3d	; 61
    2000:	de b7       	in	r29, 0x3e	; 62
    2002:	c5 56       	subi	r28, 0x65	; 101
    2004:	d0 40       	sbci	r29, 0x00	; 0
    2006:	0f b6       	in	r0, 0x3f	; 63
    2008:	f8 94       	cli
    200a:	de bf       	out	0x3e, r29	; 62
    200c:	0f be       	out	0x3f, r0	; 63
    200e:	cd bf       	out	0x3d, r28	; 61
    2010:	fe 01       	movw	r30, r28
    2012:	ec 59       	subi	r30, 0x9C	; 156
    2014:	ff 4f       	sbci	r31, 0xFF	; 255
    2016:	80 83       	st	Z, r24
    2018:	fe 01       	movw	r30, r28
    201a:	eb 59       	subi	r30, 0x9B	; 155
    201c:	ff 4f       	sbci	r31, 0xFF	; 255
    201e:	60 83       	st	Z, r22
	for (u8 i=0; i<LOC_u8Cycles; i++)
    2020:	fe 01       	movw	r30, r28
    2022:	ed 59       	subi	r30, 0x9D	; 157
    2024:	ff 4f       	sbci	r31, 0xFF	; 255
    2026:	10 82       	st	Z, r1
    2028:	1e c4       	rjmp	.+2108   	; 0x2866 <LED_VidButterFly+0x870>

	{
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	68 e1       	ldi	r22, 0x18	; 24
    202e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    2032:	fe 01       	movw	r30, r28
    2034:	eb 59       	subi	r30, 0x9B	; 155
    2036:	ff 4f       	sbci	r31, 0xFF	; 255
    2038:	80 81       	ld	r24, Z
    203a:	88 2f       	mov	r24, r24
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	a0 e0       	ldi	r26, 0x00	; 0
    2040:	b0 e0       	ldi	r27, 0x00	; 0
    2042:	bc 01       	movw	r22, r24
    2044:	cd 01       	movw	r24, r26
    2046:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    204a:	dc 01       	movw	r26, r24
    204c:	cb 01       	movw	r24, r22
    204e:	fe 01       	movw	r30, r28
    2050:	e1 5a       	subi	r30, 0xA1	; 161
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	80 83       	st	Z, r24
    2056:	91 83       	std	Z+1, r25	; 0x01
    2058:	a2 83       	std	Z+2, r26	; 0x02
    205a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    205c:	8e 01       	movw	r16, r28
    205e:	05 5a       	subi	r16, 0xA5	; 165
    2060:	1f 4f       	sbci	r17, 0xFF	; 255
    2062:	fe 01       	movw	r30, r28
    2064:	e1 5a       	subi	r30, 0xA1	; 161
    2066:	ff 4f       	sbci	r31, 0xFF	; 255
    2068:	60 81       	ld	r22, Z
    206a:	71 81       	ldd	r23, Z+1	; 0x01
    206c:	82 81       	ldd	r24, Z+2	; 0x02
    206e:	93 81       	ldd	r25, Z+3	; 0x03
    2070:	20 e0       	ldi	r18, 0x00	; 0
    2072:	30 e0       	ldi	r19, 0x00	; 0
    2074:	4a ef       	ldi	r20, 0xFA	; 250
    2076:	54 e4       	ldi	r21, 0x44	; 68
    2078:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    207c:	dc 01       	movw	r26, r24
    207e:	cb 01       	movw	r24, r22
    2080:	f8 01       	movw	r30, r16
    2082:	80 83       	st	Z, r24
    2084:	91 83       	std	Z+1, r25	; 0x01
    2086:	a2 83       	std	Z+2, r26	; 0x02
    2088:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    208a:	fe 01       	movw	r30, r28
    208c:	e5 5a       	subi	r30, 0xA5	; 165
    208e:	ff 4f       	sbci	r31, 0xFF	; 255
    2090:	60 81       	ld	r22, Z
    2092:	71 81       	ldd	r23, Z+1	; 0x01
    2094:	82 81       	ldd	r24, Z+2	; 0x02
    2096:	93 81       	ldd	r25, Z+3	; 0x03
    2098:	20 e0       	ldi	r18, 0x00	; 0
    209a:	30 e0       	ldi	r19, 0x00	; 0
    209c:	40 e8       	ldi	r20, 0x80	; 128
    209e:	5f e3       	ldi	r21, 0x3F	; 63
    20a0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20a4:	88 23       	and	r24, r24
    20a6:	44 f4       	brge	.+16     	; 0x20b8 <LED_VidButterFly+0xc2>
		__ticks = 1;
    20a8:	fe 01       	movw	r30, r28
    20aa:	e7 5a       	subi	r30, 0xA7	; 167
    20ac:	ff 4f       	sbci	r31, 0xFF	; 255
    20ae:	81 e0       	ldi	r24, 0x01	; 1
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	91 83       	std	Z+1, r25	; 0x01
    20b4:	80 83       	st	Z, r24
    20b6:	64 c0       	rjmp	.+200    	; 0x2180 <LED_VidButterFly+0x18a>
	else if (__tmp > 65535)
    20b8:	fe 01       	movw	r30, r28
    20ba:	e5 5a       	subi	r30, 0xA5	; 165
    20bc:	ff 4f       	sbci	r31, 0xFF	; 255
    20be:	60 81       	ld	r22, Z
    20c0:	71 81       	ldd	r23, Z+1	; 0x01
    20c2:	82 81       	ldd	r24, Z+2	; 0x02
    20c4:	93 81       	ldd	r25, Z+3	; 0x03
    20c6:	20 e0       	ldi	r18, 0x00	; 0
    20c8:	3f ef       	ldi	r19, 0xFF	; 255
    20ca:	4f e7       	ldi	r20, 0x7F	; 127
    20cc:	57 e4       	ldi	r21, 0x47	; 71
    20ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    20d2:	18 16       	cp	r1, r24
    20d4:	0c f0       	brlt	.+2      	; 0x20d8 <LED_VidButterFly+0xe2>
    20d6:	43 c0       	rjmp	.+134    	; 0x215e <LED_VidButterFly+0x168>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    20d8:	fe 01       	movw	r30, r28
    20da:	e1 5a       	subi	r30, 0xA1	; 161
    20dc:	ff 4f       	sbci	r31, 0xFF	; 255
    20de:	60 81       	ld	r22, Z
    20e0:	71 81       	ldd	r23, Z+1	; 0x01
    20e2:	82 81       	ldd	r24, Z+2	; 0x02
    20e4:	93 81       	ldd	r25, Z+3	; 0x03
    20e6:	20 e0       	ldi	r18, 0x00	; 0
    20e8:	30 e0       	ldi	r19, 0x00	; 0
    20ea:	40 e2       	ldi	r20, 0x20	; 32
    20ec:	51 e4       	ldi	r21, 0x41	; 65
    20ee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20f2:	dc 01       	movw	r26, r24
    20f4:	cb 01       	movw	r24, r22
    20f6:	8e 01       	movw	r16, r28
    20f8:	07 5a       	subi	r16, 0xA7	; 167
    20fa:	1f 4f       	sbci	r17, 0xFF	; 255
    20fc:	bc 01       	movw	r22, r24
    20fe:	cd 01       	movw	r24, r26
    2100:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2104:	dc 01       	movw	r26, r24
    2106:	cb 01       	movw	r24, r22
    2108:	f8 01       	movw	r30, r16
    210a:	91 83       	std	Z+1, r25	; 0x01
    210c:	80 83       	st	Z, r24
    210e:	1f c0       	rjmp	.+62     	; 0x214e <LED_VidButterFly+0x158>
    2110:	fe 01       	movw	r30, r28
    2112:	e9 5a       	subi	r30, 0xA9	; 169
    2114:	ff 4f       	sbci	r31, 0xFF	; 255
    2116:	88 ec       	ldi	r24, 0xC8	; 200
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	91 83       	std	Z+1, r25	; 0x01
    211c:	80 83       	st	Z, r24
    211e:	fe 01       	movw	r30, r28
    2120:	e9 5a       	subi	r30, 0xA9	; 169
    2122:	ff 4f       	sbci	r31, 0xFF	; 255
    2124:	80 81       	ld	r24, Z
    2126:	91 81       	ldd	r25, Z+1	; 0x01
    2128:	01 97       	sbiw	r24, 0x01	; 1
    212a:	f1 f7       	brne	.-4      	; 0x2128 <LED_VidButterFly+0x132>
    212c:	fe 01       	movw	r30, r28
    212e:	e9 5a       	subi	r30, 0xA9	; 169
    2130:	ff 4f       	sbci	r31, 0xFF	; 255
    2132:	91 83       	std	Z+1, r25	; 0x01
    2134:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2136:	de 01       	movw	r26, r28
    2138:	a7 5a       	subi	r26, 0xA7	; 167
    213a:	bf 4f       	sbci	r27, 0xFF	; 255
    213c:	fe 01       	movw	r30, r28
    213e:	e7 5a       	subi	r30, 0xA7	; 167
    2140:	ff 4f       	sbci	r31, 0xFF	; 255
    2142:	80 81       	ld	r24, Z
    2144:	91 81       	ldd	r25, Z+1	; 0x01
    2146:	01 97       	sbiw	r24, 0x01	; 1
    2148:	11 96       	adiw	r26, 0x01	; 1
    214a:	9c 93       	st	X, r25
    214c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    214e:	fe 01       	movw	r30, r28
    2150:	e7 5a       	subi	r30, 0xA7	; 167
    2152:	ff 4f       	sbci	r31, 0xFF	; 255
    2154:	80 81       	ld	r24, Z
    2156:	91 81       	ldd	r25, Z+1	; 0x01
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	d1 f6       	brne	.-76     	; 0x2110 <LED_VidButterFly+0x11a>
    215c:	27 c0       	rjmp	.+78     	; 0x21ac <LED_VidButterFly+0x1b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    215e:	8e 01       	movw	r16, r28
    2160:	07 5a       	subi	r16, 0xA7	; 167
    2162:	1f 4f       	sbci	r17, 0xFF	; 255
    2164:	fe 01       	movw	r30, r28
    2166:	e5 5a       	subi	r30, 0xA5	; 165
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	60 81       	ld	r22, Z
    216c:	71 81       	ldd	r23, Z+1	; 0x01
    216e:	82 81       	ldd	r24, Z+2	; 0x02
    2170:	93 81       	ldd	r25, Z+3	; 0x03
    2172:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2176:	dc 01       	movw	r26, r24
    2178:	cb 01       	movw	r24, r22
    217a:	f8 01       	movw	r30, r16
    217c:	91 83       	std	Z+1, r25	; 0x01
    217e:	80 83       	st	Z, r24
    2180:	de 01       	movw	r26, r28
    2182:	ab 5a       	subi	r26, 0xAB	; 171
    2184:	bf 4f       	sbci	r27, 0xFF	; 255
    2186:	fe 01       	movw	r30, r28
    2188:	e7 5a       	subi	r30, 0xA7	; 167
    218a:	ff 4f       	sbci	r31, 0xFF	; 255
    218c:	80 81       	ld	r24, Z
    218e:	91 81       	ldd	r25, Z+1	; 0x01
    2190:	8d 93       	st	X+, r24
    2192:	9c 93       	st	X, r25
    2194:	fe 01       	movw	r30, r28
    2196:	eb 5a       	subi	r30, 0xAB	; 171
    2198:	ff 4f       	sbci	r31, 0xFF	; 255
    219a:	80 81       	ld	r24, Z
    219c:	91 81       	ldd	r25, Z+1	; 0x01
    219e:	01 97       	sbiw	r24, 0x01	; 1
    21a0:	f1 f7       	brne	.-4      	; 0x219e <LED_VidButterFly+0x1a8>
    21a2:	fe 01       	movw	r30, r28
    21a4:	eb 5a       	subi	r30, 0xAB	; 171
    21a6:	ff 4f       	sbci	r31, 0xFF	; 255
    21a8:	91 83       	std	Z+1, r25	; 0x01
    21aa:	80 83       	st	Z, r24
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
    21ac:	80 e0       	ldi	r24, 0x00	; 0
    21ae:	64 e2       	ldi	r22, 0x24	; 36
    21b0:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    21b4:	fe 01       	movw	r30, r28
    21b6:	eb 59       	subi	r30, 0x9B	; 155
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	80 81       	ld	r24, Z
    21bc:	88 2f       	mov	r24, r24
    21be:	90 e0       	ldi	r25, 0x00	; 0
    21c0:	a0 e0       	ldi	r26, 0x00	; 0
    21c2:	b0 e0       	ldi	r27, 0x00	; 0
    21c4:	bc 01       	movw	r22, r24
    21c6:	cd 01       	movw	r24, r26
    21c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    21cc:	dc 01       	movw	r26, r24
    21ce:	cb 01       	movw	r24, r22
    21d0:	fe 01       	movw	r30, r28
    21d2:	ef 5a       	subi	r30, 0xAF	; 175
    21d4:	ff 4f       	sbci	r31, 0xFF	; 255
    21d6:	80 83       	st	Z, r24
    21d8:	91 83       	std	Z+1, r25	; 0x01
    21da:	a2 83       	std	Z+2, r26	; 0x02
    21dc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    21de:	8e 01       	movw	r16, r28
    21e0:	03 5b       	subi	r16, 0xB3	; 179
    21e2:	1f 4f       	sbci	r17, 0xFF	; 255
    21e4:	fe 01       	movw	r30, r28
    21e6:	ef 5a       	subi	r30, 0xAF	; 175
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	60 81       	ld	r22, Z
    21ec:	71 81       	ldd	r23, Z+1	; 0x01
    21ee:	82 81       	ldd	r24, Z+2	; 0x02
    21f0:	93 81       	ldd	r25, Z+3	; 0x03
    21f2:	20 e0       	ldi	r18, 0x00	; 0
    21f4:	30 e0       	ldi	r19, 0x00	; 0
    21f6:	4a ef       	ldi	r20, 0xFA	; 250
    21f8:	54 e4       	ldi	r21, 0x44	; 68
    21fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21fe:	dc 01       	movw	r26, r24
    2200:	cb 01       	movw	r24, r22
    2202:	f8 01       	movw	r30, r16
    2204:	80 83       	st	Z, r24
    2206:	91 83       	std	Z+1, r25	; 0x01
    2208:	a2 83       	std	Z+2, r26	; 0x02
    220a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    220c:	fe 01       	movw	r30, r28
    220e:	e3 5b       	subi	r30, 0xB3	; 179
    2210:	ff 4f       	sbci	r31, 0xFF	; 255
    2212:	60 81       	ld	r22, Z
    2214:	71 81       	ldd	r23, Z+1	; 0x01
    2216:	82 81       	ldd	r24, Z+2	; 0x02
    2218:	93 81       	ldd	r25, Z+3	; 0x03
    221a:	20 e0       	ldi	r18, 0x00	; 0
    221c:	30 e0       	ldi	r19, 0x00	; 0
    221e:	40 e8       	ldi	r20, 0x80	; 128
    2220:	5f e3       	ldi	r21, 0x3F	; 63
    2222:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2226:	88 23       	and	r24, r24
    2228:	44 f4       	brge	.+16     	; 0x223a <LED_VidButterFly+0x244>
		__ticks = 1;
    222a:	fe 01       	movw	r30, r28
    222c:	e5 5b       	subi	r30, 0xB5	; 181
    222e:	ff 4f       	sbci	r31, 0xFF	; 255
    2230:	81 e0       	ldi	r24, 0x01	; 1
    2232:	90 e0       	ldi	r25, 0x00	; 0
    2234:	91 83       	std	Z+1, r25	; 0x01
    2236:	80 83       	st	Z, r24
    2238:	64 c0       	rjmp	.+200    	; 0x2302 <LED_VidButterFly+0x30c>
	else if (__tmp > 65535)
    223a:	fe 01       	movw	r30, r28
    223c:	e3 5b       	subi	r30, 0xB3	; 179
    223e:	ff 4f       	sbci	r31, 0xFF	; 255
    2240:	60 81       	ld	r22, Z
    2242:	71 81       	ldd	r23, Z+1	; 0x01
    2244:	82 81       	ldd	r24, Z+2	; 0x02
    2246:	93 81       	ldd	r25, Z+3	; 0x03
    2248:	20 e0       	ldi	r18, 0x00	; 0
    224a:	3f ef       	ldi	r19, 0xFF	; 255
    224c:	4f e7       	ldi	r20, 0x7F	; 127
    224e:	57 e4       	ldi	r21, 0x47	; 71
    2250:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2254:	18 16       	cp	r1, r24
    2256:	0c f0       	brlt	.+2      	; 0x225a <LED_VidButterFly+0x264>
    2258:	43 c0       	rjmp	.+134    	; 0x22e0 <LED_VidButterFly+0x2ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    225a:	fe 01       	movw	r30, r28
    225c:	ef 5a       	subi	r30, 0xAF	; 175
    225e:	ff 4f       	sbci	r31, 0xFF	; 255
    2260:	60 81       	ld	r22, Z
    2262:	71 81       	ldd	r23, Z+1	; 0x01
    2264:	82 81       	ldd	r24, Z+2	; 0x02
    2266:	93 81       	ldd	r25, Z+3	; 0x03
    2268:	20 e0       	ldi	r18, 0x00	; 0
    226a:	30 e0       	ldi	r19, 0x00	; 0
    226c:	40 e2       	ldi	r20, 0x20	; 32
    226e:	51 e4       	ldi	r21, 0x41	; 65
    2270:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2274:	dc 01       	movw	r26, r24
    2276:	cb 01       	movw	r24, r22
    2278:	8e 01       	movw	r16, r28
    227a:	05 5b       	subi	r16, 0xB5	; 181
    227c:	1f 4f       	sbci	r17, 0xFF	; 255
    227e:	bc 01       	movw	r22, r24
    2280:	cd 01       	movw	r24, r26
    2282:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2286:	dc 01       	movw	r26, r24
    2288:	cb 01       	movw	r24, r22
    228a:	f8 01       	movw	r30, r16
    228c:	91 83       	std	Z+1, r25	; 0x01
    228e:	80 83       	st	Z, r24
    2290:	1f c0       	rjmp	.+62     	; 0x22d0 <LED_VidButterFly+0x2da>
    2292:	fe 01       	movw	r30, r28
    2294:	e7 5b       	subi	r30, 0xB7	; 183
    2296:	ff 4f       	sbci	r31, 0xFF	; 255
    2298:	88 ec       	ldi	r24, 0xC8	; 200
    229a:	90 e0       	ldi	r25, 0x00	; 0
    229c:	91 83       	std	Z+1, r25	; 0x01
    229e:	80 83       	st	Z, r24
    22a0:	fe 01       	movw	r30, r28
    22a2:	e7 5b       	subi	r30, 0xB7	; 183
    22a4:	ff 4f       	sbci	r31, 0xFF	; 255
    22a6:	80 81       	ld	r24, Z
    22a8:	91 81       	ldd	r25, Z+1	; 0x01
    22aa:	01 97       	sbiw	r24, 0x01	; 1
    22ac:	f1 f7       	brne	.-4      	; 0x22aa <LED_VidButterFly+0x2b4>
    22ae:	fe 01       	movw	r30, r28
    22b0:	e7 5b       	subi	r30, 0xB7	; 183
    22b2:	ff 4f       	sbci	r31, 0xFF	; 255
    22b4:	91 83       	std	Z+1, r25	; 0x01
    22b6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22b8:	de 01       	movw	r26, r28
    22ba:	a5 5b       	subi	r26, 0xB5	; 181
    22bc:	bf 4f       	sbci	r27, 0xFF	; 255
    22be:	fe 01       	movw	r30, r28
    22c0:	e5 5b       	subi	r30, 0xB5	; 181
    22c2:	ff 4f       	sbci	r31, 0xFF	; 255
    22c4:	80 81       	ld	r24, Z
    22c6:	91 81       	ldd	r25, Z+1	; 0x01
    22c8:	01 97       	sbiw	r24, 0x01	; 1
    22ca:	11 96       	adiw	r26, 0x01	; 1
    22cc:	9c 93       	st	X, r25
    22ce:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22d0:	fe 01       	movw	r30, r28
    22d2:	e5 5b       	subi	r30, 0xB5	; 181
    22d4:	ff 4f       	sbci	r31, 0xFF	; 255
    22d6:	80 81       	ld	r24, Z
    22d8:	91 81       	ldd	r25, Z+1	; 0x01
    22da:	00 97       	sbiw	r24, 0x00	; 0
    22dc:	d1 f6       	brne	.-76     	; 0x2292 <LED_VidButterFly+0x29c>
    22de:	27 c0       	rjmp	.+78     	; 0x232e <LED_VidButterFly+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22e0:	8e 01       	movw	r16, r28
    22e2:	05 5b       	subi	r16, 0xB5	; 181
    22e4:	1f 4f       	sbci	r17, 0xFF	; 255
    22e6:	fe 01       	movw	r30, r28
    22e8:	e3 5b       	subi	r30, 0xB3	; 179
    22ea:	ff 4f       	sbci	r31, 0xFF	; 255
    22ec:	60 81       	ld	r22, Z
    22ee:	71 81       	ldd	r23, Z+1	; 0x01
    22f0:	82 81       	ldd	r24, Z+2	; 0x02
    22f2:	93 81       	ldd	r25, Z+3	; 0x03
    22f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22f8:	dc 01       	movw	r26, r24
    22fa:	cb 01       	movw	r24, r22
    22fc:	f8 01       	movw	r30, r16
    22fe:	91 83       	std	Z+1, r25	; 0x01
    2300:	80 83       	st	Z, r24
    2302:	de 01       	movw	r26, r28
    2304:	a9 5b       	subi	r26, 0xB9	; 185
    2306:	bf 4f       	sbci	r27, 0xFF	; 255
    2308:	fe 01       	movw	r30, r28
    230a:	e5 5b       	subi	r30, 0xB5	; 181
    230c:	ff 4f       	sbci	r31, 0xFF	; 255
    230e:	80 81       	ld	r24, Z
    2310:	91 81       	ldd	r25, Z+1	; 0x01
    2312:	8d 93       	st	X+, r24
    2314:	9c 93       	st	X, r25
    2316:	fe 01       	movw	r30, r28
    2318:	e9 5b       	subi	r30, 0xB9	; 185
    231a:	ff 4f       	sbci	r31, 0xFF	; 255
    231c:	80 81       	ld	r24, Z
    231e:	91 81       	ldd	r25, Z+1	; 0x01
    2320:	01 97       	sbiw	r24, 0x01	; 1
    2322:	f1 f7       	brne	.-4      	; 0x2320 <LED_VidButterFly+0x32a>
    2324:	fe 01       	movw	r30, r28
    2326:	e9 5b       	subi	r30, 0xB9	; 185
    2328:	ff 4f       	sbci	r31, 0xFF	; 255
    232a:	91 83       	std	Z+1, r25	; 0x01
    232c:	80 83       	st	Z, r24
		DIO_VidSetPortValue(LED_Port, 0b01000010 );
    232e:	80 e0       	ldi	r24, 0x00	; 0
    2330:	62 e4       	ldi	r22, 0x42	; 66
    2332:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    2336:	fe 01       	movw	r30, r28
    2338:	eb 59       	subi	r30, 0x9B	; 155
    233a:	ff 4f       	sbci	r31, 0xFF	; 255
    233c:	80 81       	ld	r24, Z
    233e:	88 2f       	mov	r24, r24
    2340:	90 e0       	ldi	r25, 0x00	; 0
    2342:	a0 e0       	ldi	r26, 0x00	; 0
    2344:	b0 e0       	ldi	r27, 0x00	; 0
    2346:	bc 01       	movw	r22, r24
    2348:	cd 01       	movw	r24, r26
    234a:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    234e:	dc 01       	movw	r26, r24
    2350:	cb 01       	movw	r24, r22
    2352:	fe 01       	movw	r30, r28
    2354:	ed 5b       	subi	r30, 0xBD	; 189
    2356:	ff 4f       	sbci	r31, 0xFF	; 255
    2358:	80 83       	st	Z, r24
    235a:	91 83       	std	Z+1, r25	; 0x01
    235c:	a2 83       	std	Z+2, r26	; 0x02
    235e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2360:	8e 01       	movw	r16, r28
    2362:	01 5c       	subi	r16, 0xC1	; 193
    2364:	1f 4f       	sbci	r17, 0xFF	; 255
    2366:	fe 01       	movw	r30, r28
    2368:	ed 5b       	subi	r30, 0xBD	; 189
    236a:	ff 4f       	sbci	r31, 0xFF	; 255
    236c:	60 81       	ld	r22, Z
    236e:	71 81       	ldd	r23, Z+1	; 0x01
    2370:	82 81       	ldd	r24, Z+2	; 0x02
    2372:	93 81       	ldd	r25, Z+3	; 0x03
    2374:	20 e0       	ldi	r18, 0x00	; 0
    2376:	30 e0       	ldi	r19, 0x00	; 0
    2378:	4a ef       	ldi	r20, 0xFA	; 250
    237a:	54 e4       	ldi	r21, 0x44	; 68
    237c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2380:	dc 01       	movw	r26, r24
    2382:	cb 01       	movw	r24, r22
    2384:	f8 01       	movw	r30, r16
    2386:	80 83       	st	Z, r24
    2388:	91 83       	std	Z+1, r25	; 0x01
    238a:	a2 83       	std	Z+2, r26	; 0x02
    238c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    238e:	fe 01       	movw	r30, r28
    2390:	ff 96       	adiw	r30, 0x3f	; 63
    2392:	60 81       	ld	r22, Z
    2394:	71 81       	ldd	r23, Z+1	; 0x01
    2396:	82 81       	ldd	r24, Z+2	; 0x02
    2398:	93 81       	ldd	r25, Z+3	; 0x03
    239a:	20 e0       	ldi	r18, 0x00	; 0
    239c:	30 e0       	ldi	r19, 0x00	; 0
    239e:	40 e8       	ldi	r20, 0x80	; 128
    23a0:	5f e3       	ldi	r21, 0x3F	; 63
    23a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23a6:	88 23       	and	r24, r24
    23a8:	2c f4       	brge	.+10     	; 0x23b4 <LED_VidButterFly+0x3be>
		__ticks = 1;
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	9e af       	std	Y+62, r25	; 0x3e
    23b0:	8d af       	std	Y+61, r24	; 0x3d
    23b2:	46 c0       	rjmp	.+140    	; 0x2440 <LED_VidButterFly+0x44a>
	else if (__tmp > 65535)
    23b4:	fe 01       	movw	r30, r28
    23b6:	ff 96       	adiw	r30, 0x3f	; 63
    23b8:	60 81       	ld	r22, Z
    23ba:	71 81       	ldd	r23, Z+1	; 0x01
    23bc:	82 81       	ldd	r24, Z+2	; 0x02
    23be:	93 81       	ldd	r25, Z+3	; 0x03
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	3f ef       	ldi	r19, 0xFF	; 255
    23c4:	4f e7       	ldi	r20, 0x7F	; 127
    23c6:	57 e4       	ldi	r21, 0x47	; 71
    23c8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23cc:	18 16       	cp	r1, r24
    23ce:	64 f5       	brge	.+88     	; 0x2428 <LED_VidButterFly+0x432>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23d0:	fe 01       	movw	r30, r28
    23d2:	ed 5b       	subi	r30, 0xBD	; 189
    23d4:	ff 4f       	sbci	r31, 0xFF	; 255
    23d6:	60 81       	ld	r22, Z
    23d8:	71 81       	ldd	r23, Z+1	; 0x01
    23da:	82 81       	ldd	r24, Z+2	; 0x02
    23dc:	93 81       	ldd	r25, Z+3	; 0x03
    23de:	20 e0       	ldi	r18, 0x00	; 0
    23e0:	30 e0       	ldi	r19, 0x00	; 0
    23e2:	40 e2       	ldi	r20, 0x20	; 32
    23e4:	51 e4       	ldi	r21, 0x41	; 65
    23e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23ea:	dc 01       	movw	r26, r24
    23ec:	cb 01       	movw	r24, r22
    23ee:	bc 01       	movw	r22, r24
    23f0:	cd 01       	movw	r24, r26
    23f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23f6:	dc 01       	movw	r26, r24
    23f8:	cb 01       	movw	r24, r22
    23fa:	9e af       	std	Y+62, r25	; 0x3e
    23fc:	8d af       	std	Y+61, r24	; 0x3d
    23fe:	0f c0       	rjmp	.+30     	; 0x241e <LED_VidButterFly+0x428>
    2400:	88 ec       	ldi	r24, 0xC8	; 200
    2402:	90 e0       	ldi	r25, 0x00	; 0
    2404:	9c af       	std	Y+60, r25	; 0x3c
    2406:	8b af       	std	Y+59, r24	; 0x3b
    2408:	8b ad       	ldd	r24, Y+59	; 0x3b
    240a:	9c ad       	ldd	r25, Y+60	; 0x3c
    240c:	01 97       	sbiw	r24, 0x01	; 1
    240e:	f1 f7       	brne	.-4      	; 0x240c <LED_VidButterFly+0x416>
    2410:	9c af       	std	Y+60, r25	; 0x3c
    2412:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2414:	8d ad       	ldd	r24, Y+61	; 0x3d
    2416:	9e ad       	ldd	r25, Y+62	; 0x3e
    2418:	01 97       	sbiw	r24, 0x01	; 1
    241a:	9e af       	std	Y+62, r25	; 0x3e
    241c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    241e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2420:	9e ad       	ldd	r25, Y+62	; 0x3e
    2422:	00 97       	sbiw	r24, 0x00	; 0
    2424:	69 f7       	brne	.-38     	; 0x2400 <LED_VidButterFly+0x40a>
    2426:	16 c0       	rjmp	.+44     	; 0x2454 <LED_VidButterFly+0x45e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2428:	fe 01       	movw	r30, r28
    242a:	ff 96       	adiw	r30, 0x3f	; 63
    242c:	60 81       	ld	r22, Z
    242e:	71 81       	ldd	r23, Z+1	; 0x01
    2430:	82 81       	ldd	r24, Z+2	; 0x02
    2432:	93 81       	ldd	r25, Z+3	; 0x03
    2434:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2438:	dc 01       	movw	r26, r24
    243a:	cb 01       	movw	r24, r22
    243c:	9e af       	std	Y+62, r25	; 0x3e
    243e:	8d af       	std	Y+61, r24	; 0x3d
    2440:	8d ad       	ldd	r24, Y+61	; 0x3d
    2442:	9e ad       	ldd	r25, Y+62	; 0x3e
    2444:	9a af       	std	Y+58, r25	; 0x3a
    2446:	89 af       	std	Y+57, r24	; 0x39
    2448:	89 ad       	ldd	r24, Y+57	; 0x39
    244a:	9a ad       	ldd	r25, Y+58	; 0x3a
    244c:	01 97       	sbiw	r24, 0x01	; 1
    244e:	f1 f7       	brne	.-4      	; 0x244c <LED_VidButterFly+0x456>
    2450:	9a af       	std	Y+58, r25	; 0x3a
    2452:	89 af       	std	Y+57, r24	; 0x39
		DIO_VidSetPortValue(LED_Port, 0b10000001 );
    2454:	80 e0       	ldi	r24, 0x00	; 0
    2456:	61 e8       	ldi	r22, 0x81	; 129
    2458:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    245c:	fe 01       	movw	r30, r28
    245e:	eb 59       	subi	r30, 0x9B	; 155
    2460:	ff 4f       	sbci	r31, 0xFF	; 255
    2462:	80 81       	ld	r24, Z
    2464:	88 2f       	mov	r24, r24
    2466:	90 e0       	ldi	r25, 0x00	; 0
    2468:	a0 e0       	ldi	r26, 0x00	; 0
    246a:	b0 e0       	ldi	r27, 0x00	; 0
    246c:	bc 01       	movw	r22, r24
    246e:	cd 01       	movw	r24, r26
    2470:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2474:	dc 01       	movw	r26, r24
    2476:	cb 01       	movw	r24, r22
    2478:	8d ab       	std	Y+53, r24	; 0x35
    247a:	9e ab       	std	Y+54, r25	; 0x36
    247c:	af ab       	std	Y+55, r26	; 0x37
    247e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2480:	6d a9       	ldd	r22, Y+53	; 0x35
    2482:	7e a9       	ldd	r23, Y+54	; 0x36
    2484:	8f a9       	ldd	r24, Y+55	; 0x37
    2486:	98 ad       	ldd	r25, Y+56	; 0x38
    2488:	20 e0       	ldi	r18, 0x00	; 0
    248a:	30 e0       	ldi	r19, 0x00	; 0
    248c:	4a ef       	ldi	r20, 0xFA	; 250
    248e:	54 e4       	ldi	r21, 0x44	; 68
    2490:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2494:	dc 01       	movw	r26, r24
    2496:	cb 01       	movw	r24, r22
    2498:	89 ab       	std	Y+49, r24	; 0x31
    249a:	9a ab       	std	Y+50, r25	; 0x32
    249c:	ab ab       	std	Y+51, r26	; 0x33
    249e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    24a0:	69 a9       	ldd	r22, Y+49	; 0x31
    24a2:	7a a9       	ldd	r23, Y+50	; 0x32
    24a4:	8b a9       	ldd	r24, Y+51	; 0x33
    24a6:	9c a9       	ldd	r25, Y+52	; 0x34
    24a8:	20 e0       	ldi	r18, 0x00	; 0
    24aa:	30 e0       	ldi	r19, 0x00	; 0
    24ac:	40 e8       	ldi	r20, 0x80	; 128
    24ae:	5f e3       	ldi	r21, 0x3F	; 63
    24b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    24b4:	88 23       	and	r24, r24
    24b6:	2c f4       	brge	.+10     	; 0x24c2 <LED_VidButterFly+0x4cc>
		__ticks = 1;
    24b8:	81 e0       	ldi	r24, 0x01	; 1
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	98 ab       	std	Y+48, r25	; 0x30
    24be:	8f a7       	std	Y+47, r24	; 0x2f
    24c0:	3f c0       	rjmp	.+126    	; 0x2540 <LED_VidButterFly+0x54a>
	else if (__tmp > 65535)
    24c2:	69 a9       	ldd	r22, Y+49	; 0x31
    24c4:	7a a9       	ldd	r23, Y+50	; 0x32
    24c6:	8b a9       	ldd	r24, Y+51	; 0x33
    24c8:	9c a9       	ldd	r25, Y+52	; 0x34
    24ca:	20 e0       	ldi	r18, 0x00	; 0
    24cc:	3f ef       	ldi	r19, 0xFF	; 255
    24ce:	4f e7       	ldi	r20, 0x7F	; 127
    24d0:	57 e4       	ldi	r21, 0x47	; 71
    24d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24d6:	18 16       	cp	r1, r24
    24d8:	4c f5       	brge	.+82     	; 0x252c <LED_VidButterFly+0x536>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24da:	6d a9       	ldd	r22, Y+53	; 0x35
    24dc:	7e a9       	ldd	r23, Y+54	; 0x36
    24de:	8f a9       	ldd	r24, Y+55	; 0x37
    24e0:	98 ad       	ldd	r25, Y+56	; 0x38
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e2       	ldi	r20, 0x20	; 32
    24e8:	51 e4       	ldi	r21, 0x41	; 65
    24ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24ee:	dc 01       	movw	r26, r24
    24f0:	cb 01       	movw	r24, r22
    24f2:	bc 01       	movw	r22, r24
    24f4:	cd 01       	movw	r24, r26
    24f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24fa:	dc 01       	movw	r26, r24
    24fc:	cb 01       	movw	r24, r22
    24fe:	98 ab       	std	Y+48, r25	; 0x30
    2500:	8f a7       	std	Y+47, r24	; 0x2f
    2502:	0f c0       	rjmp	.+30     	; 0x2522 <LED_VidButterFly+0x52c>
    2504:	88 ec       	ldi	r24, 0xC8	; 200
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	9e a7       	std	Y+46, r25	; 0x2e
    250a:	8d a7       	std	Y+45, r24	; 0x2d
    250c:	8d a5       	ldd	r24, Y+45	; 0x2d
    250e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2510:	01 97       	sbiw	r24, 0x01	; 1
    2512:	f1 f7       	brne	.-4      	; 0x2510 <LED_VidButterFly+0x51a>
    2514:	9e a7       	std	Y+46, r25	; 0x2e
    2516:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2518:	8f a5       	ldd	r24, Y+47	; 0x2f
    251a:	98 a9       	ldd	r25, Y+48	; 0x30
    251c:	01 97       	sbiw	r24, 0x01	; 1
    251e:	98 ab       	std	Y+48, r25	; 0x30
    2520:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2522:	8f a5       	ldd	r24, Y+47	; 0x2f
    2524:	98 a9       	ldd	r25, Y+48	; 0x30
    2526:	00 97       	sbiw	r24, 0x00	; 0
    2528:	69 f7       	brne	.-38     	; 0x2504 <LED_VidButterFly+0x50e>
    252a:	14 c0       	rjmp	.+40     	; 0x2554 <LED_VidButterFly+0x55e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    252c:	69 a9       	ldd	r22, Y+49	; 0x31
    252e:	7a a9       	ldd	r23, Y+50	; 0x32
    2530:	8b a9       	ldd	r24, Y+51	; 0x33
    2532:	9c a9       	ldd	r25, Y+52	; 0x34
    2534:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2538:	dc 01       	movw	r26, r24
    253a:	cb 01       	movw	r24, r22
    253c:	98 ab       	std	Y+48, r25	; 0x30
    253e:	8f a7       	std	Y+47, r24	; 0x2f
    2540:	8f a5       	ldd	r24, Y+47	; 0x2f
    2542:	98 a9       	ldd	r25, Y+48	; 0x30
    2544:	9c a7       	std	Y+44, r25	; 0x2c
    2546:	8b a7       	std	Y+43, r24	; 0x2b
    2548:	8b a5       	ldd	r24, Y+43	; 0x2b
    254a:	9c a5       	ldd	r25, Y+44	; 0x2c
    254c:	01 97       	sbiw	r24, 0x01	; 1
    254e:	f1 f7       	brne	.-4      	; 0x254c <LED_VidButterFly+0x556>
    2550:	9c a7       	std	Y+44, r25	; 0x2c
    2552:	8b a7       	std	Y+43, r24	; 0x2b
		DIO_VidSetPortValue(LED_Port, 0b01000010 );
    2554:	80 e0       	ldi	r24, 0x00	; 0
    2556:	62 e4       	ldi	r22, 0x42	; 66
    2558:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    255c:	fe 01       	movw	r30, r28
    255e:	eb 59       	subi	r30, 0x9B	; 155
    2560:	ff 4f       	sbci	r31, 0xFF	; 255
    2562:	80 81       	ld	r24, Z
    2564:	88 2f       	mov	r24, r24
    2566:	90 e0       	ldi	r25, 0x00	; 0
    2568:	a0 e0       	ldi	r26, 0x00	; 0
    256a:	b0 e0       	ldi	r27, 0x00	; 0
    256c:	bc 01       	movw	r22, r24
    256e:	cd 01       	movw	r24, r26
    2570:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2574:	dc 01       	movw	r26, r24
    2576:	cb 01       	movw	r24, r22
    2578:	8f a3       	std	Y+39, r24	; 0x27
    257a:	98 a7       	std	Y+40, r25	; 0x28
    257c:	a9 a7       	std	Y+41, r26	; 0x29
    257e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2580:	6f a1       	ldd	r22, Y+39	; 0x27
    2582:	78 a5       	ldd	r23, Y+40	; 0x28
    2584:	89 a5       	ldd	r24, Y+41	; 0x29
    2586:	9a a5       	ldd	r25, Y+42	; 0x2a
    2588:	20 e0       	ldi	r18, 0x00	; 0
    258a:	30 e0       	ldi	r19, 0x00	; 0
    258c:	4a ef       	ldi	r20, 0xFA	; 250
    258e:	54 e4       	ldi	r21, 0x44	; 68
    2590:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2594:	dc 01       	movw	r26, r24
    2596:	cb 01       	movw	r24, r22
    2598:	8b a3       	std	Y+35, r24	; 0x23
    259a:	9c a3       	std	Y+36, r25	; 0x24
    259c:	ad a3       	std	Y+37, r26	; 0x25
    259e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    25a0:	6b a1       	ldd	r22, Y+35	; 0x23
    25a2:	7c a1       	ldd	r23, Y+36	; 0x24
    25a4:	8d a1       	ldd	r24, Y+37	; 0x25
    25a6:	9e a1       	ldd	r25, Y+38	; 0x26
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	30 e0       	ldi	r19, 0x00	; 0
    25ac:	40 e8       	ldi	r20, 0x80	; 128
    25ae:	5f e3       	ldi	r21, 0x3F	; 63
    25b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25b4:	88 23       	and	r24, r24
    25b6:	2c f4       	brge	.+10     	; 0x25c2 <LED_VidButterFly+0x5cc>
		__ticks = 1;
    25b8:	81 e0       	ldi	r24, 0x01	; 1
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	9a a3       	std	Y+34, r25	; 0x22
    25be:	89 a3       	std	Y+33, r24	; 0x21
    25c0:	3f c0       	rjmp	.+126    	; 0x2640 <LED_VidButterFly+0x64a>
	else if (__tmp > 65535)
    25c2:	6b a1       	ldd	r22, Y+35	; 0x23
    25c4:	7c a1       	ldd	r23, Y+36	; 0x24
    25c6:	8d a1       	ldd	r24, Y+37	; 0x25
    25c8:	9e a1       	ldd	r25, Y+38	; 0x26
    25ca:	20 e0       	ldi	r18, 0x00	; 0
    25cc:	3f ef       	ldi	r19, 0xFF	; 255
    25ce:	4f e7       	ldi	r20, 0x7F	; 127
    25d0:	57 e4       	ldi	r21, 0x47	; 71
    25d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25d6:	18 16       	cp	r1, r24
    25d8:	4c f5       	brge	.+82     	; 0x262c <LED_VidButterFly+0x636>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25da:	6f a1       	ldd	r22, Y+39	; 0x27
    25dc:	78 a5       	ldd	r23, Y+40	; 0x28
    25de:	89 a5       	ldd	r24, Y+41	; 0x29
    25e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    25e2:	20 e0       	ldi	r18, 0x00	; 0
    25e4:	30 e0       	ldi	r19, 0x00	; 0
    25e6:	40 e2       	ldi	r20, 0x20	; 32
    25e8:	51 e4       	ldi	r21, 0x41	; 65
    25ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ee:	dc 01       	movw	r26, r24
    25f0:	cb 01       	movw	r24, r22
    25f2:	bc 01       	movw	r22, r24
    25f4:	cd 01       	movw	r24, r26
    25f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25fa:	dc 01       	movw	r26, r24
    25fc:	cb 01       	movw	r24, r22
    25fe:	9a a3       	std	Y+34, r25	; 0x22
    2600:	89 a3       	std	Y+33, r24	; 0x21
    2602:	0f c0       	rjmp	.+30     	; 0x2622 <LED_VidButterFly+0x62c>
    2604:	88 ec       	ldi	r24, 0xC8	; 200
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	98 a3       	std	Y+32, r25	; 0x20
    260a:	8f 8f       	std	Y+31, r24	; 0x1f
    260c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    260e:	98 a1       	ldd	r25, Y+32	; 0x20
    2610:	01 97       	sbiw	r24, 0x01	; 1
    2612:	f1 f7       	brne	.-4      	; 0x2610 <LED_VidButterFly+0x61a>
    2614:	98 a3       	std	Y+32, r25	; 0x20
    2616:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2618:	89 a1       	ldd	r24, Y+33	; 0x21
    261a:	9a a1       	ldd	r25, Y+34	; 0x22
    261c:	01 97       	sbiw	r24, 0x01	; 1
    261e:	9a a3       	std	Y+34, r25	; 0x22
    2620:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2622:	89 a1       	ldd	r24, Y+33	; 0x21
    2624:	9a a1       	ldd	r25, Y+34	; 0x22
    2626:	00 97       	sbiw	r24, 0x00	; 0
    2628:	69 f7       	brne	.-38     	; 0x2604 <LED_VidButterFly+0x60e>
    262a:	14 c0       	rjmp	.+40     	; 0x2654 <LED_VidButterFly+0x65e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    262c:	6b a1       	ldd	r22, Y+35	; 0x23
    262e:	7c a1       	ldd	r23, Y+36	; 0x24
    2630:	8d a1       	ldd	r24, Y+37	; 0x25
    2632:	9e a1       	ldd	r25, Y+38	; 0x26
    2634:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2638:	dc 01       	movw	r26, r24
    263a:	cb 01       	movw	r24, r22
    263c:	9a a3       	std	Y+34, r25	; 0x22
    263e:	89 a3       	std	Y+33, r24	; 0x21
    2640:	89 a1       	ldd	r24, Y+33	; 0x21
    2642:	9a a1       	ldd	r25, Y+34	; 0x22
    2644:	9e 8f       	std	Y+30, r25	; 0x1e
    2646:	8d 8f       	std	Y+29, r24	; 0x1d
    2648:	8d 8d       	ldd	r24, Y+29	; 0x1d
    264a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    264c:	01 97       	sbiw	r24, 0x01	; 1
    264e:	f1 f7       	brne	.-4      	; 0x264c <LED_VidButterFly+0x656>
    2650:	9e 8f       	std	Y+30, r25	; 0x1e
    2652:	8d 8f       	std	Y+29, r24	; 0x1d
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
    2654:	80 e0       	ldi	r24, 0x00	; 0
    2656:	64 e2       	ldi	r22, 0x24	; 36
    2658:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    265c:	fe 01       	movw	r30, r28
    265e:	eb 59       	subi	r30, 0x9B	; 155
    2660:	ff 4f       	sbci	r31, 0xFF	; 255
    2662:	80 81       	ld	r24, Z
    2664:	88 2f       	mov	r24, r24
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	a0 e0       	ldi	r26, 0x00	; 0
    266a:	b0 e0       	ldi	r27, 0x00	; 0
    266c:	bc 01       	movw	r22, r24
    266e:	cd 01       	movw	r24, r26
    2670:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2674:	dc 01       	movw	r26, r24
    2676:	cb 01       	movw	r24, r22
    2678:	89 8f       	std	Y+25, r24	; 0x19
    267a:	9a 8f       	std	Y+26, r25	; 0x1a
    267c:	ab 8f       	std	Y+27, r26	; 0x1b
    267e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2680:	69 8d       	ldd	r22, Y+25	; 0x19
    2682:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2684:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2686:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	4a ef       	ldi	r20, 0xFA	; 250
    268e:	54 e4       	ldi	r21, 0x44	; 68
    2690:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2694:	dc 01       	movw	r26, r24
    2696:	cb 01       	movw	r24, r22
    2698:	8d 8b       	std	Y+21, r24	; 0x15
    269a:	9e 8b       	std	Y+22, r25	; 0x16
    269c:	af 8b       	std	Y+23, r26	; 0x17
    269e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    26a0:	6d 89       	ldd	r22, Y+21	; 0x15
    26a2:	7e 89       	ldd	r23, Y+22	; 0x16
    26a4:	8f 89       	ldd	r24, Y+23	; 0x17
    26a6:	98 8d       	ldd	r25, Y+24	; 0x18
    26a8:	20 e0       	ldi	r18, 0x00	; 0
    26aa:	30 e0       	ldi	r19, 0x00	; 0
    26ac:	40 e8       	ldi	r20, 0x80	; 128
    26ae:	5f e3       	ldi	r21, 0x3F	; 63
    26b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26b4:	88 23       	and	r24, r24
    26b6:	2c f4       	brge	.+10     	; 0x26c2 <LED_VidButterFly+0x6cc>
		__ticks = 1;
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	90 e0       	ldi	r25, 0x00	; 0
    26bc:	9c 8b       	std	Y+20, r25	; 0x14
    26be:	8b 8b       	std	Y+19, r24	; 0x13
    26c0:	3f c0       	rjmp	.+126    	; 0x2740 <LED_VidButterFly+0x74a>
	else if (__tmp > 65535)
    26c2:	6d 89       	ldd	r22, Y+21	; 0x15
    26c4:	7e 89       	ldd	r23, Y+22	; 0x16
    26c6:	8f 89       	ldd	r24, Y+23	; 0x17
    26c8:	98 8d       	ldd	r25, Y+24	; 0x18
    26ca:	20 e0       	ldi	r18, 0x00	; 0
    26cc:	3f ef       	ldi	r19, 0xFF	; 255
    26ce:	4f e7       	ldi	r20, 0x7F	; 127
    26d0:	57 e4       	ldi	r21, 0x47	; 71
    26d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26d6:	18 16       	cp	r1, r24
    26d8:	4c f5       	brge	.+82     	; 0x272c <LED_VidButterFly+0x736>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26da:	69 8d       	ldd	r22, Y+25	; 0x19
    26dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    26de:	8b 8d       	ldd	r24, Y+27	; 0x1b
    26e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    26e2:	20 e0       	ldi	r18, 0x00	; 0
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e2       	ldi	r20, 0x20	; 32
    26e8:	51 e4       	ldi	r21, 0x41	; 65
    26ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26ee:	dc 01       	movw	r26, r24
    26f0:	cb 01       	movw	r24, r22
    26f2:	bc 01       	movw	r22, r24
    26f4:	cd 01       	movw	r24, r26
    26f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26fa:	dc 01       	movw	r26, r24
    26fc:	cb 01       	movw	r24, r22
    26fe:	9c 8b       	std	Y+20, r25	; 0x14
    2700:	8b 8b       	std	Y+19, r24	; 0x13
    2702:	0f c0       	rjmp	.+30     	; 0x2722 <LED_VidButterFly+0x72c>
    2704:	88 ec       	ldi	r24, 0xC8	; 200
    2706:	90 e0       	ldi	r25, 0x00	; 0
    2708:	9a 8b       	std	Y+18, r25	; 0x12
    270a:	89 8b       	std	Y+17, r24	; 0x11
    270c:	89 89       	ldd	r24, Y+17	; 0x11
    270e:	9a 89       	ldd	r25, Y+18	; 0x12
    2710:	01 97       	sbiw	r24, 0x01	; 1
    2712:	f1 f7       	brne	.-4      	; 0x2710 <LED_VidButterFly+0x71a>
    2714:	9a 8b       	std	Y+18, r25	; 0x12
    2716:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2718:	8b 89       	ldd	r24, Y+19	; 0x13
    271a:	9c 89       	ldd	r25, Y+20	; 0x14
    271c:	01 97       	sbiw	r24, 0x01	; 1
    271e:	9c 8b       	std	Y+20, r25	; 0x14
    2720:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2722:	8b 89       	ldd	r24, Y+19	; 0x13
    2724:	9c 89       	ldd	r25, Y+20	; 0x14
    2726:	00 97       	sbiw	r24, 0x00	; 0
    2728:	69 f7       	brne	.-38     	; 0x2704 <LED_VidButterFly+0x70e>
    272a:	14 c0       	rjmp	.+40     	; 0x2754 <LED_VidButterFly+0x75e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    272c:	6d 89       	ldd	r22, Y+21	; 0x15
    272e:	7e 89       	ldd	r23, Y+22	; 0x16
    2730:	8f 89       	ldd	r24, Y+23	; 0x17
    2732:	98 8d       	ldd	r25, Y+24	; 0x18
    2734:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2738:	dc 01       	movw	r26, r24
    273a:	cb 01       	movw	r24, r22
    273c:	9c 8b       	std	Y+20, r25	; 0x14
    273e:	8b 8b       	std	Y+19, r24	; 0x13
    2740:	8b 89       	ldd	r24, Y+19	; 0x13
    2742:	9c 89       	ldd	r25, Y+20	; 0x14
    2744:	98 8b       	std	Y+16, r25	; 0x10
    2746:	8f 87       	std	Y+15, r24	; 0x0f
    2748:	8f 85       	ldd	r24, Y+15	; 0x0f
    274a:	98 89       	ldd	r25, Y+16	; 0x10
    274c:	01 97       	sbiw	r24, 0x01	; 1
    274e:	f1 f7       	brne	.-4      	; 0x274c <LED_VidButterFly+0x756>
    2750:	98 8b       	std	Y+16, r25	; 0x10
    2752:	8f 87       	std	Y+15, r24	; 0x0f
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
    2754:	80 e0       	ldi	r24, 0x00	; 0
    2756:	68 e1       	ldi	r22, 0x18	; 24
    2758:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
		_delay_ms(LOC_u8Speed);
    275c:	fe 01       	movw	r30, r28
    275e:	eb 59       	subi	r30, 0x9B	; 155
    2760:	ff 4f       	sbci	r31, 0xFF	; 255
    2762:	80 81       	ld	r24, Z
    2764:	88 2f       	mov	r24, r24
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	a0 e0       	ldi	r26, 0x00	; 0
    276a:	b0 e0       	ldi	r27, 0x00	; 0
    276c:	bc 01       	movw	r22, r24
    276e:	cd 01       	movw	r24, r26
    2770:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2774:	dc 01       	movw	r26, r24
    2776:	cb 01       	movw	r24, r22
    2778:	8b 87       	std	Y+11, r24	; 0x0b
    277a:	9c 87       	std	Y+12, r25	; 0x0c
    277c:	ad 87       	std	Y+13, r26	; 0x0d
    277e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2780:	6b 85       	ldd	r22, Y+11	; 0x0b
    2782:	7c 85       	ldd	r23, Y+12	; 0x0c
    2784:	8d 85       	ldd	r24, Y+13	; 0x0d
    2786:	9e 85       	ldd	r25, Y+14	; 0x0e
    2788:	20 e0       	ldi	r18, 0x00	; 0
    278a:	30 e0       	ldi	r19, 0x00	; 0
    278c:	4a ef       	ldi	r20, 0xFA	; 250
    278e:	54 e4       	ldi	r21, 0x44	; 68
    2790:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2794:	dc 01       	movw	r26, r24
    2796:	cb 01       	movw	r24, r22
    2798:	8f 83       	std	Y+7, r24	; 0x07
    279a:	98 87       	std	Y+8, r25	; 0x08
    279c:	a9 87       	std	Y+9, r26	; 0x09
    279e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    27a0:	6f 81       	ldd	r22, Y+7	; 0x07
    27a2:	78 85       	ldd	r23, Y+8	; 0x08
    27a4:	89 85       	ldd	r24, Y+9	; 0x09
    27a6:	9a 85       	ldd	r25, Y+10	; 0x0a
    27a8:	20 e0       	ldi	r18, 0x00	; 0
    27aa:	30 e0       	ldi	r19, 0x00	; 0
    27ac:	40 e8       	ldi	r20, 0x80	; 128
    27ae:	5f e3       	ldi	r21, 0x3F	; 63
    27b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    27b4:	88 23       	and	r24, r24
    27b6:	2c f4       	brge	.+10     	; 0x27c2 <LED_VidButterFly+0x7cc>
		__ticks = 1;
    27b8:	81 e0       	ldi	r24, 0x01	; 1
    27ba:	90 e0       	ldi	r25, 0x00	; 0
    27bc:	9e 83       	std	Y+6, r25	; 0x06
    27be:	8d 83       	std	Y+5, r24	; 0x05
    27c0:	3f c0       	rjmp	.+126    	; 0x2840 <LED_VidButterFly+0x84a>
	else if (__tmp > 65535)
    27c2:	6f 81       	ldd	r22, Y+7	; 0x07
    27c4:	78 85       	ldd	r23, Y+8	; 0x08
    27c6:	89 85       	ldd	r24, Y+9	; 0x09
    27c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    27ca:	20 e0       	ldi	r18, 0x00	; 0
    27cc:	3f ef       	ldi	r19, 0xFF	; 255
    27ce:	4f e7       	ldi	r20, 0x7F	; 127
    27d0:	57 e4       	ldi	r21, 0x47	; 71
    27d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27d6:	18 16       	cp	r1, r24
    27d8:	4c f5       	brge	.+82     	; 0x282c <LED_VidButterFly+0x836>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27da:	6b 85       	ldd	r22, Y+11	; 0x0b
    27dc:	7c 85       	ldd	r23, Y+12	; 0x0c
    27de:	8d 85       	ldd	r24, Y+13	; 0x0d
    27e0:	9e 85       	ldd	r25, Y+14	; 0x0e
    27e2:	20 e0       	ldi	r18, 0x00	; 0
    27e4:	30 e0       	ldi	r19, 0x00	; 0
    27e6:	40 e2       	ldi	r20, 0x20	; 32
    27e8:	51 e4       	ldi	r21, 0x41	; 65
    27ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27ee:	dc 01       	movw	r26, r24
    27f0:	cb 01       	movw	r24, r22
    27f2:	bc 01       	movw	r22, r24
    27f4:	cd 01       	movw	r24, r26
    27f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27fa:	dc 01       	movw	r26, r24
    27fc:	cb 01       	movw	r24, r22
    27fe:	9e 83       	std	Y+6, r25	; 0x06
    2800:	8d 83       	std	Y+5, r24	; 0x05
    2802:	0f c0       	rjmp	.+30     	; 0x2822 <LED_VidButterFly+0x82c>
    2804:	88 ec       	ldi	r24, 0xC8	; 200
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	9c 83       	std	Y+4, r25	; 0x04
    280a:	8b 83       	std	Y+3, r24	; 0x03
    280c:	8b 81       	ldd	r24, Y+3	; 0x03
    280e:	9c 81       	ldd	r25, Y+4	; 0x04
    2810:	01 97       	sbiw	r24, 0x01	; 1
    2812:	f1 f7       	brne	.-4      	; 0x2810 <LED_VidButterFly+0x81a>
    2814:	9c 83       	std	Y+4, r25	; 0x04
    2816:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2818:	8d 81       	ldd	r24, Y+5	; 0x05
    281a:	9e 81       	ldd	r25, Y+6	; 0x06
    281c:	01 97       	sbiw	r24, 0x01	; 1
    281e:	9e 83       	std	Y+6, r25	; 0x06
    2820:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2822:	8d 81       	ldd	r24, Y+5	; 0x05
    2824:	9e 81       	ldd	r25, Y+6	; 0x06
    2826:	00 97       	sbiw	r24, 0x00	; 0
    2828:	69 f7       	brne	.-38     	; 0x2804 <LED_VidButterFly+0x80e>
    282a:	14 c0       	rjmp	.+40     	; 0x2854 <LED_VidButterFly+0x85e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    282c:	6f 81       	ldd	r22, Y+7	; 0x07
    282e:	78 85       	ldd	r23, Y+8	; 0x08
    2830:	89 85       	ldd	r24, Y+9	; 0x09
    2832:	9a 85       	ldd	r25, Y+10	; 0x0a
    2834:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2838:	dc 01       	movw	r26, r24
    283a:	cb 01       	movw	r24, r22
    283c:	9e 83       	std	Y+6, r25	; 0x06
    283e:	8d 83       	std	Y+5, r24	; 0x05
    2840:	8d 81       	ldd	r24, Y+5	; 0x05
    2842:	9e 81       	ldd	r25, Y+6	; 0x06
    2844:	9a 83       	std	Y+2, r25	; 0x02
    2846:	89 83       	std	Y+1, r24	; 0x01
    2848:	89 81       	ldd	r24, Y+1	; 0x01
    284a:	9a 81       	ldd	r25, Y+2	; 0x02
    284c:	01 97       	sbiw	r24, 0x01	; 1
    284e:	f1 f7       	brne	.-4      	; 0x284c <LED_VidButterFly+0x856>
    2850:	9a 83       	std	Y+2, r25	; 0x02
    2852:	89 83       	std	Y+1, r24	; 0x01

#include <util/delay.h>

void LED_VidButterFly(u8 LOC_u8Cycles, u8 LOC_u8Speed)
{
	for (u8 i=0; i<LOC_u8Cycles; i++)
    2854:	de 01       	movw	r26, r28
    2856:	ad 59       	subi	r26, 0x9D	; 157
    2858:	bf 4f       	sbci	r27, 0xFF	; 255
    285a:	fe 01       	movw	r30, r28
    285c:	ed 59       	subi	r30, 0x9D	; 157
    285e:	ff 4f       	sbci	r31, 0xFF	; 255
    2860:	80 81       	ld	r24, Z
    2862:	8f 5f       	subi	r24, 0xFF	; 255
    2864:	8c 93       	st	X, r24
    2866:	fe 01       	movw	r30, r28
    2868:	ed 59       	subi	r30, 0x9D	; 157
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	de 01       	movw	r26, r28
    286e:	ac 59       	subi	r26, 0x9C	; 156
    2870:	bf 4f       	sbci	r27, 0xFF	; 255
    2872:	90 81       	ld	r25, Z
    2874:	8c 91       	ld	r24, X
    2876:	98 17       	cp	r25, r24
    2878:	08 f4       	brcc	.+2      	; 0x287c <LED_VidButterFly+0x886>
    287a:	d7 cb       	rjmp	.-2130   	; 0x202a <LED_VidButterFly+0x34>
		DIO_VidSetPortValue(LED_Port, 0b00100100 );
		_delay_ms(LOC_u8Speed);
		DIO_VidSetPortValue(LED_Port, 0b00011000 );
		_delay_ms(LOC_u8Speed);
	}
}
    287c:	cb 59       	subi	r28, 0x9B	; 155
    287e:	df 4f       	sbci	r29, 0xFF	; 255
    2880:	0f b6       	in	r0, 0x3f	; 63
    2882:	f8 94       	cli
    2884:	de bf       	out	0x3e, r29	; 62
    2886:	0f be       	out	0x3f, r0	; 63
    2888:	cd bf       	out	0x3d, r28	; 61
    288a:	cf 91       	pop	r28
    288c:	df 91       	pop	r29
    288e:	1f 91       	pop	r17
    2890:	0f 91       	pop	r16
    2892:	08 95       	ret

00002894 <SevSeg2x1_VidInit>:
#include "SevSeg2x1_Interface.h"

#include <util/delay.h>

void SevSeg2x1_VidInit(void)
{
    2894:	df 93       	push	r29
    2896:	cf 93       	push	r28
    2898:	cd b7       	in	r28, 0x3d	; 61
    289a:	de b7       	in	r29, 0x3e	; 62
	DIO_VidSetPortDirection(_7seg2x1_DataPort, 0xFF);	//enable Data port for Seven Segment to be output
    289c:	82 e0       	ldi	r24, 0x02	; 2
    289e:	6f ef       	ldi	r22, 0xFF	; 255
    28a0:	0e 94 63 08 	call	0x10c6	; 0x10c6 <DIO_VidSetPortDirection>
	DIO_VidSetPinDirection(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, OUTPUT); //enable CTRL PIN for Left Seven Segment to be output
    28a4:	81 e0       	ldi	r24, 0x01	; 1
    28a6:	61 e0       	ldi	r22, 0x01	; 1
    28a8:	41 e0       	ldi	r20, 0x01	; 1
    28aa:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, OUTPUT); //enable CTRL PIN for Right Seven Segment to be output
    28ae:	81 e0       	ldi	r24, 0x01	; 1
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	41 e0       	ldi	r20, 0x01	; 1
    28b4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <DIO_VidSetPinDirection>
}
    28b8:	cf 91       	pop	r28
    28ba:	df 91       	pop	r29
    28bc:	08 95       	ret

000028be <SevSeg2x1_VidDisplayRightDigit>:

void SevSeg2x1_VidDisplayRightDigit(u8 LOC_u8Digit)
{
    28be:	df 93       	push	r29
    28c0:	cf 93       	push	r28
    28c2:	00 d0       	rcall	.+0      	; 0x28c4 <SevSeg2x1_VidDisplayRightDigit+0x6>
    28c4:	0f 92       	push	r0
    28c6:	cd b7       	in	r28, 0x3d	; 61
    28c8:	de b7       	in	r29, 0x3e	; 62
    28ca:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Disable); //disable Left Seven Segment
    28cc:	81 e0       	ldi	r24, 0x01	; 1
    28ce:	61 e0       	ldi	r22, 0x01	; 1
    28d0:	40 e0       	ldi	r20, 0x00	; 0
    28d2:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Enable); //enable Right Seven Segment
    28d6:	81 e0       	ldi	r24, 0x01	; 1
    28d8:	60 e0       	ldi	r22, 0x00	; 0
    28da:	41 e0       	ldi	r20, 0x01	; 1
    28dc:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	switch (LOC_u8Digit)
    28e0:	89 81       	ldd	r24, Y+1	; 0x01
    28e2:	28 2f       	mov	r18, r24
    28e4:	30 e0       	ldi	r19, 0x00	; 0
    28e6:	3b 83       	std	Y+3, r19	; 0x03
    28e8:	2a 83       	std	Y+2, r18	; 0x02
    28ea:	8a 81       	ldd	r24, Y+2	; 0x02
    28ec:	9b 81       	ldd	r25, Y+3	; 0x03
    28ee:	84 30       	cpi	r24, 0x04	; 4
    28f0:	91 05       	cpc	r25, r1
    28f2:	09 f4       	brne	.+2      	; 0x28f6 <SevSeg2x1_VidDisplayRightDigit+0x38>
    28f4:	4b c0       	rjmp	.+150    	; 0x298c <SevSeg2x1_VidDisplayRightDigit+0xce>
    28f6:	2a 81       	ldd	r18, Y+2	; 0x02
    28f8:	3b 81       	ldd	r19, Y+3	; 0x03
    28fa:	25 30       	cpi	r18, 0x05	; 5
    28fc:	31 05       	cpc	r19, r1
    28fe:	d4 f4       	brge	.+52     	; 0x2934 <SevSeg2x1_VidDisplayRightDigit+0x76>
    2900:	8a 81       	ldd	r24, Y+2	; 0x02
    2902:	9b 81       	ldd	r25, Y+3	; 0x03
    2904:	81 30       	cpi	r24, 0x01	; 1
    2906:	91 05       	cpc	r25, r1
    2908:	c1 f1       	breq	.+112    	; 0x297a <SevSeg2x1_VidDisplayRightDigit+0xbc>
    290a:	2a 81       	ldd	r18, Y+2	; 0x02
    290c:	3b 81       	ldd	r19, Y+3	; 0x03
    290e:	22 30       	cpi	r18, 0x02	; 2
    2910:	31 05       	cpc	r19, r1
    2912:	2c f4       	brge	.+10     	; 0x291e <SevSeg2x1_VidDisplayRightDigit+0x60>
    2914:	8a 81       	ldd	r24, Y+2	; 0x02
    2916:	9b 81       	ldd	r25, Y+3	; 0x03
    2918:	00 97       	sbiw	r24, 0x00	; 0
    291a:	61 f1       	breq	.+88     	; 0x2974 <SevSeg2x1_VidDisplayRightDigit+0xb6>
    291c:	48 c0       	rjmp	.+144    	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
    291e:	2a 81       	ldd	r18, Y+2	; 0x02
    2920:	3b 81       	ldd	r19, Y+3	; 0x03
    2922:	22 30       	cpi	r18, 0x02	; 2
    2924:	31 05       	cpc	r19, r1
    2926:	61 f1       	breq	.+88     	; 0x2980 <SevSeg2x1_VidDisplayRightDigit+0xc2>
    2928:	8a 81       	ldd	r24, Y+2	; 0x02
    292a:	9b 81       	ldd	r25, Y+3	; 0x03
    292c:	83 30       	cpi	r24, 0x03	; 3
    292e:	91 05       	cpc	r25, r1
    2930:	51 f1       	breq	.+84     	; 0x2986 <SevSeg2x1_VidDisplayRightDigit+0xc8>
    2932:	3d c0       	rjmp	.+122    	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
    2934:	2a 81       	ldd	r18, Y+2	; 0x02
    2936:	3b 81       	ldd	r19, Y+3	; 0x03
    2938:	27 30       	cpi	r18, 0x07	; 7
    293a:	31 05       	cpc	r19, r1
    293c:	81 f1       	breq	.+96     	; 0x299e <SevSeg2x1_VidDisplayRightDigit+0xe0>
    293e:	8a 81       	ldd	r24, Y+2	; 0x02
    2940:	9b 81       	ldd	r25, Y+3	; 0x03
    2942:	88 30       	cpi	r24, 0x08	; 8
    2944:	91 05       	cpc	r25, r1
    2946:	5c f4       	brge	.+22     	; 0x295e <SevSeg2x1_VidDisplayRightDigit+0xa0>
    2948:	2a 81       	ldd	r18, Y+2	; 0x02
    294a:	3b 81       	ldd	r19, Y+3	; 0x03
    294c:	25 30       	cpi	r18, 0x05	; 5
    294e:	31 05       	cpc	r19, r1
    2950:	01 f1       	breq	.+64     	; 0x2992 <SevSeg2x1_VidDisplayRightDigit+0xd4>
    2952:	8a 81       	ldd	r24, Y+2	; 0x02
    2954:	9b 81       	ldd	r25, Y+3	; 0x03
    2956:	86 30       	cpi	r24, 0x06	; 6
    2958:	91 05       	cpc	r25, r1
    295a:	f1 f0       	breq	.+60     	; 0x2998 <SevSeg2x1_VidDisplayRightDigit+0xda>
    295c:	28 c0       	rjmp	.+80     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
    295e:	2a 81       	ldd	r18, Y+2	; 0x02
    2960:	3b 81       	ldd	r19, Y+3	; 0x03
    2962:	28 30       	cpi	r18, 0x08	; 8
    2964:	31 05       	cpc	r19, r1
    2966:	f1 f0       	breq	.+60     	; 0x29a4 <SevSeg2x1_VidDisplayRightDigit+0xe6>
    2968:	8a 81       	ldd	r24, Y+2	; 0x02
    296a:	9b 81       	ldd	r25, Y+3	; 0x03
    296c:	89 30       	cpi	r24, 0x09	; 9
    296e:	91 05       	cpc	r25, r1
    2970:	e1 f0       	breq	.+56     	; 0x29aa <SevSeg2x1_VidDisplayRightDigit+0xec>
    2972:	1d c0       	rjmp	.+58     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	{
	case 0: LOC_u8Digit=Zero; break;
    2974:	80 ec       	ldi	r24, 0xC0	; 192
    2976:	89 83       	std	Y+1, r24	; 0x01
    2978:	1a c0       	rjmp	.+52     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 1: LOC_u8Digit=One; break;
    297a:	89 ef       	ldi	r24, 0xF9	; 249
    297c:	89 83       	std	Y+1, r24	; 0x01
    297e:	17 c0       	rjmp	.+46     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 2: LOC_u8Digit=Two; break;
    2980:	84 ea       	ldi	r24, 0xA4	; 164
    2982:	89 83       	std	Y+1, r24	; 0x01
    2984:	14 c0       	rjmp	.+40     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 3: LOC_u8Digit=Three; break;
    2986:	80 eb       	ldi	r24, 0xB0	; 176
    2988:	89 83       	std	Y+1, r24	; 0x01
    298a:	11 c0       	rjmp	.+34     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 4: LOC_u8Digit=Four; break;
    298c:	89 e9       	ldi	r24, 0x99	; 153
    298e:	89 83       	std	Y+1, r24	; 0x01
    2990:	0e c0       	rjmp	.+28     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 5: LOC_u8Digit=Five; break;
    2992:	82 e9       	ldi	r24, 0x92	; 146
    2994:	89 83       	std	Y+1, r24	; 0x01
    2996:	0b c0       	rjmp	.+22     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 6: LOC_u8Digit=Six; break;
    2998:	82 e8       	ldi	r24, 0x82	; 130
    299a:	89 83       	std	Y+1, r24	; 0x01
    299c:	08 c0       	rjmp	.+16     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 7: LOC_u8Digit=Seven; break;
    299e:	88 ef       	ldi	r24, 0xF8	; 248
    29a0:	89 83       	std	Y+1, r24	; 0x01
    29a2:	05 c0       	rjmp	.+10     	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 8: LOC_u8Digit=Eight; break;
    29a4:	80 e8       	ldi	r24, 0x80	; 128
    29a6:	89 83       	std	Y+1, r24	; 0x01
    29a8:	02 c0       	rjmp	.+4      	; 0x29ae <SevSeg2x1_VidDisplayRightDigit+0xf0>
	case 9: LOC_u8Digit=Nine; break;
    29aa:	80 e9       	ldi	r24, 0x90	; 144
    29ac:	89 83       	std	Y+1, r24	; 0x01
	}
	DIO_VidSetPortValue(_7seg2x1_DataPort, LOC_u8Digit);
    29ae:	82 e0       	ldi	r24, 0x02	; 2
    29b0:	69 81       	ldd	r22, Y+1	; 0x01
    29b2:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
}
    29b6:	0f 90       	pop	r0
    29b8:	0f 90       	pop	r0
    29ba:	0f 90       	pop	r0
    29bc:	cf 91       	pop	r28
    29be:	df 91       	pop	r29
    29c0:	08 95       	ret

000029c2 <SevSeg2x1_VidDisplayLeftDigit>:

void SevSeg2x1_VidDisplayLeftDigit(u8 LOC_u8Digit)
{
    29c2:	df 93       	push	r29
    29c4:	cf 93       	push	r28
    29c6:	00 d0       	rcall	.+0      	; 0x29c8 <SevSeg2x1_VidDisplayLeftDigit+0x6>
    29c8:	0f 92       	push	r0
    29ca:	cd b7       	in	r28, 0x3d	; 61
    29cc:	de b7       	in	r29, 0x3e	; 62
    29ce:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Disable); //disable Right Seven Segment
    29d0:	81 e0       	ldi	r24, 0x01	; 1
    29d2:	60 e0       	ldi	r22, 0x00	; 0
    29d4:	40 e0       	ldi	r20, 0x00	; 0
    29d6:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Enable); //enable Left Seven Segment
    29da:	81 e0       	ldi	r24, 0x01	; 1
    29dc:	61 e0       	ldi	r22, 0x01	; 1
    29de:	41 e0       	ldi	r20, 0x01	; 1
    29e0:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	switch (LOC_u8Digit)
    29e4:	89 81       	ldd	r24, Y+1	; 0x01
    29e6:	28 2f       	mov	r18, r24
    29e8:	30 e0       	ldi	r19, 0x00	; 0
    29ea:	3b 83       	std	Y+3, r19	; 0x03
    29ec:	2a 83       	std	Y+2, r18	; 0x02
    29ee:	8a 81       	ldd	r24, Y+2	; 0x02
    29f0:	9b 81       	ldd	r25, Y+3	; 0x03
    29f2:	84 30       	cpi	r24, 0x04	; 4
    29f4:	91 05       	cpc	r25, r1
    29f6:	09 f4       	brne	.+2      	; 0x29fa <SevSeg2x1_VidDisplayLeftDigit+0x38>
    29f8:	4b c0       	rjmp	.+150    	; 0x2a90 <SevSeg2x1_VidDisplayLeftDigit+0xce>
    29fa:	2a 81       	ldd	r18, Y+2	; 0x02
    29fc:	3b 81       	ldd	r19, Y+3	; 0x03
    29fe:	25 30       	cpi	r18, 0x05	; 5
    2a00:	31 05       	cpc	r19, r1
    2a02:	d4 f4       	brge	.+52     	; 0x2a38 <SevSeg2x1_VidDisplayLeftDigit+0x76>
    2a04:	8a 81       	ldd	r24, Y+2	; 0x02
    2a06:	9b 81       	ldd	r25, Y+3	; 0x03
    2a08:	81 30       	cpi	r24, 0x01	; 1
    2a0a:	91 05       	cpc	r25, r1
    2a0c:	c1 f1       	breq	.+112    	; 0x2a7e <SevSeg2x1_VidDisplayLeftDigit+0xbc>
    2a0e:	2a 81       	ldd	r18, Y+2	; 0x02
    2a10:	3b 81       	ldd	r19, Y+3	; 0x03
    2a12:	22 30       	cpi	r18, 0x02	; 2
    2a14:	31 05       	cpc	r19, r1
    2a16:	2c f4       	brge	.+10     	; 0x2a22 <SevSeg2x1_VidDisplayLeftDigit+0x60>
    2a18:	8a 81       	ldd	r24, Y+2	; 0x02
    2a1a:	9b 81       	ldd	r25, Y+3	; 0x03
    2a1c:	00 97       	sbiw	r24, 0x00	; 0
    2a1e:	61 f1       	breq	.+88     	; 0x2a78 <SevSeg2x1_VidDisplayLeftDigit+0xb6>
    2a20:	48 c0       	rjmp	.+144    	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    2a22:	2a 81       	ldd	r18, Y+2	; 0x02
    2a24:	3b 81       	ldd	r19, Y+3	; 0x03
    2a26:	22 30       	cpi	r18, 0x02	; 2
    2a28:	31 05       	cpc	r19, r1
    2a2a:	61 f1       	breq	.+88     	; 0x2a84 <SevSeg2x1_VidDisplayLeftDigit+0xc2>
    2a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a2e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a30:	83 30       	cpi	r24, 0x03	; 3
    2a32:	91 05       	cpc	r25, r1
    2a34:	51 f1       	breq	.+84     	; 0x2a8a <SevSeg2x1_VidDisplayLeftDigit+0xc8>
    2a36:	3d c0       	rjmp	.+122    	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    2a38:	2a 81       	ldd	r18, Y+2	; 0x02
    2a3a:	3b 81       	ldd	r19, Y+3	; 0x03
    2a3c:	27 30       	cpi	r18, 0x07	; 7
    2a3e:	31 05       	cpc	r19, r1
    2a40:	81 f1       	breq	.+96     	; 0x2aa2 <SevSeg2x1_VidDisplayLeftDigit+0xe0>
    2a42:	8a 81       	ldd	r24, Y+2	; 0x02
    2a44:	9b 81       	ldd	r25, Y+3	; 0x03
    2a46:	88 30       	cpi	r24, 0x08	; 8
    2a48:	91 05       	cpc	r25, r1
    2a4a:	5c f4       	brge	.+22     	; 0x2a62 <SevSeg2x1_VidDisplayLeftDigit+0xa0>
    2a4c:	2a 81       	ldd	r18, Y+2	; 0x02
    2a4e:	3b 81       	ldd	r19, Y+3	; 0x03
    2a50:	25 30       	cpi	r18, 0x05	; 5
    2a52:	31 05       	cpc	r19, r1
    2a54:	01 f1       	breq	.+64     	; 0x2a96 <SevSeg2x1_VidDisplayLeftDigit+0xd4>
    2a56:	8a 81       	ldd	r24, Y+2	; 0x02
    2a58:	9b 81       	ldd	r25, Y+3	; 0x03
    2a5a:	86 30       	cpi	r24, 0x06	; 6
    2a5c:	91 05       	cpc	r25, r1
    2a5e:	f1 f0       	breq	.+60     	; 0x2a9c <SevSeg2x1_VidDisplayLeftDigit+0xda>
    2a60:	28 c0       	rjmp	.+80     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
    2a62:	2a 81       	ldd	r18, Y+2	; 0x02
    2a64:	3b 81       	ldd	r19, Y+3	; 0x03
    2a66:	28 30       	cpi	r18, 0x08	; 8
    2a68:	31 05       	cpc	r19, r1
    2a6a:	f1 f0       	breq	.+60     	; 0x2aa8 <SevSeg2x1_VidDisplayLeftDigit+0xe6>
    2a6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a6e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a70:	89 30       	cpi	r24, 0x09	; 9
    2a72:	91 05       	cpc	r25, r1
    2a74:	e1 f0       	breq	.+56     	; 0x2aae <SevSeg2x1_VidDisplayLeftDigit+0xec>
    2a76:	1d c0       	rjmp	.+58     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	{
	case 0: LOC_u8Digit=Zero; break;
    2a78:	80 ec       	ldi	r24, 0xC0	; 192
    2a7a:	89 83       	std	Y+1, r24	; 0x01
    2a7c:	1a c0       	rjmp	.+52     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 1: LOC_u8Digit=One; break;
    2a7e:	89 ef       	ldi	r24, 0xF9	; 249
    2a80:	89 83       	std	Y+1, r24	; 0x01
    2a82:	17 c0       	rjmp	.+46     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 2: LOC_u8Digit=Two; break;
    2a84:	84 ea       	ldi	r24, 0xA4	; 164
    2a86:	89 83       	std	Y+1, r24	; 0x01
    2a88:	14 c0       	rjmp	.+40     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 3: LOC_u8Digit=Three; break;
    2a8a:	80 eb       	ldi	r24, 0xB0	; 176
    2a8c:	89 83       	std	Y+1, r24	; 0x01
    2a8e:	11 c0       	rjmp	.+34     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 4: LOC_u8Digit=Four; break;
    2a90:	89 e9       	ldi	r24, 0x99	; 153
    2a92:	89 83       	std	Y+1, r24	; 0x01
    2a94:	0e c0       	rjmp	.+28     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 5: LOC_u8Digit=Five; break;
    2a96:	82 e9       	ldi	r24, 0x92	; 146
    2a98:	89 83       	std	Y+1, r24	; 0x01
    2a9a:	0b c0       	rjmp	.+22     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 6: LOC_u8Digit=Six; break;
    2a9c:	82 e8       	ldi	r24, 0x82	; 130
    2a9e:	89 83       	std	Y+1, r24	; 0x01
    2aa0:	08 c0       	rjmp	.+16     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 7: LOC_u8Digit=Seven; break;
    2aa2:	88 ef       	ldi	r24, 0xF8	; 248
    2aa4:	89 83       	std	Y+1, r24	; 0x01
    2aa6:	05 c0       	rjmp	.+10     	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 8: LOC_u8Digit=Eight; break;
    2aa8:	80 e8       	ldi	r24, 0x80	; 128
    2aaa:	89 83       	std	Y+1, r24	; 0x01
    2aac:	02 c0       	rjmp	.+4      	; 0x2ab2 <SevSeg2x1_VidDisplayLeftDigit+0xf0>
	case 9: LOC_u8Digit=Nine; break;
    2aae:	80 e9       	ldi	r24, 0x90	; 144
    2ab0:	89 83       	std	Y+1, r24	; 0x01
	}
	DIO_VidSetPortValue(_7seg2x1_DataPort, LOC_u8Digit);
    2ab2:	82 e0       	ldi	r24, 0x02	; 2
    2ab4:	69 81       	ldd	r22, Y+1	; 0x01
    2ab6:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
}
    2aba:	0f 90       	pop	r0
    2abc:	0f 90       	pop	r0
    2abe:	0f 90       	pop	r0
    2ac0:	cf 91       	pop	r28
    2ac2:	df 91       	pop	r29
    2ac4:	08 95       	ret

00002ac6 <SevSeg2x1_VidCountUp>:

void SevSeg2x1_VidCountUp(u8 LOC_u8Start, u8 LOC_u8End)
{
    2ac6:	df 93       	push	r29
    2ac8:	cf 93       	push	r28
    2aca:	cd b7       	in	r28, 0x3d	; 61
    2acc:	de b7       	in	r29, 0x3e	; 62
    2ace:	a2 97       	sbiw	r28, 0x22	; 34
    2ad0:	0f b6       	in	r0, 0x3f	; 63
    2ad2:	f8 94       	cli
    2ad4:	de bf       	out	0x3e, r29	; 62
    2ad6:	0f be       	out	0x3f, r0	; 63
    2ad8:	cd bf       	out	0x3d, r28	; 61
    2ada:	89 a3       	std	Y+33, r24	; 0x21
    2adc:	6a a3       	std	Y+34, r22	; 0x22

	u8 LOC_LeftDigit = 0;
    2ade:	18 a2       	std	Y+32, r1	; 0x20
	u8 LOC_RightDigit = 0;
    2ae0:	1f 8e       	std	Y+31, r1	; 0x1f
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
    2ae2:	89 a1       	ldd	r24, Y+33	; 0x21
    2ae4:	8e 8f       	std	Y+30, r24	; 0x1e
    2ae6:	03 c1       	rjmp	.+518    	; 0x2cee <SevSeg2x1_VidCountUp+0x228>
	{
		LOC_LeftDigit = LOC_Count /10;
    2ae8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2aea:	9a e0       	ldi	r25, 0x0A	; 10
    2aec:	69 2f       	mov	r22, r25
    2aee:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <__udivmodqi4>
    2af2:	88 a3       	std	Y+32, r24	; 0x20
		LOC_RightDigit = LOC_Count % 10;
    2af4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2af6:	9a e0       	ldi	r25, 0x0A	; 10
    2af8:	69 2f       	mov	r22, r25
    2afa:	0e 94 4b 1d 	call	0x3a96	; 0x3a96 <__udivmodqi4>
    2afe:	89 2f       	mov	r24, r25
    2b00:	8f 8f       	std	Y+31, r24	; 0x1f

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    2b02:	1d 8e       	std	Y+29, r1	; 0x1d
    2b04:	ed c0       	rjmp	.+474    	; 0x2ce0 <SevSeg2x1_VidCountUp+0x21a>
		{
			SevSeg2x1_VidDisplayRightDigit(LOC_RightDigit);
    2b06:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2b08:	0e 94 5f 14 	call	0x28be	; 0x28be <SevSeg2x1_VidDisplayRightDigit>
    2b0c:	80 e0       	ldi	r24, 0x00	; 0
    2b0e:	90 e0       	ldi	r25, 0x00	; 0
    2b10:	a0 e2       	ldi	r26, 0x20	; 32
    2b12:	b1 e4       	ldi	r27, 0x41	; 65
    2b14:	89 8f       	std	Y+25, r24	; 0x19
    2b16:	9a 8f       	std	Y+26, r25	; 0x1a
    2b18:	ab 8f       	std	Y+27, r26	; 0x1b
    2b1a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b1c:	69 8d       	ldd	r22, Y+25	; 0x19
    2b1e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b20:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b22:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b24:	20 e0       	ldi	r18, 0x00	; 0
    2b26:	30 e0       	ldi	r19, 0x00	; 0
    2b28:	4a ef       	ldi	r20, 0xFA	; 250
    2b2a:	54 e4       	ldi	r21, 0x44	; 68
    2b2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b30:	dc 01       	movw	r26, r24
    2b32:	cb 01       	movw	r24, r22
    2b34:	8d 8b       	std	Y+21, r24	; 0x15
    2b36:	9e 8b       	std	Y+22, r25	; 0x16
    2b38:	af 8b       	std	Y+23, r26	; 0x17
    2b3a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2b3c:	6d 89       	ldd	r22, Y+21	; 0x15
    2b3e:	7e 89       	ldd	r23, Y+22	; 0x16
    2b40:	8f 89       	ldd	r24, Y+23	; 0x17
    2b42:	98 8d       	ldd	r25, Y+24	; 0x18
    2b44:	20 e0       	ldi	r18, 0x00	; 0
    2b46:	30 e0       	ldi	r19, 0x00	; 0
    2b48:	40 e8       	ldi	r20, 0x80	; 128
    2b4a:	5f e3       	ldi	r21, 0x3F	; 63
    2b4c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b50:	88 23       	and	r24, r24
    2b52:	2c f4       	brge	.+10     	; 0x2b5e <SevSeg2x1_VidCountUp+0x98>
		__ticks = 1;
    2b54:	81 e0       	ldi	r24, 0x01	; 1
    2b56:	90 e0       	ldi	r25, 0x00	; 0
    2b58:	9c 8b       	std	Y+20, r25	; 0x14
    2b5a:	8b 8b       	std	Y+19, r24	; 0x13
    2b5c:	3f c0       	rjmp	.+126    	; 0x2bdc <SevSeg2x1_VidCountUp+0x116>
	else if (__tmp > 65535)
    2b5e:	6d 89       	ldd	r22, Y+21	; 0x15
    2b60:	7e 89       	ldd	r23, Y+22	; 0x16
    2b62:	8f 89       	ldd	r24, Y+23	; 0x17
    2b64:	98 8d       	ldd	r25, Y+24	; 0x18
    2b66:	20 e0       	ldi	r18, 0x00	; 0
    2b68:	3f ef       	ldi	r19, 0xFF	; 255
    2b6a:	4f e7       	ldi	r20, 0x7F	; 127
    2b6c:	57 e4       	ldi	r21, 0x47	; 71
    2b6e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b72:	18 16       	cp	r1, r24
    2b74:	4c f5       	brge	.+82     	; 0x2bc8 <SevSeg2x1_VidCountUp+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b76:	69 8d       	ldd	r22, Y+25	; 0x19
    2b78:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2b7a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2b7c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2b7e:	20 e0       	ldi	r18, 0x00	; 0
    2b80:	30 e0       	ldi	r19, 0x00	; 0
    2b82:	40 e2       	ldi	r20, 0x20	; 32
    2b84:	51 e4       	ldi	r21, 0x41	; 65
    2b86:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b8a:	dc 01       	movw	r26, r24
    2b8c:	cb 01       	movw	r24, r22
    2b8e:	bc 01       	movw	r22, r24
    2b90:	cd 01       	movw	r24, r26
    2b92:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b96:	dc 01       	movw	r26, r24
    2b98:	cb 01       	movw	r24, r22
    2b9a:	9c 8b       	std	Y+20, r25	; 0x14
    2b9c:	8b 8b       	std	Y+19, r24	; 0x13
    2b9e:	0f c0       	rjmp	.+30     	; 0x2bbe <SevSeg2x1_VidCountUp+0xf8>
    2ba0:	88 ec       	ldi	r24, 0xC8	; 200
    2ba2:	90 e0       	ldi	r25, 0x00	; 0
    2ba4:	9a 8b       	std	Y+18, r25	; 0x12
    2ba6:	89 8b       	std	Y+17, r24	; 0x11
    2ba8:	89 89       	ldd	r24, Y+17	; 0x11
    2baa:	9a 89       	ldd	r25, Y+18	; 0x12
    2bac:	01 97       	sbiw	r24, 0x01	; 1
    2bae:	f1 f7       	brne	.-4      	; 0x2bac <SevSeg2x1_VidCountUp+0xe6>
    2bb0:	9a 8b       	std	Y+18, r25	; 0x12
    2bb2:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bb4:	8b 89       	ldd	r24, Y+19	; 0x13
    2bb6:	9c 89       	ldd	r25, Y+20	; 0x14
    2bb8:	01 97       	sbiw	r24, 0x01	; 1
    2bba:	9c 8b       	std	Y+20, r25	; 0x14
    2bbc:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bbe:	8b 89       	ldd	r24, Y+19	; 0x13
    2bc0:	9c 89       	ldd	r25, Y+20	; 0x14
    2bc2:	00 97       	sbiw	r24, 0x00	; 0
    2bc4:	69 f7       	brne	.-38     	; 0x2ba0 <SevSeg2x1_VidCountUp+0xda>
    2bc6:	14 c0       	rjmp	.+40     	; 0x2bf0 <SevSeg2x1_VidCountUp+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bc8:	6d 89       	ldd	r22, Y+21	; 0x15
    2bca:	7e 89       	ldd	r23, Y+22	; 0x16
    2bcc:	8f 89       	ldd	r24, Y+23	; 0x17
    2bce:	98 8d       	ldd	r25, Y+24	; 0x18
    2bd0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bd4:	dc 01       	movw	r26, r24
    2bd6:	cb 01       	movw	r24, r22
    2bd8:	9c 8b       	std	Y+20, r25	; 0x14
    2bda:	8b 8b       	std	Y+19, r24	; 0x13
    2bdc:	8b 89       	ldd	r24, Y+19	; 0x13
    2bde:	9c 89       	ldd	r25, Y+20	; 0x14
    2be0:	98 8b       	std	Y+16, r25	; 0x10
    2be2:	8f 87       	std	Y+15, r24	; 0x0f
    2be4:	8f 85       	ldd	r24, Y+15	; 0x0f
    2be6:	98 89       	ldd	r25, Y+16	; 0x10
    2be8:	01 97       	sbiw	r24, 0x01	; 1
    2bea:	f1 f7       	brne	.-4      	; 0x2be8 <SevSeg2x1_VidCountUp+0x122>
    2bec:	98 8b       	std	Y+16, r25	; 0x10
    2bee:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
    2bf0:	88 a1       	ldd	r24, Y+32	; 0x20
    2bf2:	0e 94 e1 14 	call	0x29c2	; 0x29c2 <SevSeg2x1_VidDisplayLeftDigit>
    2bf6:	80 e0       	ldi	r24, 0x00	; 0
    2bf8:	90 e0       	ldi	r25, 0x00	; 0
    2bfa:	a0 e2       	ldi	r26, 0x20	; 32
    2bfc:	b1 e4       	ldi	r27, 0x41	; 65
    2bfe:	8b 87       	std	Y+11, r24	; 0x0b
    2c00:	9c 87       	std	Y+12, r25	; 0x0c
    2c02:	ad 87       	std	Y+13, r26	; 0x0d
    2c04:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c06:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c08:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c0e:	20 e0       	ldi	r18, 0x00	; 0
    2c10:	30 e0       	ldi	r19, 0x00	; 0
    2c12:	4a ef       	ldi	r20, 0xFA	; 250
    2c14:	54 e4       	ldi	r21, 0x44	; 68
    2c16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c1a:	dc 01       	movw	r26, r24
    2c1c:	cb 01       	movw	r24, r22
    2c1e:	8f 83       	std	Y+7, r24	; 0x07
    2c20:	98 87       	std	Y+8, r25	; 0x08
    2c22:	a9 87       	std	Y+9, r26	; 0x09
    2c24:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2c26:	6f 81       	ldd	r22, Y+7	; 0x07
    2c28:	78 85       	ldd	r23, Y+8	; 0x08
    2c2a:	89 85       	ldd	r24, Y+9	; 0x09
    2c2c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c2e:	20 e0       	ldi	r18, 0x00	; 0
    2c30:	30 e0       	ldi	r19, 0x00	; 0
    2c32:	40 e8       	ldi	r20, 0x80	; 128
    2c34:	5f e3       	ldi	r21, 0x3F	; 63
    2c36:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c3a:	88 23       	and	r24, r24
    2c3c:	2c f4       	brge	.+10     	; 0x2c48 <SevSeg2x1_VidCountUp+0x182>
		__ticks = 1;
    2c3e:	81 e0       	ldi	r24, 0x01	; 1
    2c40:	90 e0       	ldi	r25, 0x00	; 0
    2c42:	9e 83       	std	Y+6, r25	; 0x06
    2c44:	8d 83       	std	Y+5, r24	; 0x05
    2c46:	3f c0       	rjmp	.+126    	; 0x2cc6 <SevSeg2x1_VidCountUp+0x200>
	else if (__tmp > 65535)
    2c48:	6f 81       	ldd	r22, Y+7	; 0x07
    2c4a:	78 85       	ldd	r23, Y+8	; 0x08
    2c4c:	89 85       	ldd	r24, Y+9	; 0x09
    2c4e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2c50:	20 e0       	ldi	r18, 0x00	; 0
    2c52:	3f ef       	ldi	r19, 0xFF	; 255
    2c54:	4f e7       	ldi	r20, 0x7F	; 127
    2c56:	57 e4       	ldi	r21, 0x47	; 71
    2c58:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c5c:	18 16       	cp	r1, r24
    2c5e:	4c f5       	brge	.+82     	; 0x2cb2 <SevSeg2x1_VidCountUp+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c60:	6b 85       	ldd	r22, Y+11	; 0x0b
    2c62:	7c 85       	ldd	r23, Y+12	; 0x0c
    2c64:	8d 85       	ldd	r24, Y+13	; 0x0d
    2c66:	9e 85       	ldd	r25, Y+14	; 0x0e
    2c68:	20 e0       	ldi	r18, 0x00	; 0
    2c6a:	30 e0       	ldi	r19, 0x00	; 0
    2c6c:	40 e2       	ldi	r20, 0x20	; 32
    2c6e:	51 e4       	ldi	r21, 0x41	; 65
    2c70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c74:	dc 01       	movw	r26, r24
    2c76:	cb 01       	movw	r24, r22
    2c78:	bc 01       	movw	r22, r24
    2c7a:	cd 01       	movw	r24, r26
    2c7c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c80:	dc 01       	movw	r26, r24
    2c82:	cb 01       	movw	r24, r22
    2c84:	9e 83       	std	Y+6, r25	; 0x06
    2c86:	8d 83       	std	Y+5, r24	; 0x05
    2c88:	0f c0       	rjmp	.+30     	; 0x2ca8 <SevSeg2x1_VidCountUp+0x1e2>
    2c8a:	88 ec       	ldi	r24, 0xC8	; 200
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	9c 83       	std	Y+4, r25	; 0x04
    2c90:	8b 83       	std	Y+3, r24	; 0x03
    2c92:	8b 81       	ldd	r24, Y+3	; 0x03
    2c94:	9c 81       	ldd	r25, Y+4	; 0x04
    2c96:	01 97       	sbiw	r24, 0x01	; 1
    2c98:	f1 f7       	brne	.-4      	; 0x2c96 <SevSeg2x1_VidCountUp+0x1d0>
    2c9a:	9c 83       	std	Y+4, r25	; 0x04
    2c9c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c9e:	8d 81       	ldd	r24, Y+5	; 0x05
    2ca0:	9e 81       	ldd	r25, Y+6	; 0x06
    2ca2:	01 97       	sbiw	r24, 0x01	; 1
    2ca4:	9e 83       	std	Y+6, r25	; 0x06
    2ca6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ca8:	8d 81       	ldd	r24, Y+5	; 0x05
    2caa:	9e 81       	ldd	r25, Y+6	; 0x06
    2cac:	00 97       	sbiw	r24, 0x00	; 0
    2cae:	69 f7       	brne	.-38     	; 0x2c8a <SevSeg2x1_VidCountUp+0x1c4>
    2cb0:	14 c0       	rjmp	.+40     	; 0x2cda <SevSeg2x1_VidCountUp+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cb2:	6f 81       	ldd	r22, Y+7	; 0x07
    2cb4:	78 85       	ldd	r23, Y+8	; 0x08
    2cb6:	89 85       	ldd	r24, Y+9	; 0x09
    2cb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2cba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cbe:	dc 01       	movw	r26, r24
    2cc0:	cb 01       	movw	r24, r22
    2cc2:	9e 83       	std	Y+6, r25	; 0x06
    2cc4:	8d 83       	std	Y+5, r24	; 0x05
    2cc6:	8d 81       	ldd	r24, Y+5	; 0x05
    2cc8:	9e 81       	ldd	r25, Y+6	; 0x06
    2cca:	9a 83       	std	Y+2, r25	; 0x02
    2ccc:	89 83       	std	Y+1, r24	; 0x01
    2cce:	89 81       	ldd	r24, Y+1	; 0x01
    2cd0:	9a 81       	ldd	r25, Y+2	; 0x02
    2cd2:	01 97       	sbiw	r24, 0x01	; 1
    2cd4:	f1 f7       	brne	.-4      	; 0x2cd2 <SevSeg2x1_VidCountUp+0x20c>
    2cd6:	9a 83       	std	Y+2, r25	; 0x02
    2cd8:	89 83       	std	Y+1, r24	; 0x01
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
	{
		LOC_LeftDigit = LOC_Count /10;
		LOC_RightDigit = LOC_Count % 10;

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    2cda:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2cdc:	8f 5f       	subi	r24, 0xFF	; 255
    2cde:	8d 8f       	std	Y+29, r24	; 0x1d
    2ce0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ce2:	8a 30       	cpi	r24, 0x0A	; 10
    2ce4:	08 f4       	brcc	.+2      	; 0x2ce8 <SevSeg2x1_VidCountUp+0x222>
    2ce6:	0f cf       	rjmp	.-482    	; 0x2b06 <SevSeg2x1_VidCountUp+0x40>
void SevSeg2x1_VidCountUp(u8 LOC_u8Start, u8 LOC_u8End)
{

	u8 LOC_LeftDigit = 0;
	u8 LOC_RightDigit = 0;
	for (u8 LOC_Count=LOC_u8Start; LOC_Count<(LOC_u8End+1); LOC_Count++)
    2ce8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2cea:	8f 5f       	subi	r24, 0xFF	; 255
    2cec:	8e 8f       	std	Y+30, r24	; 0x1e
    2cee:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2cf0:	28 2f       	mov	r18, r24
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	8a a1       	ldd	r24, Y+34	; 0x22
    2cf6:	88 2f       	mov	r24, r24
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	01 96       	adiw	r24, 0x01	; 1
    2cfc:	28 17       	cp	r18, r24
    2cfe:	39 07       	cpc	r19, r25
    2d00:	0c f4       	brge	.+2      	; 0x2d04 <SevSeg2x1_VidCountUp+0x23e>
    2d02:	f2 ce       	rjmp	.-540    	; 0x2ae8 <SevSeg2x1_VidCountUp+0x22>
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
			_delay_ms(10);
		}
	}
}
    2d04:	a2 96       	adiw	r28, 0x22	; 34
    2d06:	0f b6       	in	r0, 0x3f	; 63
    2d08:	f8 94       	cli
    2d0a:	de bf       	out	0x3e, r29	; 62
    2d0c:	0f be       	out	0x3f, r0	; 63
    2d0e:	cd bf       	out	0x3d, r28	; 61
    2d10:	cf 91       	pop	r28
    2d12:	df 91       	pop	r29
    2d14:	08 95       	ret

00002d16 <SevSeg2x1_VidCountDown>:


void SevSeg2x1_VidCountDown(u8 LOC_u8Start, u8 LOC_u8End)
{
    2d16:	df 93       	push	r29
    2d18:	cf 93       	push	r28
    2d1a:	cd b7       	in	r28, 0x3d	; 61
    2d1c:	de b7       	in	r29, 0x3e	; 62
    2d1e:	a2 97       	sbiw	r28, 0x22	; 34
    2d20:	0f b6       	in	r0, 0x3f	; 63
    2d22:	f8 94       	cli
    2d24:	de bf       	out	0x3e, r29	; 62
    2d26:	0f be       	out	0x3f, r0	; 63
    2d28:	cd bf       	out	0x3d, r28	; 61
    2d2a:	89 a3       	std	Y+33, r24	; 0x21
    2d2c:	6a a3       	std	Y+34, r22	; 0x22
	u8 LOC_LeftDigit = 0;
    2d2e:	18 a2       	std	Y+32, r1	; 0x20
	u8 LOC_RightDigit = 0;
    2d30:	1f 8e       	std	Y+31, r1	; 0x1f
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
    2d32:	89 a1       	ldd	r24, Y+33	; 0x21
    2d34:	8e 8f       	std	Y+30, r24	; 0x1e
    2d36:	03 c1       	rjmp	.+518    	; 0x2f3e <SevSeg2x1_VidCountDown+0x228>
	{
		LOC_LeftDigit = LOC_Count /10;
    2d38:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2d3a:	9a e0       	ldi	r25, 0x0A	; 10
    2d3c:	69 2f       	mov	r22, r25
    2d3e:	0e 94 57 1d 	call	0x3aae	; 0x3aae <__divmodqi4>
    2d42:	88 a3       	std	Y+32, r24	; 0x20
		LOC_RightDigit = LOC_Count % 10;
    2d44:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2d46:	9a e0       	ldi	r25, 0x0A	; 10
    2d48:	69 2f       	mov	r22, r25
    2d4a:	0e 94 57 1d 	call	0x3aae	; 0x3aae <__divmodqi4>
    2d4e:	89 2f       	mov	r24, r25
    2d50:	8f 8f       	std	Y+31, r24	; 0x1f

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    2d52:	1d 8e       	std	Y+29, r1	; 0x1d
    2d54:	ed c0       	rjmp	.+474    	; 0x2f30 <SevSeg2x1_VidCountDown+0x21a>
		{
			SevSeg2x1_VidDisplayRightDigit(LOC_RightDigit);
    2d56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2d58:	0e 94 5f 14 	call	0x28be	; 0x28be <SevSeg2x1_VidDisplayRightDigit>
    2d5c:	80 e0       	ldi	r24, 0x00	; 0
    2d5e:	90 e0       	ldi	r25, 0x00	; 0
    2d60:	a0 e2       	ldi	r26, 0x20	; 32
    2d62:	b1 e4       	ldi	r27, 0x41	; 65
    2d64:	89 8f       	std	Y+25, r24	; 0x19
    2d66:	9a 8f       	std	Y+26, r25	; 0x1a
    2d68:	ab 8f       	std	Y+27, r26	; 0x1b
    2d6a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d6c:	69 8d       	ldd	r22, Y+25	; 0x19
    2d6e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d74:	20 e0       	ldi	r18, 0x00	; 0
    2d76:	30 e0       	ldi	r19, 0x00	; 0
    2d78:	4a ef       	ldi	r20, 0xFA	; 250
    2d7a:	54 e4       	ldi	r21, 0x44	; 68
    2d7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d80:	dc 01       	movw	r26, r24
    2d82:	cb 01       	movw	r24, r22
    2d84:	8d 8b       	std	Y+21, r24	; 0x15
    2d86:	9e 8b       	std	Y+22, r25	; 0x16
    2d88:	af 8b       	std	Y+23, r26	; 0x17
    2d8a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2d8c:	6d 89       	ldd	r22, Y+21	; 0x15
    2d8e:	7e 89       	ldd	r23, Y+22	; 0x16
    2d90:	8f 89       	ldd	r24, Y+23	; 0x17
    2d92:	98 8d       	ldd	r25, Y+24	; 0x18
    2d94:	20 e0       	ldi	r18, 0x00	; 0
    2d96:	30 e0       	ldi	r19, 0x00	; 0
    2d98:	40 e8       	ldi	r20, 0x80	; 128
    2d9a:	5f e3       	ldi	r21, 0x3F	; 63
    2d9c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2da0:	88 23       	and	r24, r24
    2da2:	2c f4       	brge	.+10     	; 0x2dae <SevSeg2x1_VidCountDown+0x98>
		__ticks = 1;
    2da4:	81 e0       	ldi	r24, 0x01	; 1
    2da6:	90 e0       	ldi	r25, 0x00	; 0
    2da8:	9c 8b       	std	Y+20, r25	; 0x14
    2daa:	8b 8b       	std	Y+19, r24	; 0x13
    2dac:	3f c0       	rjmp	.+126    	; 0x2e2c <SevSeg2x1_VidCountDown+0x116>
	else if (__tmp > 65535)
    2dae:	6d 89       	ldd	r22, Y+21	; 0x15
    2db0:	7e 89       	ldd	r23, Y+22	; 0x16
    2db2:	8f 89       	ldd	r24, Y+23	; 0x17
    2db4:	98 8d       	ldd	r25, Y+24	; 0x18
    2db6:	20 e0       	ldi	r18, 0x00	; 0
    2db8:	3f ef       	ldi	r19, 0xFF	; 255
    2dba:	4f e7       	ldi	r20, 0x7F	; 127
    2dbc:	57 e4       	ldi	r21, 0x47	; 71
    2dbe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dc2:	18 16       	cp	r1, r24
    2dc4:	4c f5       	brge	.+82     	; 0x2e18 <SevSeg2x1_VidCountDown+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2dc6:	69 8d       	ldd	r22, Y+25	; 0x19
    2dc8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2dca:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2dcc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2dce:	20 e0       	ldi	r18, 0x00	; 0
    2dd0:	30 e0       	ldi	r19, 0x00	; 0
    2dd2:	40 e2       	ldi	r20, 0x20	; 32
    2dd4:	51 e4       	ldi	r21, 0x41	; 65
    2dd6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dda:	dc 01       	movw	r26, r24
    2ddc:	cb 01       	movw	r24, r22
    2dde:	bc 01       	movw	r22, r24
    2de0:	cd 01       	movw	r24, r26
    2de2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2de6:	dc 01       	movw	r26, r24
    2de8:	cb 01       	movw	r24, r22
    2dea:	9c 8b       	std	Y+20, r25	; 0x14
    2dec:	8b 8b       	std	Y+19, r24	; 0x13
    2dee:	0f c0       	rjmp	.+30     	; 0x2e0e <SevSeg2x1_VidCountDown+0xf8>
    2df0:	88 ec       	ldi	r24, 0xC8	; 200
    2df2:	90 e0       	ldi	r25, 0x00	; 0
    2df4:	9a 8b       	std	Y+18, r25	; 0x12
    2df6:	89 8b       	std	Y+17, r24	; 0x11
    2df8:	89 89       	ldd	r24, Y+17	; 0x11
    2dfa:	9a 89       	ldd	r25, Y+18	; 0x12
    2dfc:	01 97       	sbiw	r24, 0x01	; 1
    2dfe:	f1 f7       	brne	.-4      	; 0x2dfc <SevSeg2x1_VidCountDown+0xe6>
    2e00:	9a 8b       	std	Y+18, r25	; 0x12
    2e02:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e04:	8b 89       	ldd	r24, Y+19	; 0x13
    2e06:	9c 89       	ldd	r25, Y+20	; 0x14
    2e08:	01 97       	sbiw	r24, 0x01	; 1
    2e0a:	9c 8b       	std	Y+20, r25	; 0x14
    2e0c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e0e:	8b 89       	ldd	r24, Y+19	; 0x13
    2e10:	9c 89       	ldd	r25, Y+20	; 0x14
    2e12:	00 97       	sbiw	r24, 0x00	; 0
    2e14:	69 f7       	brne	.-38     	; 0x2df0 <SevSeg2x1_VidCountDown+0xda>
    2e16:	14 c0       	rjmp	.+40     	; 0x2e40 <SevSeg2x1_VidCountDown+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e18:	6d 89       	ldd	r22, Y+21	; 0x15
    2e1a:	7e 89       	ldd	r23, Y+22	; 0x16
    2e1c:	8f 89       	ldd	r24, Y+23	; 0x17
    2e1e:	98 8d       	ldd	r25, Y+24	; 0x18
    2e20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e24:	dc 01       	movw	r26, r24
    2e26:	cb 01       	movw	r24, r22
    2e28:	9c 8b       	std	Y+20, r25	; 0x14
    2e2a:	8b 8b       	std	Y+19, r24	; 0x13
    2e2c:	8b 89       	ldd	r24, Y+19	; 0x13
    2e2e:	9c 89       	ldd	r25, Y+20	; 0x14
    2e30:	98 8b       	std	Y+16, r25	; 0x10
    2e32:	8f 87       	std	Y+15, r24	; 0x0f
    2e34:	8f 85       	ldd	r24, Y+15	; 0x0f
    2e36:	98 89       	ldd	r25, Y+16	; 0x10
    2e38:	01 97       	sbiw	r24, 0x01	; 1
    2e3a:	f1 f7       	brne	.-4      	; 0x2e38 <SevSeg2x1_VidCountDown+0x122>
    2e3c:	98 8b       	std	Y+16, r25	; 0x10
    2e3e:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
    2e40:	88 a1       	ldd	r24, Y+32	; 0x20
    2e42:	0e 94 e1 14 	call	0x29c2	; 0x29c2 <SevSeg2x1_VidDisplayLeftDigit>
    2e46:	80 e0       	ldi	r24, 0x00	; 0
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	a0 e2       	ldi	r26, 0x20	; 32
    2e4c:	b1 e4       	ldi	r27, 0x41	; 65
    2e4e:	8b 87       	std	Y+11, r24	; 0x0b
    2e50:	9c 87       	std	Y+12, r25	; 0x0c
    2e52:	ad 87       	std	Y+13, r26	; 0x0d
    2e54:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e56:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e58:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e5a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e5c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e5e:	20 e0       	ldi	r18, 0x00	; 0
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	4a ef       	ldi	r20, 0xFA	; 250
    2e64:	54 e4       	ldi	r21, 0x44	; 68
    2e66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e6a:	dc 01       	movw	r26, r24
    2e6c:	cb 01       	movw	r24, r22
    2e6e:	8f 83       	std	Y+7, r24	; 0x07
    2e70:	98 87       	std	Y+8, r25	; 0x08
    2e72:	a9 87       	std	Y+9, r26	; 0x09
    2e74:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2e76:	6f 81       	ldd	r22, Y+7	; 0x07
    2e78:	78 85       	ldd	r23, Y+8	; 0x08
    2e7a:	89 85       	ldd	r24, Y+9	; 0x09
    2e7c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e7e:	20 e0       	ldi	r18, 0x00	; 0
    2e80:	30 e0       	ldi	r19, 0x00	; 0
    2e82:	40 e8       	ldi	r20, 0x80	; 128
    2e84:	5f e3       	ldi	r21, 0x3F	; 63
    2e86:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e8a:	88 23       	and	r24, r24
    2e8c:	2c f4       	brge	.+10     	; 0x2e98 <SevSeg2x1_VidCountDown+0x182>
		__ticks = 1;
    2e8e:	81 e0       	ldi	r24, 0x01	; 1
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	9e 83       	std	Y+6, r25	; 0x06
    2e94:	8d 83       	std	Y+5, r24	; 0x05
    2e96:	3f c0       	rjmp	.+126    	; 0x2f16 <SevSeg2x1_VidCountDown+0x200>
	else if (__tmp > 65535)
    2e98:	6f 81       	ldd	r22, Y+7	; 0x07
    2e9a:	78 85       	ldd	r23, Y+8	; 0x08
    2e9c:	89 85       	ldd	r24, Y+9	; 0x09
    2e9e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ea0:	20 e0       	ldi	r18, 0x00	; 0
    2ea2:	3f ef       	ldi	r19, 0xFF	; 255
    2ea4:	4f e7       	ldi	r20, 0x7F	; 127
    2ea6:	57 e4       	ldi	r21, 0x47	; 71
    2ea8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2eac:	18 16       	cp	r1, r24
    2eae:	4c f5       	brge	.+82     	; 0x2f02 <SevSeg2x1_VidCountDown+0x1ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2eb0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2eb2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2eb4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2eb6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2eb8:	20 e0       	ldi	r18, 0x00	; 0
    2eba:	30 e0       	ldi	r19, 0x00	; 0
    2ebc:	40 e2       	ldi	r20, 0x20	; 32
    2ebe:	51 e4       	ldi	r21, 0x41	; 65
    2ec0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ec4:	dc 01       	movw	r26, r24
    2ec6:	cb 01       	movw	r24, r22
    2ec8:	bc 01       	movw	r22, r24
    2eca:	cd 01       	movw	r24, r26
    2ecc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ed0:	dc 01       	movw	r26, r24
    2ed2:	cb 01       	movw	r24, r22
    2ed4:	9e 83       	std	Y+6, r25	; 0x06
    2ed6:	8d 83       	std	Y+5, r24	; 0x05
    2ed8:	0f c0       	rjmp	.+30     	; 0x2ef8 <SevSeg2x1_VidCountDown+0x1e2>
    2eda:	88 ec       	ldi	r24, 0xC8	; 200
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	9c 83       	std	Y+4, r25	; 0x04
    2ee0:	8b 83       	std	Y+3, r24	; 0x03
    2ee2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ee6:	01 97       	sbiw	r24, 0x01	; 1
    2ee8:	f1 f7       	brne	.-4      	; 0x2ee6 <SevSeg2x1_VidCountDown+0x1d0>
    2eea:	9c 83       	std	Y+4, r25	; 0x04
    2eec:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2eee:	8d 81       	ldd	r24, Y+5	; 0x05
    2ef0:	9e 81       	ldd	r25, Y+6	; 0x06
    2ef2:	01 97       	sbiw	r24, 0x01	; 1
    2ef4:	9e 83       	std	Y+6, r25	; 0x06
    2ef6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ef8:	8d 81       	ldd	r24, Y+5	; 0x05
    2efa:	9e 81       	ldd	r25, Y+6	; 0x06
    2efc:	00 97       	sbiw	r24, 0x00	; 0
    2efe:	69 f7       	brne	.-38     	; 0x2eda <SevSeg2x1_VidCountDown+0x1c4>
    2f00:	14 c0       	rjmp	.+40     	; 0x2f2a <SevSeg2x1_VidCountDown+0x214>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f02:	6f 81       	ldd	r22, Y+7	; 0x07
    2f04:	78 85       	ldd	r23, Y+8	; 0x08
    2f06:	89 85       	ldd	r24, Y+9	; 0x09
    2f08:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f0a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f0e:	dc 01       	movw	r26, r24
    2f10:	cb 01       	movw	r24, r22
    2f12:	9e 83       	std	Y+6, r25	; 0x06
    2f14:	8d 83       	std	Y+5, r24	; 0x05
    2f16:	8d 81       	ldd	r24, Y+5	; 0x05
    2f18:	9e 81       	ldd	r25, Y+6	; 0x06
    2f1a:	9a 83       	std	Y+2, r25	; 0x02
    2f1c:	89 83       	std	Y+1, r24	; 0x01
    2f1e:	89 81       	ldd	r24, Y+1	; 0x01
    2f20:	9a 81       	ldd	r25, Y+2	; 0x02
    2f22:	01 97       	sbiw	r24, 0x01	; 1
    2f24:	f1 f7       	brne	.-4      	; 0x2f22 <SevSeg2x1_VidCountDown+0x20c>
    2f26:	9a 83       	std	Y+2, r25	; 0x02
    2f28:	89 83       	std	Y+1, r24	; 0x01
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
	{
		LOC_LeftDigit = LOC_Count /10;
		LOC_RightDigit = LOC_Count % 10;

		for (u8 LOC_Refresh=0; LOC_Refresh<_7seg2x1_Refresh; LOC_Refresh++)
    2f2a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f2c:	8f 5f       	subi	r24, 0xFF	; 255
    2f2e:	8d 8f       	std	Y+29, r24	; 0x1d
    2f30:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2f32:	8a 30       	cpi	r24, 0x0A	; 10
    2f34:	08 f4       	brcc	.+2      	; 0x2f38 <SevSeg2x1_VidCountDown+0x222>
    2f36:	0f cf       	rjmp	.-482    	; 0x2d56 <SevSeg2x1_VidCountDown+0x40>

void SevSeg2x1_VidCountDown(u8 LOC_u8Start, u8 LOC_u8End)
{
	u8 LOC_LeftDigit = 0;
	u8 LOC_RightDigit = 0;
	for (s8 LOC_Count=LOC_u8Start; LOC_Count>=(LOC_u8End); LOC_Count--)
    2f38:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f3a:	81 50       	subi	r24, 0x01	; 1
    2f3c:	8e 8f       	std	Y+30, r24	; 0x1e
    2f3e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f40:	28 2f       	mov	r18, r24
    2f42:	33 27       	eor	r19, r19
    2f44:	27 fd       	sbrc	r18, 7
    2f46:	30 95       	com	r19
    2f48:	8a a1       	ldd	r24, Y+34	; 0x22
    2f4a:	88 2f       	mov	r24, r24
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	28 17       	cp	r18, r24
    2f50:	39 07       	cpc	r19, r25
    2f52:	0c f0       	brlt	.+2      	; 0x2f56 <SevSeg2x1_VidCountDown+0x240>
    2f54:	f1 ce       	rjmp	.-542    	; 0x2d38 <SevSeg2x1_VidCountDown+0x22>
			_delay_ms(10);
			SevSeg2x1_VidDisplayLeftDigit(LOC_LeftDigit);
			_delay_ms(10);
		}
	}
}
    2f56:	a2 96       	adiw	r28, 0x22	; 34
    2f58:	0f b6       	in	r0, 0x3f	; 63
    2f5a:	f8 94       	cli
    2f5c:	de bf       	out	0x3e, r29	; 62
    2f5e:	0f be       	out	0x3f, r0	; 63
    2f60:	cd bf       	out	0x3d, r28	; 61
    2f62:	cf 91       	pop	r28
    2f64:	df 91       	pop	r29
    2f66:	08 95       	ret

00002f68 <SevSeg2x1_VidLoading>:

void SevSeg2x1_VidLoading(u16 LOC_u8Speed)
{
    2f68:	0f 93       	push	r16
    2f6a:	1f 93       	push	r17
    2f6c:	df 93       	push	r29
    2f6e:	cf 93       	push	r28
    2f70:	cd b7       	in	r28, 0x3d	; 61
    2f72:	de b7       	in	r29, 0x3e	; 62
    2f74:	c2 57       	subi	r28, 0x72	; 114
    2f76:	d0 40       	sbci	r29, 0x00	; 0
    2f78:	0f b6       	in	r0, 0x3f	; 63
    2f7a:	f8 94       	cli
    2f7c:	de bf       	out	0x3e, r29	; 62
    2f7e:	0f be       	out	0x3f, r0	; 63
    2f80:	cd bf       	out	0x3d, r28	; 61
    2f82:	fe 01       	movw	r30, r28
    2f84:	ef 58       	subi	r30, 0x8F	; 143
    2f86:	ff 4f       	sbci	r31, 0xFF	; 255
    2f88:	91 83       	std	Z+1, r25	; 0x01
    2f8a:	80 83       	st	Z, r24
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Enable); //enable Right Seven Segment
    2f8c:	81 e0       	ldi	r24, 0x01	; 1
    2f8e:	60 e0       	ldi	r22, 0x00	; 0
    2f90:	41 e0       	ldi	r20, 0x01	; 1
    2f92:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadA);
    2f96:	82 e0       	ldi	r24, 0x02	; 2
    2f98:	6e ef       	ldi	r22, 0xFE	; 254
    2f9a:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    2f9e:	fe 01       	movw	r30, r28
    2fa0:	ef 58       	subi	r30, 0x8F	; 143
    2fa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa4:	80 81       	ld	r24, Z
    2fa6:	91 81       	ldd	r25, Z+1	; 0x01
    2fa8:	cc 01       	movw	r24, r24
    2faa:	a0 e0       	ldi	r26, 0x00	; 0
    2fac:	b0 e0       	ldi	r27, 0x00	; 0
    2fae:	bc 01       	movw	r22, r24
    2fb0:	cd 01       	movw	r24, r26
    2fb2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    2fb6:	dc 01       	movw	r26, r24
    2fb8:	cb 01       	movw	r24, r22
    2fba:	fe 01       	movw	r30, r28
    2fbc:	e3 59       	subi	r30, 0x93	; 147
    2fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc0:	80 83       	st	Z, r24
    2fc2:	91 83       	std	Z+1, r25	; 0x01
    2fc4:	a2 83       	std	Z+2, r26	; 0x02
    2fc6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fc8:	8e 01       	movw	r16, r28
    2fca:	07 59       	subi	r16, 0x97	; 151
    2fcc:	1f 4f       	sbci	r17, 0xFF	; 255
    2fce:	fe 01       	movw	r30, r28
    2fd0:	e3 59       	subi	r30, 0x93	; 147
    2fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd4:	60 81       	ld	r22, Z
    2fd6:	71 81       	ldd	r23, Z+1	; 0x01
    2fd8:	82 81       	ldd	r24, Z+2	; 0x02
    2fda:	93 81       	ldd	r25, Z+3	; 0x03
    2fdc:	20 e0       	ldi	r18, 0x00	; 0
    2fde:	30 e0       	ldi	r19, 0x00	; 0
    2fe0:	4a ef       	ldi	r20, 0xFA	; 250
    2fe2:	54 e4       	ldi	r21, 0x44	; 68
    2fe4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fe8:	dc 01       	movw	r26, r24
    2fea:	cb 01       	movw	r24, r22
    2fec:	f8 01       	movw	r30, r16
    2fee:	80 83       	st	Z, r24
    2ff0:	91 83       	std	Z+1, r25	; 0x01
    2ff2:	a2 83       	std	Z+2, r26	; 0x02
    2ff4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2ff6:	fe 01       	movw	r30, r28
    2ff8:	e7 59       	subi	r30, 0x97	; 151
    2ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    2ffc:	60 81       	ld	r22, Z
    2ffe:	71 81       	ldd	r23, Z+1	; 0x01
    3000:	82 81       	ldd	r24, Z+2	; 0x02
    3002:	93 81       	ldd	r25, Z+3	; 0x03
    3004:	20 e0       	ldi	r18, 0x00	; 0
    3006:	30 e0       	ldi	r19, 0x00	; 0
    3008:	40 e8       	ldi	r20, 0x80	; 128
    300a:	5f e3       	ldi	r21, 0x3F	; 63
    300c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3010:	88 23       	and	r24, r24
    3012:	44 f4       	brge	.+16     	; 0x3024 <SevSeg2x1_VidLoading+0xbc>
		__ticks = 1;
    3014:	fe 01       	movw	r30, r28
    3016:	e9 59       	subi	r30, 0x99	; 153
    3018:	ff 4f       	sbci	r31, 0xFF	; 255
    301a:	81 e0       	ldi	r24, 0x01	; 1
    301c:	90 e0       	ldi	r25, 0x00	; 0
    301e:	91 83       	std	Z+1, r25	; 0x01
    3020:	80 83       	st	Z, r24
    3022:	64 c0       	rjmp	.+200    	; 0x30ec <SevSeg2x1_VidLoading+0x184>
	else if (__tmp > 65535)
    3024:	fe 01       	movw	r30, r28
    3026:	e7 59       	subi	r30, 0x97	; 151
    3028:	ff 4f       	sbci	r31, 0xFF	; 255
    302a:	60 81       	ld	r22, Z
    302c:	71 81       	ldd	r23, Z+1	; 0x01
    302e:	82 81       	ldd	r24, Z+2	; 0x02
    3030:	93 81       	ldd	r25, Z+3	; 0x03
    3032:	20 e0       	ldi	r18, 0x00	; 0
    3034:	3f ef       	ldi	r19, 0xFF	; 255
    3036:	4f e7       	ldi	r20, 0x7F	; 127
    3038:	57 e4       	ldi	r21, 0x47	; 71
    303a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    303e:	18 16       	cp	r1, r24
    3040:	0c f0       	brlt	.+2      	; 0x3044 <SevSeg2x1_VidLoading+0xdc>
    3042:	43 c0       	rjmp	.+134    	; 0x30ca <SevSeg2x1_VidLoading+0x162>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3044:	fe 01       	movw	r30, r28
    3046:	e3 59       	subi	r30, 0x93	; 147
    3048:	ff 4f       	sbci	r31, 0xFF	; 255
    304a:	60 81       	ld	r22, Z
    304c:	71 81       	ldd	r23, Z+1	; 0x01
    304e:	82 81       	ldd	r24, Z+2	; 0x02
    3050:	93 81       	ldd	r25, Z+3	; 0x03
    3052:	20 e0       	ldi	r18, 0x00	; 0
    3054:	30 e0       	ldi	r19, 0x00	; 0
    3056:	40 e2       	ldi	r20, 0x20	; 32
    3058:	51 e4       	ldi	r21, 0x41	; 65
    305a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    305e:	dc 01       	movw	r26, r24
    3060:	cb 01       	movw	r24, r22
    3062:	8e 01       	movw	r16, r28
    3064:	09 59       	subi	r16, 0x99	; 153
    3066:	1f 4f       	sbci	r17, 0xFF	; 255
    3068:	bc 01       	movw	r22, r24
    306a:	cd 01       	movw	r24, r26
    306c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3070:	dc 01       	movw	r26, r24
    3072:	cb 01       	movw	r24, r22
    3074:	f8 01       	movw	r30, r16
    3076:	91 83       	std	Z+1, r25	; 0x01
    3078:	80 83       	st	Z, r24
    307a:	1f c0       	rjmp	.+62     	; 0x30ba <SevSeg2x1_VidLoading+0x152>
    307c:	fe 01       	movw	r30, r28
    307e:	eb 59       	subi	r30, 0x9B	; 155
    3080:	ff 4f       	sbci	r31, 0xFF	; 255
    3082:	88 ec       	ldi	r24, 0xC8	; 200
    3084:	90 e0       	ldi	r25, 0x00	; 0
    3086:	91 83       	std	Z+1, r25	; 0x01
    3088:	80 83       	st	Z, r24
    308a:	fe 01       	movw	r30, r28
    308c:	eb 59       	subi	r30, 0x9B	; 155
    308e:	ff 4f       	sbci	r31, 0xFF	; 255
    3090:	80 81       	ld	r24, Z
    3092:	91 81       	ldd	r25, Z+1	; 0x01
    3094:	01 97       	sbiw	r24, 0x01	; 1
    3096:	f1 f7       	brne	.-4      	; 0x3094 <SevSeg2x1_VidLoading+0x12c>
    3098:	fe 01       	movw	r30, r28
    309a:	eb 59       	subi	r30, 0x9B	; 155
    309c:	ff 4f       	sbci	r31, 0xFF	; 255
    309e:	91 83       	std	Z+1, r25	; 0x01
    30a0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    30a2:	de 01       	movw	r26, r28
    30a4:	a9 59       	subi	r26, 0x99	; 153
    30a6:	bf 4f       	sbci	r27, 0xFF	; 255
    30a8:	fe 01       	movw	r30, r28
    30aa:	e9 59       	subi	r30, 0x99	; 153
    30ac:	ff 4f       	sbci	r31, 0xFF	; 255
    30ae:	80 81       	ld	r24, Z
    30b0:	91 81       	ldd	r25, Z+1	; 0x01
    30b2:	01 97       	sbiw	r24, 0x01	; 1
    30b4:	11 96       	adiw	r26, 0x01	; 1
    30b6:	9c 93       	st	X, r25
    30b8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30ba:	fe 01       	movw	r30, r28
    30bc:	e9 59       	subi	r30, 0x99	; 153
    30be:	ff 4f       	sbci	r31, 0xFF	; 255
    30c0:	80 81       	ld	r24, Z
    30c2:	91 81       	ldd	r25, Z+1	; 0x01
    30c4:	00 97       	sbiw	r24, 0x00	; 0
    30c6:	d1 f6       	brne	.-76     	; 0x307c <SevSeg2x1_VidLoading+0x114>
    30c8:	27 c0       	rjmp	.+78     	; 0x3118 <SevSeg2x1_VidLoading+0x1b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30ca:	8e 01       	movw	r16, r28
    30cc:	09 59       	subi	r16, 0x99	; 153
    30ce:	1f 4f       	sbci	r17, 0xFF	; 255
    30d0:	fe 01       	movw	r30, r28
    30d2:	e7 59       	subi	r30, 0x97	; 151
    30d4:	ff 4f       	sbci	r31, 0xFF	; 255
    30d6:	60 81       	ld	r22, Z
    30d8:	71 81       	ldd	r23, Z+1	; 0x01
    30da:	82 81       	ldd	r24, Z+2	; 0x02
    30dc:	93 81       	ldd	r25, Z+3	; 0x03
    30de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30e2:	dc 01       	movw	r26, r24
    30e4:	cb 01       	movw	r24, r22
    30e6:	f8 01       	movw	r30, r16
    30e8:	91 83       	std	Z+1, r25	; 0x01
    30ea:	80 83       	st	Z, r24
    30ec:	de 01       	movw	r26, r28
    30ee:	ad 59       	subi	r26, 0x9D	; 157
    30f0:	bf 4f       	sbci	r27, 0xFF	; 255
    30f2:	fe 01       	movw	r30, r28
    30f4:	e9 59       	subi	r30, 0x99	; 153
    30f6:	ff 4f       	sbci	r31, 0xFF	; 255
    30f8:	80 81       	ld	r24, Z
    30fa:	91 81       	ldd	r25, Z+1	; 0x01
    30fc:	8d 93       	st	X+, r24
    30fe:	9c 93       	st	X, r25
    3100:	fe 01       	movw	r30, r28
    3102:	ed 59       	subi	r30, 0x9D	; 157
    3104:	ff 4f       	sbci	r31, 0xFF	; 255
    3106:	80 81       	ld	r24, Z
    3108:	91 81       	ldd	r25, Z+1	; 0x01
    310a:	01 97       	sbiw	r24, 0x01	; 1
    310c:	f1 f7       	brne	.-4      	; 0x310a <SevSeg2x1_VidLoading+0x1a2>
    310e:	fe 01       	movw	r30, r28
    3110:	ed 59       	subi	r30, 0x9D	; 157
    3112:	ff 4f       	sbci	r31, 0xFF	; 255
    3114:	91 83       	std	Z+1, r25	; 0x01
    3116:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadB);
    3118:	82 e0       	ldi	r24, 0x02	; 2
    311a:	6d ef       	ldi	r22, 0xFD	; 253
    311c:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    3120:	fe 01       	movw	r30, r28
    3122:	ef 58       	subi	r30, 0x8F	; 143
    3124:	ff 4f       	sbci	r31, 0xFF	; 255
    3126:	80 81       	ld	r24, Z
    3128:	91 81       	ldd	r25, Z+1	; 0x01
    312a:	cc 01       	movw	r24, r24
    312c:	a0 e0       	ldi	r26, 0x00	; 0
    312e:	b0 e0       	ldi	r27, 0x00	; 0
    3130:	bc 01       	movw	r22, r24
    3132:	cd 01       	movw	r24, r26
    3134:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3138:	dc 01       	movw	r26, r24
    313a:	cb 01       	movw	r24, r22
    313c:	fe 01       	movw	r30, r28
    313e:	e1 5a       	subi	r30, 0xA1	; 161
    3140:	ff 4f       	sbci	r31, 0xFF	; 255
    3142:	80 83       	st	Z, r24
    3144:	91 83       	std	Z+1, r25	; 0x01
    3146:	a2 83       	std	Z+2, r26	; 0x02
    3148:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    314a:	8e 01       	movw	r16, r28
    314c:	05 5a       	subi	r16, 0xA5	; 165
    314e:	1f 4f       	sbci	r17, 0xFF	; 255
    3150:	fe 01       	movw	r30, r28
    3152:	e1 5a       	subi	r30, 0xA1	; 161
    3154:	ff 4f       	sbci	r31, 0xFF	; 255
    3156:	60 81       	ld	r22, Z
    3158:	71 81       	ldd	r23, Z+1	; 0x01
    315a:	82 81       	ldd	r24, Z+2	; 0x02
    315c:	93 81       	ldd	r25, Z+3	; 0x03
    315e:	20 e0       	ldi	r18, 0x00	; 0
    3160:	30 e0       	ldi	r19, 0x00	; 0
    3162:	4a ef       	ldi	r20, 0xFA	; 250
    3164:	54 e4       	ldi	r21, 0x44	; 68
    3166:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    316a:	dc 01       	movw	r26, r24
    316c:	cb 01       	movw	r24, r22
    316e:	f8 01       	movw	r30, r16
    3170:	80 83       	st	Z, r24
    3172:	91 83       	std	Z+1, r25	; 0x01
    3174:	a2 83       	std	Z+2, r26	; 0x02
    3176:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3178:	fe 01       	movw	r30, r28
    317a:	e5 5a       	subi	r30, 0xA5	; 165
    317c:	ff 4f       	sbci	r31, 0xFF	; 255
    317e:	60 81       	ld	r22, Z
    3180:	71 81       	ldd	r23, Z+1	; 0x01
    3182:	82 81       	ldd	r24, Z+2	; 0x02
    3184:	93 81       	ldd	r25, Z+3	; 0x03
    3186:	20 e0       	ldi	r18, 0x00	; 0
    3188:	30 e0       	ldi	r19, 0x00	; 0
    318a:	40 e8       	ldi	r20, 0x80	; 128
    318c:	5f e3       	ldi	r21, 0x3F	; 63
    318e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3192:	88 23       	and	r24, r24
    3194:	44 f4       	brge	.+16     	; 0x31a6 <SevSeg2x1_VidLoading+0x23e>
		__ticks = 1;
    3196:	fe 01       	movw	r30, r28
    3198:	e7 5a       	subi	r30, 0xA7	; 167
    319a:	ff 4f       	sbci	r31, 0xFF	; 255
    319c:	81 e0       	ldi	r24, 0x01	; 1
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	91 83       	std	Z+1, r25	; 0x01
    31a2:	80 83       	st	Z, r24
    31a4:	64 c0       	rjmp	.+200    	; 0x326e <SevSeg2x1_VidLoading+0x306>
	else if (__tmp > 65535)
    31a6:	fe 01       	movw	r30, r28
    31a8:	e5 5a       	subi	r30, 0xA5	; 165
    31aa:	ff 4f       	sbci	r31, 0xFF	; 255
    31ac:	60 81       	ld	r22, Z
    31ae:	71 81       	ldd	r23, Z+1	; 0x01
    31b0:	82 81       	ldd	r24, Z+2	; 0x02
    31b2:	93 81       	ldd	r25, Z+3	; 0x03
    31b4:	20 e0       	ldi	r18, 0x00	; 0
    31b6:	3f ef       	ldi	r19, 0xFF	; 255
    31b8:	4f e7       	ldi	r20, 0x7F	; 127
    31ba:	57 e4       	ldi	r21, 0x47	; 71
    31bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    31c0:	18 16       	cp	r1, r24
    31c2:	0c f0       	brlt	.+2      	; 0x31c6 <SevSeg2x1_VidLoading+0x25e>
    31c4:	43 c0       	rjmp	.+134    	; 0x324c <SevSeg2x1_VidLoading+0x2e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    31c6:	fe 01       	movw	r30, r28
    31c8:	e1 5a       	subi	r30, 0xA1	; 161
    31ca:	ff 4f       	sbci	r31, 0xFF	; 255
    31cc:	60 81       	ld	r22, Z
    31ce:	71 81       	ldd	r23, Z+1	; 0x01
    31d0:	82 81       	ldd	r24, Z+2	; 0x02
    31d2:	93 81       	ldd	r25, Z+3	; 0x03
    31d4:	20 e0       	ldi	r18, 0x00	; 0
    31d6:	30 e0       	ldi	r19, 0x00	; 0
    31d8:	40 e2       	ldi	r20, 0x20	; 32
    31da:	51 e4       	ldi	r21, 0x41	; 65
    31dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    31e0:	dc 01       	movw	r26, r24
    31e2:	cb 01       	movw	r24, r22
    31e4:	8e 01       	movw	r16, r28
    31e6:	07 5a       	subi	r16, 0xA7	; 167
    31e8:	1f 4f       	sbci	r17, 0xFF	; 255
    31ea:	bc 01       	movw	r22, r24
    31ec:	cd 01       	movw	r24, r26
    31ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f2:	dc 01       	movw	r26, r24
    31f4:	cb 01       	movw	r24, r22
    31f6:	f8 01       	movw	r30, r16
    31f8:	91 83       	std	Z+1, r25	; 0x01
    31fa:	80 83       	st	Z, r24
    31fc:	1f c0       	rjmp	.+62     	; 0x323c <SevSeg2x1_VidLoading+0x2d4>
    31fe:	fe 01       	movw	r30, r28
    3200:	e9 5a       	subi	r30, 0xA9	; 169
    3202:	ff 4f       	sbci	r31, 0xFF	; 255
    3204:	88 ec       	ldi	r24, 0xC8	; 200
    3206:	90 e0       	ldi	r25, 0x00	; 0
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	80 83       	st	Z, r24
    320c:	fe 01       	movw	r30, r28
    320e:	e9 5a       	subi	r30, 0xA9	; 169
    3210:	ff 4f       	sbci	r31, 0xFF	; 255
    3212:	80 81       	ld	r24, Z
    3214:	91 81       	ldd	r25, Z+1	; 0x01
    3216:	01 97       	sbiw	r24, 0x01	; 1
    3218:	f1 f7       	brne	.-4      	; 0x3216 <SevSeg2x1_VidLoading+0x2ae>
    321a:	fe 01       	movw	r30, r28
    321c:	e9 5a       	subi	r30, 0xA9	; 169
    321e:	ff 4f       	sbci	r31, 0xFF	; 255
    3220:	91 83       	std	Z+1, r25	; 0x01
    3222:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3224:	de 01       	movw	r26, r28
    3226:	a7 5a       	subi	r26, 0xA7	; 167
    3228:	bf 4f       	sbci	r27, 0xFF	; 255
    322a:	fe 01       	movw	r30, r28
    322c:	e7 5a       	subi	r30, 0xA7	; 167
    322e:	ff 4f       	sbci	r31, 0xFF	; 255
    3230:	80 81       	ld	r24, Z
    3232:	91 81       	ldd	r25, Z+1	; 0x01
    3234:	01 97       	sbiw	r24, 0x01	; 1
    3236:	11 96       	adiw	r26, 0x01	; 1
    3238:	9c 93       	st	X, r25
    323a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    323c:	fe 01       	movw	r30, r28
    323e:	e7 5a       	subi	r30, 0xA7	; 167
    3240:	ff 4f       	sbci	r31, 0xFF	; 255
    3242:	80 81       	ld	r24, Z
    3244:	91 81       	ldd	r25, Z+1	; 0x01
    3246:	00 97       	sbiw	r24, 0x00	; 0
    3248:	d1 f6       	brne	.-76     	; 0x31fe <SevSeg2x1_VidLoading+0x296>
    324a:	27 c0       	rjmp	.+78     	; 0x329a <SevSeg2x1_VidLoading+0x332>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    324c:	8e 01       	movw	r16, r28
    324e:	07 5a       	subi	r16, 0xA7	; 167
    3250:	1f 4f       	sbci	r17, 0xFF	; 255
    3252:	fe 01       	movw	r30, r28
    3254:	e5 5a       	subi	r30, 0xA5	; 165
    3256:	ff 4f       	sbci	r31, 0xFF	; 255
    3258:	60 81       	ld	r22, Z
    325a:	71 81       	ldd	r23, Z+1	; 0x01
    325c:	82 81       	ldd	r24, Z+2	; 0x02
    325e:	93 81       	ldd	r25, Z+3	; 0x03
    3260:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3264:	dc 01       	movw	r26, r24
    3266:	cb 01       	movw	r24, r22
    3268:	f8 01       	movw	r30, r16
    326a:	91 83       	std	Z+1, r25	; 0x01
    326c:	80 83       	st	Z, r24
    326e:	de 01       	movw	r26, r28
    3270:	ab 5a       	subi	r26, 0xAB	; 171
    3272:	bf 4f       	sbci	r27, 0xFF	; 255
    3274:	fe 01       	movw	r30, r28
    3276:	e7 5a       	subi	r30, 0xA7	; 167
    3278:	ff 4f       	sbci	r31, 0xFF	; 255
    327a:	80 81       	ld	r24, Z
    327c:	91 81       	ldd	r25, Z+1	; 0x01
    327e:	8d 93       	st	X+, r24
    3280:	9c 93       	st	X, r25
    3282:	fe 01       	movw	r30, r28
    3284:	eb 5a       	subi	r30, 0xAB	; 171
    3286:	ff 4f       	sbci	r31, 0xFF	; 255
    3288:	80 81       	ld	r24, Z
    328a:	91 81       	ldd	r25, Z+1	; 0x01
    328c:	01 97       	sbiw	r24, 0x01	; 1
    328e:	f1 f7       	brne	.-4      	; 0x328c <SevSeg2x1_VidLoading+0x324>
    3290:	fe 01       	movw	r30, r28
    3292:	eb 5a       	subi	r30, 0xAB	; 171
    3294:	ff 4f       	sbci	r31, 0xFF	; 255
    3296:	91 83       	std	Z+1, r25	; 0x01
    3298:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadC);
    329a:	82 e0       	ldi	r24, 0x02	; 2
    329c:	6b ef       	ldi	r22, 0xFB	; 251
    329e:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    32a2:	fe 01       	movw	r30, r28
    32a4:	ef 58       	subi	r30, 0x8F	; 143
    32a6:	ff 4f       	sbci	r31, 0xFF	; 255
    32a8:	80 81       	ld	r24, Z
    32aa:	91 81       	ldd	r25, Z+1	; 0x01
    32ac:	cc 01       	movw	r24, r24
    32ae:	a0 e0       	ldi	r26, 0x00	; 0
    32b0:	b0 e0       	ldi	r27, 0x00	; 0
    32b2:	bc 01       	movw	r22, r24
    32b4:	cd 01       	movw	r24, r26
    32b6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    32ba:	dc 01       	movw	r26, r24
    32bc:	cb 01       	movw	r24, r22
    32be:	fe 01       	movw	r30, r28
    32c0:	ef 5a       	subi	r30, 0xAF	; 175
    32c2:	ff 4f       	sbci	r31, 0xFF	; 255
    32c4:	80 83       	st	Z, r24
    32c6:	91 83       	std	Z+1, r25	; 0x01
    32c8:	a2 83       	std	Z+2, r26	; 0x02
    32ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    32cc:	8e 01       	movw	r16, r28
    32ce:	03 5b       	subi	r16, 0xB3	; 179
    32d0:	1f 4f       	sbci	r17, 0xFF	; 255
    32d2:	fe 01       	movw	r30, r28
    32d4:	ef 5a       	subi	r30, 0xAF	; 175
    32d6:	ff 4f       	sbci	r31, 0xFF	; 255
    32d8:	60 81       	ld	r22, Z
    32da:	71 81       	ldd	r23, Z+1	; 0x01
    32dc:	82 81       	ldd	r24, Z+2	; 0x02
    32de:	93 81       	ldd	r25, Z+3	; 0x03
    32e0:	20 e0       	ldi	r18, 0x00	; 0
    32e2:	30 e0       	ldi	r19, 0x00	; 0
    32e4:	4a ef       	ldi	r20, 0xFA	; 250
    32e6:	54 e4       	ldi	r21, 0x44	; 68
    32e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32ec:	dc 01       	movw	r26, r24
    32ee:	cb 01       	movw	r24, r22
    32f0:	f8 01       	movw	r30, r16
    32f2:	80 83       	st	Z, r24
    32f4:	91 83       	std	Z+1, r25	; 0x01
    32f6:	a2 83       	std	Z+2, r26	; 0x02
    32f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32fa:	fe 01       	movw	r30, r28
    32fc:	e3 5b       	subi	r30, 0xB3	; 179
    32fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3300:	60 81       	ld	r22, Z
    3302:	71 81       	ldd	r23, Z+1	; 0x01
    3304:	82 81       	ldd	r24, Z+2	; 0x02
    3306:	93 81       	ldd	r25, Z+3	; 0x03
    3308:	20 e0       	ldi	r18, 0x00	; 0
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	40 e8       	ldi	r20, 0x80	; 128
    330e:	5f e3       	ldi	r21, 0x3F	; 63
    3310:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3314:	88 23       	and	r24, r24
    3316:	44 f4       	brge	.+16     	; 0x3328 <SevSeg2x1_VidLoading+0x3c0>
		__ticks = 1;
    3318:	fe 01       	movw	r30, r28
    331a:	e5 5b       	subi	r30, 0xB5	; 181
    331c:	ff 4f       	sbci	r31, 0xFF	; 255
    331e:	81 e0       	ldi	r24, 0x01	; 1
    3320:	90 e0       	ldi	r25, 0x00	; 0
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	64 c0       	rjmp	.+200    	; 0x33f0 <SevSeg2x1_VidLoading+0x488>
	else if (__tmp > 65535)
    3328:	fe 01       	movw	r30, r28
    332a:	e3 5b       	subi	r30, 0xB3	; 179
    332c:	ff 4f       	sbci	r31, 0xFF	; 255
    332e:	60 81       	ld	r22, Z
    3330:	71 81       	ldd	r23, Z+1	; 0x01
    3332:	82 81       	ldd	r24, Z+2	; 0x02
    3334:	93 81       	ldd	r25, Z+3	; 0x03
    3336:	20 e0       	ldi	r18, 0x00	; 0
    3338:	3f ef       	ldi	r19, 0xFF	; 255
    333a:	4f e7       	ldi	r20, 0x7F	; 127
    333c:	57 e4       	ldi	r21, 0x47	; 71
    333e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3342:	18 16       	cp	r1, r24
    3344:	0c f0       	brlt	.+2      	; 0x3348 <SevSeg2x1_VidLoading+0x3e0>
    3346:	43 c0       	rjmp	.+134    	; 0x33ce <SevSeg2x1_VidLoading+0x466>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3348:	fe 01       	movw	r30, r28
    334a:	ef 5a       	subi	r30, 0xAF	; 175
    334c:	ff 4f       	sbci	r31, 0xFF	; 255
    334e:	60 81       	ld	r22, Z
    3350:	71 81       	ldd	r23, Z+1	; 0x01
    3352:	82 81       	ldd	r24, Z+2	; 0x02
    3354:	93 81       	ldd	r25, Z+3	; 0x03
    3356:	20 e0       	ldi	r18, 0x00	; 0
    3358:	30 e0       	ldi	r19, 0x00	; 0
    335a:	40 e2       	ldi	r20, 0x20	; 32
    335c:	51 e4       	ldi	r21, 0x41	; 65
    335e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3362:	dc 01       	movw	r26, r24
    3364:	cb 01       	movw	r24, r22
    3366:	8e 01       	movw	r16, r28
    3368:	05 5b       	subi	r16, 0xB5	; 181
    336a:	1f 4f       	sbci	r17, 0xFF	; 255
    336c:	bc 01       	movw	r22, r24
    336e:	cd 01       	movw	r24, r26
    3370:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3374:	dc 01       	movw	r26, r24
    3376:	cb 01       	movw	r24, r22
    3378:	f8 01       	movw	r30, r16
    337a:	91 83       	std	Z+1, r25	; 0x01
    337c:	80 83       	st	Z, r24
    337e:	1f c0       	rjmp	.+62     	; 0x33be <SevSeg2x1_VidLoading+0x456>
    3380:	fe 01       	movw	r30, r28
    3382:	e7 5b       	subi	r30, 0xB7	; 183
    3384:	ff 4f       	sbci	r31, 0xFF	; 255
    3386:	88 ec       	ldi	r24, 0xC8	; 200
    3388:	90 e0       	ldi	r25, 0x00	; 0
    338a:	91 83       	std	Z+1, r25	; 0x01
    338c:	80 83       	st	Z, r24
    338e:	fe 01       	movw	r30, r28
    3390:	e7 5b       	subi	r30, 0xB7	; 183
    3392:	ff 4f       	sbci	r31, 0xFF	; 255
    3394:	80 81       	ld	r24, Z
    3396:	91 81       	ldd	r25, Z+1	; 0x01
    3398:	01 97       	sbiw	r24, 0x01	; 1
    339a:	f1 f7       	brne	.-4      	; 0x3398 <SevSeg2x1_VidLoading+0x430>
    339c:	fe 01       	movw	r30, r28
    339e:	e7 5b       	subi	r30, 0xB7	; 183
    33a0:	ff 4f       	sbci	r31, 0xFF	; 255
    33a2:	91 83       	std	Z+1, r25	; 0x01
    33a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33a6:	de 01       	movw	r26, r28
    33a8:	a5 5b       	subi	r26, 0xB5	; 181
    33aa:	bf 4f       	sbci	r27, 0xFF	; 255
    33ac:	fe 01       	movw	r30, r28
    33ae:	e5 5b       	subi	r30, 0xB5	; 181
    33b0:	ff 4f       	sbci	r31, 0xFF	; 255
    33b2:	80 81       	ld	r24, Z
    33b4:	91 81       	ldd	r25, Z+1	; 0x01
    33b6:	01 97       	sbiw	r24, 0x01	; 1
    33b8:	11 96       	adiw	r26, 0x01	; 1
    33ba:	9c 93       	st	X, r25
    33bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33be:	fe 01       	movw	r30, r28
    33c0:	e5 5b       	subi	r30, 0xB5	; 181
    33c2:	ff 4f       	sbci	r31, 0xFF	; 255
    33c4:	80 81       	ld	r24, Z
    33c6:	91 81       	ldd	r25, Z+1	; 0x01
    33c8:	00 97       	sbiw	r24, 0x00	; 0
    33ca:	d1 f6       	brne	.-76     	; 0x3380 <SevSeg2x1_VidLoading+0x418>
    33cc:	27 c0       	rjmp	.+78     	; 0x341c <SevSeg2x1_VidLoading+0x4b4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    33ce:	8e 01       	movw	r16, r28
    33d0:	05 5b       	subi	r16, 0xB5	; 181
    33d2:	1f 4f       	sbci	r17, 0xFF	; 255
    33d4:	fe 01       	movw	r30, r28
    33d6:	e3 5b       	subi	r30, 0xB3	; 179
    33d8:	ff 4f       	sbci	r31, 0xFF	; 255
    33da:	60 81       	ld	r22, Z
    33dc:	71 81       	ldd	r23, Z+1	; 0x01
    33de:	82 81       	ldd	r24, Z+2	; 0x02
    33e0:	93 81       	ldd	r25, Z+3	; 0x03
    33e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33e6:	dc 01       	movw	r26, r24
    33e8:	cb 01       	movw	r24, r22
    33ea:	f8 01       	movw	r30, r16
    33ec:	91 83       	std	Z+1, r25	; 0x01
    33ee:	80 83       	st	Z, r24
    33f0:	de 01       	movw	r26, r28
    33f2:	a9 5b       	subi	r26, 0xB9	; 185
    33f4:	bf 4f       	sbci	r27, 0xFF	; 255
    33f6:	fe 01       	movw	r30, r28
    33f8:	e5 5b       	subi	r30, 0xB5	; 181
    33fa:	ff 4f       	sbci	r31, 0xFF	; 255
    33fc:	80 81       	ld	r24, Z
    33fe:	91 81       	ldd	r25, Z+1	; 0x01
    3400:	8d 93       	st	X+, r24
    3402:	9c 93       	st	X, r25
    3404:	fe 01       	movw	r30, r28
    3406:	e9 5b       	subi	r30, 0xB9	; 185
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	80 81       	ld	r24, Z
    340c:	91 81       	ldd	r25, Z+1	; 0x01
    340e:	01 97       	sbiw	r24, 0x01	; 1
    3410:	f1 f7       	brne	.-4      	; 0x340e <SevSeg2x1_VidLoading+0x4a6>
    3412:	fe 01       	movw	r30, r28
    3414:	e9 5b       	subi	r30, 0xB9	; 185
    3416:	ff 4f       	sbci	r31, 0xFF	; 255
    3418:	91 83       	std	Z+1, r25	; 0x01
    341a:	80 83       	st	Z, r24
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadD);
    341c:	82 e0       	ldi	r24, 0x02	; 2
    341e:	67 ef       	ldi	r22, 0xF7	; 247
    3420:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    3424:	fe 01       	movw	r30, r28
    3426:	ef 58       	subi	r30, 0x8F	; 143
    3428:	ff 4f       	sbci	r31, 0xFF	; 255
    342a:	80 81       	ld	r24, Z
    342c:	91 81       	ldd	r25, Z+1	; 0x01
    342e:	cc 01       	movw	r24, r24
    3430:	a0 e0       	ldi	r26, 0x00	; 0
    3432:	b0 e0       	ldi	r27, 0x00	; 0
    3434:	bc 01       	movw	r22, r24
    3436:	cd 01       	movw	r24, r26
    3438:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    343c:	dc 01       	movw	r26, r24
    343e:	cb 01       	movw	r24, r22
    3440:	fe 01       	movw	r30, r28
    3442:	ed 5b       	subi	r30, 0xBD	; 189
    3444:	ff 4f       	sbci	r31, 0xFF	; 255
    3446:	80 83       	st	Z, r24
    3448:	91 83       	std	Z+1, r25	; 0x01
    344a:	a2 83       	std	Z+2, r26	; 0x02
    344c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    344e:	8e 01       	movw	r16, r28
    3450:	01 5c       	subi	r16, 0xC1	; 193
    3452:	1f 4f       	sbci	r17, 0xFF	; 255
    3454:	fe 01       	movw	r30, r28
    3456:	ed 5b       	subi	r30, 0xBD	; 189
    3458:	ff 4f       	sbci	r31, 0xFF	; 255
    345a:	60 81       	ld	r22, Z
    345c:	71 81       	ldd	r23, Z+1	; 0x01
    345e:	82 81       	ldd	r24, Z+2	; 0x02
    3460:	93 81       	ldd	r25, Z+3	; 0x03
    3462:	20 e0       	ldi	r18, 0x00	; 0
    3464:	30 e0       	ldi	r19, 0x00	; 0
    3466:	4a ef       	ldi	r20, 0xFA	; 250
    3468:	54 e4       	ldi	r21, 0x44	; 68
    346a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    346e:	dc 01       	movw	r26, r24
    3470:	cb 01       	movw	r24, r22
    3472:	f8 01       	movw	r30, r16
    3474:	80 83       	st	Z, r24
    3476:	91 83       	std	Z+1, r25	; 0x01
    3478:	a2 83       	std	Z+2, r26	; 0x02
    347a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    347c:	fe 01       	movw	r30, r28
    347e:	ff 96       	adiw	r30, 0x3f	; 63
    3480:	60 81       	ld	r22, Z
    3482:	71 81       	ldd	r23, Z+1	; 0x01
    3484:	82 81       	ldd	r24, Z+2	; 0x02
    3486:	93 81       	ldd	r25, Z+3	; 0x03
    3488:	20 e0       	ldi	r18, 0x00	; 0
    348a:	30 e0       	ldi	r19, 0x00	; 0
    348c:	40 e8       	ldi	r20, 0x80	; 128
    348e:	5f e3       	ldi	r21, 0x3F	; 63
    3490:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3494:	88 23       	and	r24, r24
    3496:	2c f4       	brge	.+10     	; 0x34a2 <SevSeg2x1_VidLoading+0x53a>
		__ticks = 1;
    3498:	81 e0       	ldi	r24, 0x01	; 1
    349a:	90 e0       	ldi	r25, 0x00	; 0
    349c:	9e af       	std	Y+62, r25	; 0x3e
    349e:	8d af       	std	Y+61, r24	; 0x3d
    34a0:	46 c0       	rjmp	.+140    	; 0x352e <SevSeg2x1_VidLoading+0x5c6>
	else if (__tmp > 65535)
    34a2:	fe 01       	movw	r30, r28
    34a4:	ff 96       	adiw	r30, 0x3f	; 63
    34a6:	60 81       	ld	r22, Z
    34a8:	71 81       	ldd	r23, Z+1	; 0x01
    34aa:	82 81       	ldd	r24, Z+2	; 0x02
    34ac:	93 81       	ldd	r25, Z+3	; 0x03
    34ae:	20 e0       	ldi	r18, 0x00	; 0
    34b0:	3f ef       	ldi	r19, 0xFF	; 255
    34b2:	4f e7       	ldi	r20, 0x7F	; 127
    34b4:	57 e4       	ldi	r21, 0x47	; 71
    34b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    34ba:	18 16       	cp	r1, r24
    34bc:	64 f5       	brge	.+88     	; 0x3516 <SevSeg2x1_VidLoading+0x5ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34be:	fe 01       	movw	r30, r28
    34c0:	ed 5b       	subi	r30, 0xBD	; 189
    34c2:	ff 4f       	sbci	r31, 0xFF	; 255
    34c4:	60 81       	ld	r22, Z
    34c6:	71 81       	ldd	r23, Z+1	; 0x01
    34c8:	82 81       	ldd	r24, Z+2	; 0x02
    34ca:	93 81       	ldd	r25, Z+3	; 0x03
    34cc:	20 e0       	ldi	r18, 0x00	; 0
    34ce:	30 e0       	ldi	r19, 0x00	; 0
    34d0:	40 e2       	ldi	r20, 0x20	; 32
    34d2:	51 e4       	ldi	r21, 0x41	; 65
    34d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34d8:	dc 01       	movw	r26, r24
    34da:	cb 01       	movw	r24, r22
    34dc:	bc 01       	movw	r22, r24
    34de:	cd 01       	movw	r24, r26
    34e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34e4:	dc 01       	movw	r26, r24
    34e6:	cb 01       	movw	r24, r22
    34e8:	9e af       	std	Y+62, r25	; 0x3e
    34ea:	8d af       	std	Y+61, r24	; 0x3d
    34ec:	0f c0       	rjmp	.+30     	; 0x350c <SevSeg2x1_VidLoading+0x5a4>
    34ee:	88 ec       	ldi	r24, 0xC8	; 200
    34f0:	90 e0       	ldi	r25, 0x00	; 0
    34f2:	9c af       	std	Y+60, r25	; 0x3c
    34f4:	8b af       	std	Y+59, r24	; 0x3b
    34f6:	8b ad       	ldd	r24, Y+59	; 0x3b
    34f8:	9c ad       	ldd	r25, Y+60	; 0x3c
    34fa:	01 97       	sbiw	r24, 0x01	; 1
    34fc:	f1 f7       	brne	.-4      	; 0x34fa <SevSeg2x1_VidLoading+0x592>
    34fe:	9c af       	std	Y+60, r25	; 0x3c
    3500:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3502:	8d ad       	ldd	r24, Y+61	; 0x3d
    3504:	9e ad       	ldd	r25, Y+62	; 0x3e
    3506:	01 97       	sbiw	r24, 0x01	; 1
    3508:	9e af       	std	Y+62, r25	; 0x3e
    350a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    350c:	8d ad       	ldd	r24, Y+61	; 0x3d
    350e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3510:	00 97       	sbiw	r24, 0x00	; 0
    3512:	69 f7       	brne	.-38     	; 0x34ee <SevSeg2x1_VidLoading+0x586>
    3514:	16 c0       	rjmp	.+44     	; 0x3542 <SevSeg2x1_VidLoading+0x5da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3516:	fe 01       	movw	r30, r28
    3518:	ff 96       	adiw	r30, 0x3f	; 63
    351a:	60 81       	ld	r22, Z
    351c:	71 81       	ldd	r23, Z+1	; 0x01
    351e:	82 81       	ldd	r24, Z+2	; 0x02
    3520:	93 81       	ldd	r25, Z+3	; 0x03
    3522:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3526:	dc 01       	movw	r26, r24
    3528:	cb 01       	movw	r24, r22
    352a:	9e af       	std	Y+62, r25	; 0x3e
    352c:	8d af       	std	Y+61, r24	; 0x3d
    352e:	8d ad       	ldd	r24, Y+61	; 0x3d
    3530:	9e ad       	ldd	r25, Y+62	; 0x3e
    3532:	9a af       	std	Y+58, r25	; 0x3a
    3534:	89 af       	std	Y+57, r24	; 0x39
    3536:	89 ad       	ldd	r24, Y+57	; 0x39
    3538:	9a ad       	ldd	r25, Y+58	; 0x3a
    353a:	01 97       	sbiw	r24, 0x01	; 1
    353c:	f1 f7       	brne	.-4      	; 0x353a <SevSeg2x1_VidLoading+0x5d2>
    353e:	9a af       	std	Y+58, r25	; 0x3a
    3540:	89 af       	std	Y+57, r24	; 0x39
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLRP, Disable); //Disable Right Seven Segment
    3542:	81 e0       	ldi	r24, 0x01	; 1
    3544:	60 e0       	ldi	r22, 0x00	; 0
    3546:	40 e0       	ldi	r20, 0x00	; 0
    3548:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>

	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Enable); //enable Right Seven Segment
    354c:	81 e0       	ldi	r24, 0x01	; 1
    354e:	61 e0       	ldi	r22, 0x01	; 1
    3550:	41 e0       	ldi	r20, 0x01	; 1
    3552:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadD);
    3556:	82 e0       	ldi	r24, 0x02	; 2
    3558:	67 ef       	ldi	r22, 0xF7	; 247
    355a:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    355e:	fe 01       	movw	r30, r28
    3560:	ef 58       	subi	r30, 0x8F	; 143
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	80 81       	ld	r24, Z
    3566:	91 81       	ldd	r25, Z+1	; 0x01
    3568:	cc 01       	movw	r24, r24
    356a:	a0 e0       	ldi	r26, 0x00	; 0
    356c:	b0 e0       	ldi	r27, 0x00	; 0
    356e:	bc 01       	movw	r22, r24
    3570:	cd 01       	movw	r24, r26
    3572:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3576:	dc 01       	movw	r26, r24
    3578:	cb 01       	movw	r24, r22
    357a:	8d ab       	std	Y+53, r24	; 0x35
    357c:	9e ab       	std	Y+54, r25	; 0x36
    357e:	af ab       	std	Y+55, r26	; 0x37
    3580:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3582:	6d a9       	ldd	r22, Y+53	; 0x35
    3584:	7e a9       	ldd	r23, Y+54	; 0x36
    3586:	8f a9       	ldd	r24, Y+55	; 0x37
    3588:	98 ad       	ldd	r25, Y+56	; 0x38
    358a:	20 e0       	ldi	r18, 0x00	; 0
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	4a ef       	ldi	r20, 0xFA	; 250
    3590:	54 e4       	ldi	r21, 0x44	; 68
    3592:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3596:	dc 01       	movw	r26, r24
    3598:	cb 01       	movw	r24, r22
    359a:	89 ab       	std	Y+49, r24	; 0x31
    359c:	9a ab       	std	Y+50, r25	; 0x32
    359e:	ab ab       	std	Y+51, r26	; 0x33
    35a0:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    35a2:	69 a9       	ldd	r22, Y+49	; 0x31
    35a4:	7a a9       	ldd	r23, Y+50	; 0x32
    35a6:	8b a9       	ldd	r24, Y+51	; 0x33
    35a8:	9c a9       	ldd	r25, Y+52	; 0x34
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	40 e8       	ldi	r20, 0x80	; 128
    35b0:	5f e3       	ldi	r21, 0x3F	; 63
    35b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35b6:	88 23       	and	r24, r24
    35b8:	2c f4       	brge	.+10     	; 0x35c4 <SevSeg2x1_VidLoading+0x65c>
		__ticks = 1;
    35ba:	81 e0       	ldi	r24, 0x01	; 1
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	98 ab       	std	Y+48, r25	; 0x30
    35c0:	8f a7       	std	Y+47, r24	; 0x2f
    35c2:	3f c0       	rjmp	.+126    	; 0x3642 <SevSeg2x1_VidLoading+0x6da>
	else if (__tmp > 65535)
    35c4:	69 a9       	ldd	r22, Y+49	; 0x31
    35c6:	7a a9       	ldd	r23, Y+50	; 0x32
    35c8:	8b a9       	ldd	r24, Y+51	; 0x33
    35ca:	9c a9       	ldd	r25, Y+52	; 0x34
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	3f ef       	ldi	r19, 0xFF	; 255
    35d0:	4f e7       	ldi	r20, 0x7F	; 127
    35d2:	57 e4       	ldi	r21, 0x47	; 71
    35d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35d8:	18 16       	cp	r1, r24
    35da:	4c f5       	brge	.+82     	; 0x362e <SevSeg2x1_VidLoading+0x6c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35dc:	6d a9       	ldd	r22, Y+53	; 0x35
    35de:	7e a9       	ldd	r23, Y+54	; 0x36
    35e0:	8f a9       	ldd	r24, Y+55	; 0x37
    35e2:	98 ad       	ldd	r25, Y+56	; 0x38
    35e4:	20 e0       	ldi	r18, 0x00	; 0
    35e6:	30 e0       	ldi	r19, 0x00	; 0
    35e8:	40 e2       	ldi	r20, 0x20	; 32
    35ea:	51 e4       	ldi	r21, 0x41	; 65
    35ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35f0:	dc 01       	movw	r26, r24
    35f2:	cb 01       	movw	r24, r22
    35f4:	bc 01       	movw	r22, r24
    35f6:	cd 01       	movw	r24, r26
    35f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35fc:	dc 01       	movw	r26, r24
    35fe:	cb 01       	movw	r24, r22
    3600:	98 ab       	std	Y+48, r25	; 0x30
    3602:	8f a7       	std	Y+47, r24	; 0x2f
    3604:	0f c0       	rjmp	.+30     	; 0x3624 <SevSeg2x1_VidLoading+0x6bc>
    3606:	88 ec       	ldi	r24, 0xC8	; 200
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	9e a7       	std	Y+46, r25	; 0x2e
    360c:	8d a7       	std	Y+45, r24	; 0x2d
    360e:	8d a5       	ldd	r24, Y+45	; 0x2d
    3610:	9e a5       	ldd	r25, Y+46	; 0x2e
    3612:	01 97       	sbiw	r24, 0x01	; 1
    3614:	f1 f7       	brne	.-4      	; 0x3612 <SevSeg2x1_VidLoading+0x6aa>
    3616:	9e a7       	std	Y+46, r25	; 0x2e
    3618:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    361a:	8f a5       	ldd	r24, Y+47	; 0x2f
    361c:	98 a9       	ldd	r25, Y+48	; 0x30
    361e:	01 97       	sbiw	r24, 0x01	; 1
    3620:	98 ab       	std	Y+48, r25	; 0x30
    3622:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3624:	8f a5       	ldd	r24, Y+47	; 0x2f
    3626:	98 a9       	ldd	r25, Y+48	; 0x30
    3628:	00 97       	sbiw	r24, 0x00	; 0
    362a:	69 f7       	brne	.-38     	; 0x3606 <SevSeg2x1_VidLoading+0x69e>
    362c:	14 c0       	rjmp	.+40     	; 0x3656 <SevSeg2x1_VidLoading+0x6ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    362e:	69 a9       	ldd	r22, Y+49	; 0x31
    3630:	7a a9       	ldd	r23, Y+50	; 0x32
    3632:	8b a9       	ldd	r24, Y+51	; 0x33
    3634:	9c a9       	ldd	r25, Y+52	; 0x34
    3636:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    363a:	dc 01       	movw	r26, r24
    363c:	cb 01       	movw	r24, r22
    363e:	98 ab       	std	Y+48, r25	; 0x30
    3640:	8f a7       	std	Y+47, r24	; 0x2f
    3642:	8f a5       	ldd	r24, Y+47	; 0x2f
    3644:	98 a9       	ldd	r25, Y+48	; 0x30
    3646:	9c a7       	std	Y+44, r25	; 0x2c
    3648:	8b a7       	std	Y+43, r24	; 0x2b
    364a:	8b a5       	ldd	r24, Y+43	; 0x2b
    364c:	9c a5       	ldd	r25, Y+44	; 0x2c
    364e:	01 97       	sbiw	r24, 0x01	; 1
    3650:	f1 f7       	brne	.-4      	; 0x364e <SevSeg2x1_VidLoading+0x6e6>
    3652:	9c a7       	std	Y+44, r25	; 0x2c
    3654:	8b a7       	std	Y+43, r24	; 0x2b
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadE);
    3656:	82 e0       	ldi	r24, 0x02	; 2
    3658:	6f ee       	ldi	r22, 0xEF	; 239
    365a:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    365e:	fe 01       	movw	r30, r28
    3660:	ef 58       	subi	r30, 0x8F	; 143
    3662:	ff 4f       	sbci	r31, 0xFF	; 255
    3664:	80 81       	ld	r24, Z
    3666:	91 81       	ldd	r25, Z+1	; 0x01
    3668:	cc 01       	movw	r24, r24
    366a:	a0 e0       	ldi	r26, 0x00	; 0
    366c:	b0 e0       	ldi	r27, 0x00	; 0
    366e:	bc 01       	movw	r22, r24
    3670:	cd 01       	movw	r24, r26
    3672:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3676:	dc 01       	movw	r26, r24
    3678:	cb 01       	movw	r24, r22
    367a:	8f a3       	std	Y+39, r24	; 0x27
    367c:	98 a7       	std	Y+40, r25	; 0x28
    367e:	a9 a7       	std	Y+41, r26	; 0x29
    3680:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3682:	6f a1       	ldd	r22, Y+39	; 0x27
    3684:	78 a5       	ldd	r23, Y+40	; 0x28
    3686:	89 a5       	ldd	r24, Y+41	; 0x29
    3688:	9a a5       	ldd	r25, Y+42	; 0x2a
    368a:	20 e0       	ldi	r18, 0x00	; 0
    368c:	30 e0       	ldi	r19, 0x00	; 0
    368e:	4a ef       	ldi	r20, 0xFA	; 250
    3690:	54 e4       	ldi	r21, 0x44	; 68
    3692:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3696:	dc 01       	movw	r26, r24
    3698:	cb 01       	movw	r24, r22
    369a:	8b a3       	std	Y+35, r24	; 0x23
    369c:	9c a3       	std	Y+36, r25	; 0x24
    369e:	ad a3       	std	Y+37, r26	; 0x25
    36a0:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    36a2:	6b a1       	ldd	r22, Y+35	; 0x23
    36a4:	7c a1       	ldd	r23, Y+36	; 0x24
    36a6:	8d a1       	ldd	r24, Y+37	; 0x25
    36a8:	9e a1       	ldd	r25, Y+38	; 0x26
    36aa:	20 e0       	ldi	r18, 0x00	; 0
    36ac:	30 e0       	ldi	r19, 0x00	; 0
    36ae:	40 e8       	ldi	r20, 0x80	; 128
    36b0:	5f e3       	ldi	r21, 0x3F	; 63
    36b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    36b6:	88 23       	and	r24, r24
    36b8:	2c f4       	brge	.+10     	; 0x36c4 <SevSeg2x1_VidLoading+0x75c>
		__ticks = 1;
    36ba:	81 e0       	ldi	r24, 0x01	; 1
    36bc:	90 e0       	ldi	r25, 0x00	; 0
    36be:	9a a3       	std	Y+34, r25	; 0x22
    36c0:	89 a3       	std	Y+33, r24	; 0x21
    36c2:	3f c0       	rjmp	.+126    	; 0x3742 <SevSeg2x1_VidLoading+0x7da>
	else if (__tmp > 65535)
    36c4:	6b a1       	ldd	r22, Y+35	; 0x23
    36c6:	7c a1       	ldd	r23, Y+36	; 0x24
    36c8:	8d a1       	ldd	r24, Y+37	; 0x25
    36ca:	9e a1       	ldd	r25, Y+38	; 0x26
    36cc:	20 e0       	ldi	r18, 0x00	; 0
    36ce:	3f ef       	ldi	r19, 0xFF	; 255
    36d0:	4f e7       	ldi	r20, 0x7F	; 127
    36d2:	57 e4       	ldi	r21, 0x47	; 71
    36d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    36d8:	18 16       	cp	r1, r24
    36da:	4c f5       	brge	.+82     	; 0x372e <SevSeg2x1_VidLoading+0x7c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36dc:	6f a1       	ldd	r22, Y+39	; 0x27
    36de:	78 a5       	ldd	r23, Y+40	; 0x28
    36e0:	89 a5       	ldd	r24, Y+41	; 0x29
    36e2:	9a a5       	ldd	r25, Y+42	; 0x2a
    36e4:	20 e0       	ldi	r18, 0x00	; 0
    36e6:	30 e0       	ldi	r19, 0x00	; 0
    36e8:	40 e2       	ldi	r20, 0x20	; 32
    36ea:	51 e4       	ldi	r21, 0x41	; 65
    36ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36f0:	dc 01       	movw	r26, r24
    36f2:	cb 01       	movw	r24, r22
    36f4:	bc 01       	movw	r22, r24
    36f6:	cd 01       	movw	r24, r26
    36f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36fc:	dc 01       	movw	r26, r24
    36fe:	cb 01       	movw	r24, r22
    3700:	9a a3       	std	Y+34, r25	; 0x22
    3702:	89 a3       	std	Y+33, r24	; 0x21
    3704:	0f c0       	rjmp	.+30     	; 0x3724 <SevSeg2x1_VidLoading+0x7bc>
    3706:	88 ec       	ldi	r24, 0xC8	; 200
    3708:	90 e0       	ldi	r25, 0x00	; 0
    370a:	98 a3       	std	Y+32, r25	; 0x20
    370c:	8f 8f       	std	Y+31, r24	; 0x1f
    370e:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3710:	98 a1       	ldd	r25, Y+32	; 0x20
    3712:	01 97       	sbiw	r24, 0x01	; 1
    3714:	f1 f7       	brne	.-4      	; 0x3712 <SevSeg2x1_VidLoading+0x7aa>
    3716:	98 a3       	std	Y+32, r25	; 0x20
    3718:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    371a:	89 a1       	ldd	r24, Y+33	; 0x21
    371c:	9a a1       	ldd	r25, Y+34	; 0x22
    371e:	01 97       	sbiw	r24, 0x01	; 1
    3720:	9a a3       	std	Y+34, r25	; 0x22
    3722:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3724:	89 a1       	ldd	r24, Y+33	; 0x21
    3726:	9a a1       	ldd	r25, Y+34	; 0x22
    3728:	00 97       	sbiw	r24, 0x00	; 0
    372a:	69 f7       	brne	.-38     	; 0x3706 <SevSeg2x1_VidLoading+0x79e>
    372c:	14 c0       	rjmp	.+40     	; 0x3756 <SevSeg2x1_VidLoading+0x7ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    372e:	6b a1       	ldd	r22, Y+35	; 0x23
    3730:	7c a1       	ldd	r23, Y+36	; 0x24
    3732:	8d a1       	ldd	r24, Y+37	; 0x25
    3734:	9e a1       	ldd	r25, Y+38	; 0x26
    3736:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    373a:	dc 01       	movw	r26, r24
    373c:	cb 01       	movw	r24, r22
    373e:	9a a3       	std	Y+34, r25	; 0x22
    3740:	89 a3       	std	Y+33, r24	; 0x21
    3742:	89 a1       	ldd	r24, Y+33	; 0x21
    3744:	9a a1       	ldd	r25, Y+34	; 0x22
    3746:	9e 8f       	std	Y+30, r25	; 0x1e
    3748:	8d 8f       	std	Y+29, r24	; 0x1d
    374a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    374c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    374e:	01 97       	sbiw	r24, 0x01	; 1
    3750:	f1 f7       	brne	.-4      	; 0x374e <SevSeg2x1_VidLoading+0x7e6>
    3752:	9e 8f       	std	Y+30, r25	; 0x1e
    3754:	8d 8f       	std	Y+29, r24	; 0x1d
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadF);
    3756:	82 e0       	ldi	r24, 0x02	; 2
    3758:	6f ed       	ldi	r22, 0xDF	; 223
    375a:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    375e:	fe 01       	movw	r30, r28
    3760:	ef 58       	subi	r30, 0x8F	; 143
    3762:	ff 4f       	sbci	r31, 0xFF	; 255
    3764:	80 81       	ld	r24, Z
    3766:	91 81       	ldd	r25, Z+1	; 0x01
    3768:	cc 01       	movw	r24, r24
    376a:	a0 e0       	ldi	r26, 0x00	; 0
    376c:	b0 e0       	ldi	r27, 0x00	; 0
    376e:	bc 01       	movw	r22, r24
    3770:	cd 01       	movw	r24, r26
    3772:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3776:	dc 01       	movw	r26, r24
    3778:	cb 01       	movw	r24, r22
    377a:	89 8f       	std	Y+25, r24	; 0x19
    377c:	9a 8f       	std	Y+26, r25	; 0x1a
    377e:	ab 8f       	std	Y+27, r26	; 0x1b
    3780:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3782:	69 8d       	ldd	r22, Y+25	; 0x19
    3784:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3786:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3788:	9c 8d       	ldd	r25, Y+28	; 0x1c
    378a:	20 e0       	ldi	r18, 0x00	; 0
    378c:	30 e0       	ldi	r19, 0x00	; 0
    378e:	4a ef       	ldi	r20, 0xFA	; 250
    3790:	54 e4       	ldi	r21, 0x44	; 68
    3792:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3796:	dc 01       	movw	r26, r24
    3798:	cb 01       	movw	r24, r22
    379a:	8d 8b       	std	Y+21, r24	; 0x15
    379c:	9e 8b       	std	Y+22, r25	; 0x16
    379e:	af 8b       	std	Y+23, r26	; 0x17
    37a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    37a2:	6d 89       	ldd	r22, Y+21	; 0x15
    37a4:	7e 89       	ldd	r23, Y+22	; 0x16
    37a6:	8f 89       	ldd	r24, Y+23	; 0x17
    37a8:	98 8d       	ldd	r25, Y+24	; 0x18
    37aa:	20 e0       	ldi	r18, 0x00	; 0
    37ac:	30 e0       	ldi	r19, 0x00	; 0
    37ae:	40 e8       	ldi	r20, 0x80	; 128
    37b0:	5f e3       	ldi	r21, 0x3F	; 63
    37b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    37b6:	88 23       	and	r24, r24
    37b8:	2c f4       	brge	.+10     	; 0x37c4 <SevSeg2x1_VidLoading+0x85c>
		__ticks = 1;
    37ba:	81 e0       	ldi	r24, 0x01	; 1
    37bc:	90 e0       	ldi	r25, 0x00	; 0
    37be:	9c 8b       	std	Y+20, r25	; 0x14
    37c0:	8b 8b       	std	Y+19, r24	; 0x13
    37c2:	3f c0       	rjmp	.+126    	; 0x3842 <SevSeg2x1_VidLoading+0x8da>
	else if (__tmp > 65535)
    37c4:	6d 89       	ldd	r22, Y+21	; 0x15
    37c6:	7e 89       	ldd	r23, Y+22	; 0x16
    37c8:	8f 89       	ldd	r24, Y+23	; 0x17
    37ca:	98 8d       	ldd	r25, Y+24	; 0x18
    37cc:	20 e0       	ldi	r18, 0x00	; 0
    37ce:	3f ef       	ldi	r19, 0xFF	; 255
    37d0:	4f e7       	ldi	r20, 0x7F	; 127
    37d2:	57 e4       	ldi	r21, 0x47	; 71
    37d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37d8:	18 16       	cp	r1, r24
    37da:	4c f5       	brge	.+82     	; 0x382e <SevSeg2x1_VidLoading+0x8c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37dc:	69 8d       	ldd	r22, Y+25	; 0x19
    37de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    37e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    37e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    37e4:	20 e0       	ldi	r18, 0x00	; 0
    37e6:	30 e0       	ldi	r19, 0x00	; 0
    37e8:	40 e2       	ldi	r20, 0x20	; 32
    37ea:	51 e4       	ldi	r21, 0x41	; 65
    37ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37f0:	dc 01       	movw	r26, r24
    37f2:	cb 01       	movw	r24, r22
    37f4:	bc 01       	movw	r22, r24
    37f6:	cd 01       	movw	r24, r26
    37f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37fc:	dc 01       	movw	r26, r24
    37fe:	cb 01       	movw	r24, r22
    3800:	9c 8b       	std	Y+20, r25	; 0x14
    3802:	8b 8b       	std	Y+19, r24	; 0x13
    3804:	0f c0       	rjmp	.+30     	; 0x3824 <SevSeg2x1_VidLoading+0x8bc>
    3806:	88 ec       	ldi	r24, 0xC8	; 200
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	9a 8b       	std	Y+18, r25	; 0x12
    380c:	89 8b       	std	Y+17, r24	; 0x11
    380e:	89 89       	ldd	r24, Y+17	; 0x11
    3810:	9a 89       	ldd	r25, Y+18	; 0x12
    3812:	01 97       	sbiw	r24, 0x01	; 1
    3814:	f1 f7       	brne	.-4      	; 0x3812 <SevSeg2x1_VidLoading+0x8aa>
    3816:	9a 8b       	std	Y+18, r25	; 0x12
    3818:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    381a:	8b 89       	ldd	r24, Y+19	; 0x13
    381c:	9c 89       	ldd	r25, Y+20	; 0x14
    381e:	01 97       	sbiw	r24, 0x01	; 1
    3820:	9c 8b       	std	Y+20, r25	; 0x14
    3822:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3824:	8b 89       	ldd	r24, Y+19	; 0x13
    3826:	9c 89       	ldd	r25, Y+20	; 0x14
    3828:	00 97       	sbiw	r24, 0x00	; 0
    382a:	69 f7       	brne	.-38     	; 0x3806 <SevSeg2x1_VidLoading+0x89e>
    382c:	14 c0       	rjmp	.+40     	; 0x3856 <SevSeg2x1_VidLoading+0x8ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    382e:	6d 89       	ldd	r22, Y+21	; 0x15
    3830:	7e 89       	ldd	r23, Y+22	; 0x16
    3832:	8f 89       	ldd	r24, Y+23	; 0x17
    3834:	98 8d       	ldd	r25, Y+24	; 0x18
    3836:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    383a:	dc 01       	movw	r26, r24
    383c:	cb 01       	movw	r24, r22
    383e:	9c 8b       	std	Y+20, r25	; 0x14
    3840:	8b 8b       	std	Y+19, r24	; 0x13
    3842:	8b 89       	ldd	r24, Y+19	; 0x13
    3844:	9c 89       	ldd	r25, Y+20	; 0x14
    3846:	98 8b       	std	Y+16, r25	; 0x10
    3848:	8f 87       	std	Y+15, r24	; 0x0f
    384a:	8f 85       	ldd	r24, Y+15	; 0x0f
    384c:	98 89       	ldd	r25, Y+16	; 0x10
    384e:	01 97       	sbiw	r24, 0x01	; 1
    3850:	f1 f7       	brne	.-4      	; 0x384e <SevSeg2x1_VidLoading+0x8e6>
    3852:	98 8b       	std	Y+16, r25	; 0x10
    3854:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_VidSetPortValue(_7seg2x1_DataPort, SevSeg_loadA);
    3856:	82 e0       	ldi	r24, 0x02	; 2
    3858:	6e ef       	ldi	r22, 0xFE	; 254
    385a:	0e 94 a4 08 	call	0x1148	; 0x1148 <DIO_VidSetPortValue>
	_delay_ms(LOC_u8Speed);
    385e:	fe 01       	movw	r30, r28
    3860:	ef 58       	subi	r30, 0x8F	; 143
    3862:	ff 4f       	sbci	r31, 0xFF	; 255
    3864:	80 81       	ld	r24, Z
    3866:	91 81       	ldd	r25, Z+1	; 0x01
    3868:	cc 01       	movw	r24, r24
    386a:	a0 e0       	ldi	r26, 0x00	; 0
    386c:	b0 e0       	ldi	r27, 0x00	; 0
    386e:	bc 01       	movw	r22, r24
    3870:	cd 01       	movw	r24, r26
    3872:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__floatunsisf>
    3876:	dc 01       	movw	r26, r24
    3878:	cb 01       	movw	r24, r22
    387a:	8b 87       	std	Y+11, r24	; 0x0b
    387c:	9c 87       	std	Y+12, r25	; 0x0c
    387e:	ad 87       	std	Y+13, r26	; 0x0d
    3880:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3882:	6b 85       	ldd	r22, Y+11	; 0x0b
    3884:	7c 85       	ldd	r23, Y+12	; 0x0c
    3886:	8d 85       	ldd	r24, Y+13	; 0x0d
    3888:	9e 85       	ldd	r25, Y+14	; 0x0e
    388a:	20 e0       	ldi	r18, 0x00	; 0
    388c:	30 e0       	ldi	r19, 0x00	; 0
    388e:	4a ef       	ldi	r20, 0xFA	; 250
    3890:	54 e4       	ldi	r21, 0x44	; 68
    3892:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3896:	dc 01       	movw	r26, r24
    3898:	cb 01       	movw	r24, r22
    389a:	8f 83       	std	Y+7, r24	; 0x07
    389c:	98 87       	std	Y+8, r25	; 0x08
    389e:	a9 87       	std	Y+9, r26	; 0x09
    38a0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    38a2:	6f 81       	ldd	r22, Y+7	; 0x07
    38a4:	78 85       	ldd	r23, Y+8	; 0x08
    38a6:	89 85       	ldd	r24, Y+9	; 0x09
    38a8:	9a 85       	ldd	r25, Y+10	; 0x0a
    38aa:	20 e0       	ldi	r18, 0x00	; 0
    38ac:	30 e0       	ldi	r19, 0x00	; 0
    38ae:	40 e8       	ldi	r20, 0x80	; 128
    38b0:	5f e3       	ldi	r21, 0x3F	; 63
    38b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    38b6:	88 23       	and	r24, r24
    38b8:	2c f4       	brge	.+10     	; 0x38c4 <SevSeg2x1_VidLoading+0x95c>
		__ticks = 1;
    38ba:	81 e0       	ldi	r24, 0x01	; 1
    38bc:	90 e0       	ldi	r25, 0x00	; 0
    38be:	9e 83       	std	Y+6, r25	; 0x06
    38c0:	8d 83       	std	Y+5, r24	; 0x05
    38c2:	3f c0       	rjmp	.+126    	; 0x3942 <SevSeg2x1_VidLoading+0x9da>
	else if (__tmp > 65535)
    38c4:	6f 81       	ldd	r22, Y+7	; 0x07
    38c6:	78 85       	ldd	r23, Y+8	; 0x08
    38c8:	89 85       	ldd	r24, Y+9	; 0x09
    38ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    38cc:	20 e0       	ldi	r18, 0x00	; 0
    38ce:	3f ef       	ldi	r19, 0xFF	; 255
    38d0:	4f e7       	ldi	r20, 0x7F	; 127
    38d2:	57 e4       	ldi	r21, 0x47	; 71
    38d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    38d8:	18 16       	cp	r1, r24
    38da:	4c f5       	brge	.+82     	; 0x392e <SevSeg2x1_VidLoading+0x9c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38dc:	6b 85       	ldd	r22, Y+11	; 0x0b
    38de:	7c 85       	ldd	r23, Y+12	; 0x0c
    38e0:	8d 85       	ldd	r24, Y+13	; 0x0d
    38e2:	9e 85       	ldd	r25, Y+14	; 0x0e
    38e4:	20 e0       	ldi	r18, 0x00	; 0
    38e6:	30 e0       	ldi	r19, 0x00	; 0
    38e8:	40 e2       	ldi	r20, 0x20	; 32
    38ea:	51 e4       	ldi	r21, 0x41	; 65
    38ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38f0:	dc 01       	movw	r26, r24
    38f2:	cb 01       	movw	r24, r22
    38f4:	bc 01       	movw	r22, r24
    38f6:	cd 01       	movw	r24, r26
    38f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38fc:	dc 01       	movw	r26, r24
    38fe:	cb 01       	movw	r24, r22
    3900:	9e 83       	std	Y+6, r25	; 0x06
    3902:	8d 83       	std	Y+5, r24	; 0x05
    3904:	0f c0       	rjmp	.+30     	; 0x3924 <SevSeg2x1_VidLoading+0x9bc>
    3906:	88 ec       	ldi	r24, 0xC8	; 200
    3908:	90 e0       	ldi	r25, 0x00	; 0
    390a:	9c 83       	std	Y+4, r25	; 0x04
    390c:	8b 83       	std	Y+3, r24	; 0x03
    390e:	8b 81       	ldd	r24, Y+3	; 0x03
    3910:	9c 81       	ldd	r25, Y+4	; 0x04
    3912:	01 97       	sbiw	r24, 0x01	; 1
    3914:	f1 f7       	brne	.-4      	; 0x3912 <SevSeg2x1_VidLoading+0x9aa>
    3916:	9c 83       	std	Y+4, r25	; 0x04
    3918:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    391a:	8d 81       	ldd	r24, Y+5	; 0x05
    391c:	9e 81       	ldd	r25, Y+6	; 0x06
    391e:	01 97       	sbiw	r24, 0x01	; 1
    3920:	9e 83       	std	Y+6, r25	; 0x06
    3922:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3924:	8d 81       	ldd	r24, Y+5	; 0x05
    3926:	9e 81       	ldd	r25, Y+6	; 0x06
    3928:	00 97       	sbiw	r24, 0x00	; 0
    392a:	69 f7       	brne	.-38     	; 0x3906 <SevSeg2x1_VidLoading+0x99e>
    392c:	14 c0       	rjmp	.+40     	; 0x3956 <SevSeg2x1_VidLoading+0x9ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    392e:	6f 81       	ldd	r22, Y+7	; 0x07
    3930:	78 85       	ldd	r23, Y+8	; 0x08
    3932:	89 85       	ldd	r24, Y+9	; 0x09
    3934:	9a 85       	ldd	r25, Y+10	; 0x0a
    3936:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    393a:	dc 01       	movw	r26, r24
    393c:	cb 01       	movw	r24, r22
    393e:	9e 83       	std	Y+6, r25	; 0x06
    3940:	8d 83       	std	Y+5, r24	; 0x05
    3942:	8d 81       	ldd	r24, Y+5	; 0x05
    3944:	9e 81       	ldd	r25, Y+6	; 0x06
    3946:	9a 83       	std	Y+2, r25	; 0x02
    3948:	89 83       	std	Y+1, r24	; 0x01
    394a:	89 81       	ldd	r24, Y+1	; 0x01
    394c:	9a 81       	ldd	r25, Y+2	; 0x02
    394e:	01 97       	sbiw	r24, 0x01	; 1
    3950:	f1 f7       	brne	.-4      	; 0x394e <SevSeg2x1_VidLoading+0x9e6>
    3952:	9a 83       	std	Y+2, r25	; 0x02
    3954:	89 83       	std	Y+1, r24	; 0x01
	DIO_VidSetPinValue(_7seg2x1_CTRLPort, _7seg2x1_CTRLLP, Disable); //Disable Right Seven Segment
    3956:	81 e0       	ldi	r24, 0x01	; 1
    3958:	61 e0       	ldi	r22, 0x01	; 1
    395a:	40 e0       	ldi	r20, 0x00	; 0
    395c:	0e 94 63 07 	call	0xec6	; 0xec6 <DIO_VidSetPinValue>
}
    3960:	ce 58       	subi	r28, 0x8E	; 142
    3962:	df 4f       	sbci	r29, 0xFF	; 255
    3964:	0f b6       	in	r0, 0x3f	; 63
    3966:	f8 94       	cli
    3968:	de bf       	out	0x3e, r29	; 62
    396a:	0f be       	out	0x3f, r0	; 63
    396c:	cd bf       	out	0x3d, r28	; 61
    396e:	cf 91       	pop	r28
    3970:	df 91       	pop	r29
    3972:	1f 91       	pop	r17
    3974:	0f 91       	pop	r16
    3976:	08 95       	ret

00003978 <main>:

#include <util/delay.h>


int main (void)
{
    3978:	df 93       	push	r29
    397a:	cf 93       	push	r28
    397c:	cd b7       	in	r28, 0x3d	; 61
    397e:	de b7       	in	r29, 0x3e	; 62
    3980:	2f 97       	sbiw	r28, 0x0f	; 15
    3982:	0f b6       	in	r0, 0x3f	; 63
    3984:	f8 94       	cli
    3986:	de bf       	out	0x3e, r29	; 62
    3988:	0f be       	out	0x3f, r0	; 63
    398a:	cd bf       	out	0x3d, r28	; 61
	LCD_VidInit();
    398c:	0e 94 9f 09 	call	0x133e	; 0x133e <LCD_VidInit>
*/


	while(1)
	{
	LCD_VidWriteString("Mostafa");
    3990:	80 e6       	ldi	r24, 0x60	; 96
    3992:	90 e0       	ldi	r25, 0x00	; 0
    3994:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <LCD_VidWriteString>
		for (u8 i=0; i<16; i++)
    3998:	1f 86       	std	Y+15, r1	; 0x0f
    399a:	75 c0       	rjmp	.+234    	; 0x3a86 <main+0x10e>
    399c:	80 e0       	ldi	r24, 0x00	; 0
    399e:	90 e0       	ldi	r25, 0x00	; 0
    39a0:	aa ef       	ldi	r26, 0xFA	; 250
    39a2:	b3 e4       	ldi	r27, 0x43	; 67
    39a4:	8b 87       	std	Y+11, r24	; 0x0b
    39a6:	9c 87       	std	Y+12, r25	; 0x0c
    39a8:	ad 87       	std	Y+13, r26	; 0x0d
    39aa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39ac:	6b 85       	ldd	r22, Y+11	; 0x0b
    39ae:	7c 85       	ldd	r23, Y+12	; 0x0c
    39b0:	8d 85       	ldd	r24, Y+13	; 0x0d
    39b2:	9e 85       	ldd	r25, Y+14	; 0x0e
    39b4:	20 e0       	ldi	r18, 0x00	; 0
    39b6:	30 e0       	ldi	r19, 0x00	; 0
    39b8:	4a ef       	ldi	r20, 0xFA	; 250
    39ba:	54 e4       	ldi	r21, 0x44	; 68
    39bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    39c0:	dc 01       	movw	r26, r24
    39c2:	cb 01       	movw	r24, r22
    39c4:	8f 83       	std	Y+7, r24	; 0x07
    39c6:	98 87       	std	Y+8, r25	; 0x08
    39c8:	a9 87       	std	Y+9, r26	; 0x09
    39ca:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    39cc:	6f 81       	ldd	r22, Y+7	; 0x07
    39ce:	78 85       	ldd	r23, Y+8	; 0x08
    39d0:	89 85       	ldd	r24, Y+9	; 0x09
    39d2:	9a 85       	ldd	r25, Y+10	; 0x0a
    39d4:	20 e0       	ldi	r18, 0x00	; 0
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	40 e8       	ldi	r20, 0x80	; 128
    39da:	5f e3       	ldi	r21, 0x3F	; 63
    39dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    39e0:	88 23       	and	r24, r24
    39e2:	2c f4       	brge	.+10     	; 0x39ee <main+0x76>
		__ticks = 1;
    39e4:	81 e0       	ldi	r24, 0x01	; 1
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	9e 83       	std	Y+6, r25	; 0x06
    39ea:	8d 83       	std	Y+5, r24	; 0x05
    39ec:	3f c0       	rjmp	.+126    	; 0x3a6c <main+0xf4>
	else if (__tmp > 65535)
    39ee:	6f 81       	ldd	r22, Y+7	; 0x07
    39f0:	78 85       	ldd	r23, Y+8	; 0x08
    39f2:	89 85       	ldd	r24, Y+9	; 0x09
    39f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    39f6:	20 e0       	ldi	r18, 0x00	; 0
    39f8:	3f ef       	ldi	r19, 0xFF	; 255
    39fa:	4f e7       	ldi	r20, 0x7F	; 127
    39fc:	57 e4       	ldi	r21, 0x47	; 71
    39fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a02:	18 16       	cp	r1, r24
    3a04:	4c f5       	brge	.+82     	; 0x3a58 <main+0xe0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a06:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a08:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a0e:	20 e0       	ldi	r18, 0x00	; 0
    3a10:	30 e0       	ldi	r19, 0x00	; 0
    3a12:	40 e2       	ldi	r20, 0x20	; 32
    3a14:	51 e4       	ldi	r21, 0x41	; 65
    3a16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a1a:	dc 01       	movw	r26, r24
    3a1c:	cb 01       	movw	r24, r22
    3a1e:	bc 01       	movw	r22, r24
    3a20:	cd 01       	movw	r24, r26
    3a22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a26:	dc 01       	movw	r26, r24
    3a28:	cb 01       	movw	r24, r22
    3a2a:	9e 83       	std	Y+6, r25	; 0x06
    3a2c:	8d 83       	std	Y+5, r24	; 0x05
    3a2e:	0f c0       	rjmp	.+30     	; 0x3a4e <main+0xd6>
    3a30:	88 ec       	ldi	r24, 0xC8	; 200
    3a32:	90 e0       	ldi	r25, 0x00	; 0
    3a34:	9c 83       	std	Y+4, r25	; 0x04
    3a36:	8b 83       	std	Y+3, r24	; 0x03
    3a38:	8b 81       	ldd	r24, Y+3	; 0x03
    3a3a:	9c 81       	ldd	r25, Y+4	; 0x04
    3a3c:	01 97       	sbiw	r24, 0x01	; 1
    3a3e:	f1 f7       	brne	.-4      	; 0x3a3c <main+0xc4>
    3a40:	9c 83       	std	Y+4, r25	; 0x04
    3a42:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a44:	8d 81       	ldd	r24, Y+5	; 0x05
    3a46:	9e 81       	ldd	r25, Y+6	; 0x06
    3a48:	01 97       	sbiw	r24, 0x01	; 1
    3a4a:	9e 83       	std	Y+6, r25	; 0x06
    3a4c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3a4e:	8d 81       	ldd	r24, Y+5	; 0x05
    3a50:	9e 81       	ldd	r25, Y+6	; 0x06
    3a52:	00 97       	sbiw	r24, 0x00	; 0
    3a54:	69 f7       	brne	.-38     	; 0x3a30 <main+0xb8>
    3a56:	14 c0       	rjmp	.+40     	; 0x3a80 <main+0x108>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a58:	6f 81       	ldd	r22, Y+7	; 0x07
    3a5a:	78 85       	ldd	r23, Y+8	; 0x08
    3a5c:	89 85       	ldd	r24, Y+9	; 0x09
    3a5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a60:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a64:	dc 01       	movw	r26, r24
    3a66:	cb 01       	movw	r24, r22
    3a68:	9e 83       	std	Y+6, r25	; 0x06
    3a6a:	8d 83       	std	Y+5, r24	; 0x05
    3a6c:	8d 81       	ldd	r24, Y+5	; 0x05
    3a6e:	9e 81       	ldd	r25, Y+6	; 0x06
    3a70:	9a 83       	std	Y+2, r25	; 0x02
    3a72:	89 83       	std	Y+1, r24	; 0x01
    3a74:	89 81       	ldd	r24, Y+1	; 0x01
    3a76:	9a 81       	ldd	r25, Y+2	; 0x02
    3a78:	01 97       	sbiw	r24, 0x01	; 1
    3a7a:	f1 f7       	brne	.-4      	; 0x3a78 <main+0x100>
    3a7c:	9a 83       	std	Y+2, r25	; 0x02
    3a7e:	89 83       	std	Y+1, r24	; 0x01
    3a80:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a82:	8f 5f       	subi	r24, 0xFF	; 255
    3a84:	8f 87       	std	Y+15, r24	; 0x0f
    3a86:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a88:	80 31       	cpi	r24, 0x10	; 16
    3a8a:	08 f4       	brcc	.+2      	; 0x3a8e <main+0x116>
    3a8c:	87 cf       	rjmp	.-242    	; 0x399c <main+0x24>
		{
		//	LCD_VidWriteCommand(DisplayShiftR);
			_delay_ms(500);
		}
		LCD_VidWriteCommand(ReturnHome);
    3a8e:	82 e0       	ldi	r24, 0x02	; 2
    3a90:	0e 94 96 0b 	call	0x172c	; 0x172c <LCD_VidWriteCommand>
    3a94:	7d cf       	rjmp	.-262    	; 0x3990 <main+0x18>

00003a96 <__udivmodqi4>:
    3a96:	99 1b       	sub	r25, r25
    3a98:	79 e0       	ldi	r23, 0x09	; 9
    3a9a:	04 c0       	rjmp	.+8      	; 0x3aa4 <__udivmodqi4_ep>

00003a9c <__udivmodqi4_loop>:
    3a9c:	99 1f       	adc	r25, r25
    3a9e:	96 17       	cp	r25, r22
    3aa0:	08 f0       	brcs	.+2      	; 0x3aa4 <__udivmodqi4_ep>
    3aa2:	96 1b       	sub	r25, r22

00003aa4 <__udivmodqi4_ep>:
    3aa4:	88 1f       	adc	r24, r24
    3aa6:	7a 95       	dec	r23
    3aa8:	c9 f7       	brne	.-14     	; 0x3a9c <__udivmodqi4_loop>
    3aaa:	80 95       	com	r24
    3aac:	08 95       	ret

00003aae <__divmodqi4>:
    3aae:	87 fb       	bst	r24, 7
    3ab0:	08 2e       	mov	r0, r24
    3ab2:	06 26       	eor	r0, r22
    3ab4:	87 fd       	sbrc	r24, 7
    3ab6:	81 95       	neg	r24
    3ab8:	67 fd       	sbrc	r22, 7
    3aba:	61 95       	neg	r22
    3abc:	ec df       	rcall	.-40     	; 0x3a96 <__udivmodqi4>
    3abe:	0e f4       	brtc	.+2      	; 0x3ac2 <__divmodqi4_1>
    3ac0:	91 95       	neg	r25

00003ac2 <__divmodqi4_1>:
    3ac2:	07 fc       	sbrc	r0, 7
    3ac4:	81 95       	neg	r24

00003ac6 <__divmodqi4_exit>:
    3ac6:	08 95       	ret

00003ac8 <__prologue_saves__>:
    3ac8:	2f 92       	push	r2
    3aca:	3f 92       	push	r3
    3acc:	4f 92       	push	r4
    3ace:	5f 92       	push	r5
    3ad0:	6f 92       	push	r6
    3ad2:	7f 92       	push	r7
    3ad4:	8f 92       	push	r8
    3ad6:	9f 92       	push	r9
    3ad8:	af 92       	push	r10
    3ada:	bf 92       	push	r11
    3adc:	cf 92       	push	r12
    3ade:	df 92       	push	r13
    3ae0:	ef 92       	push	r14
    3ae2:	ff 92       	push	r15
    3ae4:	0f 93       	push	r16
    3ae6:	1f 93       	push	r17
    3ae8:	cf 93       	push	r28
    3aea:	df 93       	push	r29
    3aec:	cd b7       	in	r28, 0x3d	; 61
    3aee:	de b7       	in	r29, 0x3e	; 62
    3af0:	ca 1b       	sub	r28, r26
    3af2:	db 0b       	sbc	r29, r27
    3af4:	0f b6       	in	r0, 0x3f	; 63
    3af6:	f8 94       	cli
    3af8:	de bf       	out	0x3e, r29	; 62
    3afa:	0f be       	out	0x3f, r0	; 63
    3afc:	cd bf       	out	0x3d, r28	; 61
    3afe:	09 94       	ijmp

00003b00 <__epilogue_restores__>:
    3b00:	2a 88       	ldd	r2, Y+18	; 0x12
    3b02:	39 88       	ldd	r3, Y+17	; 0x11
    3b04:	48 88       	ldd	r4, Y+16	; 0x10
    3b06:	5f 84       	ldd	r5, Y+15	; 0x0f
    3b08:	6e 84       	ldd	r6, Y+14	; 0x0e
    3b0a:	7d 84       	ldd	r7, Y+13	; 0x0d
    3b0c:	8c 84       	ldd	r8, Y+12	; 0x0c
    3b0e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3b10:	aa 84       	ldd	r10, Y+10	; 0x0a
    3b12:	b9 84       	ldd	r11, Y+9	; 0x09
    3b14:	c8 84       	ldd	r12, Y+8	; 0x08
    3b16:	df 80       	ldd	r13, Y+7	; 0x07
    3b18:	ee 80       	ldd	r14, Y+6	; 0x06
    3b1a:	fd 80       	ldd	r15, Y+5	; 0x05
    3b1c:	0c 81       	ldd	r16, Y+4	; 0x04
    3b1e:	1b 81       	ldd	r17, Y+3	; 0x03
    3b20:	aa 81       	ldd	r26, Y+2	; 0x02
    3b22:	b9 81       	ldd	r27, Y+1	; 0x01
    3b24:	ce 0f       	add	r28, r30
    3b26:	d1 1d       	adc	r29, r1
    3b28:	0f b6       	in	r0, 0x3f	; 63
    3b2a:	f8 94       	cli
    3b2c:	de bf       	out	0x3e, r29	; 62
    3b2e:	0f be       	out	0x3f, r0	; 63
    3b30:	cd bf       	out	0x3d, r28	; 61
    3b32:	ed 01       	movw	r28, r26
    3b34:	08 95       	ret

00003b36 <_exit>:
    3b36:	f8 94       	cli

00003b38 <__stop_program>:
    3b38:	ff cf       	rjmp	.-2      	; 0x3b38 <__stop_program>
