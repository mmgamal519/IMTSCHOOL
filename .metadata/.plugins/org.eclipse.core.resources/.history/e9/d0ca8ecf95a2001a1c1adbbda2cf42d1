/*
 * main.c
 *
 *  Created on: May 17, 2020
 *      Author: MGIsmail
 */

#include <avr/io.h>
#include <util/delay.h>
void DIO_VidCountUp_7SegViaOnePort	( u8 LOC_u8DataPort, u8 LOC_u8CTRLPort, u8 LOC_u8CTRLPinR, u8 LOC_u8CTRLPinL,
		u8 LOC_u8Intialvalue, u8 LOC_u8Endvalue, u8 LOC_u8Refresh);
void main (void)
{
DDRB=0x03;// PIN0 for common 1st segment || PIN1 for common 2nd segment
DDRC=0xff;
int count=0;
int segments[10]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,0x80,0x90};
while(1)
{
for (int i=0;i<10;i++)
{
PORTB=0x01;
PORTC=segments[i];
_delay_ms(90);
PORTB=0x02;
PORTC=segments[count];
_delay_ms(90);
if (i==9)
{count++;}
if (count==9)
{count=0;}
}
}
}
void DIO_VidCountUp_7SegViaOnePort	( u8 LOC_u8DataPort, u8 LOC_u8CTRLPort, u8 LOC_u8CTRLPinR, u8 LOC_u8CTRLPinL,
		u8 LOC_u8Intialvalue, u8 LOC_u8Endvalue, u8 LOC_u8Refresh)
{

	 // set port direction as output
	switch (LOC_u8DataPort)
			{
				case 0: DDRA = 0xff; break;
				case 1: DDRB = 0xff; break;
				case 2: DDRC = 0xff; break;
				case 3: DDRD = 0xff; break;
			}
	SET_BIT(LOC_u8CTRLPort,LOC_u8CTRLPinR); //set CTRL pins direction as output
	SET_BIT(LOC_u8CTRLPort,LOC_u8CTRLPinL);
	int L = 0;
	int R = 0;
	for (int count=LOC_u8Intialvalue; count<(LOC_u8Endvalue+1); count++)
	{
		L = count /10;
		R= count % 10;

		for (int z=0; z<LOC_u8Refresh; z++)
		{
			SET_BIT(LOC_u8CTRLPort, LOC_u8CTRLPinR);
			PORTC=_7Seg_array[R];
			_delay_ms(10);
			CLR_BIT(LOC_u8CTRLPort, LOC_u8CTRLPinR);
			SET_BIT(LOC_u8CTRLPort, LOC_u8CTRLPinL);
			PORTC=_7Seg_array[L];
			_delay_ms(10);
			CLR_BIT(LOC_u8CTRLPort, LOC_u8CTRLPinL);
		}
	}
